(function () {
    var $jscomp = $jscomp || {}; $jscomp.scope = {}; $jscomp.createTemplateTagFirstArg = function (a) { return a.raw = a }; $jscomp.createTemplateTagFirstArgWithRaw = function (a, b) { a.raw = b; return a }; $jscomp.arrayIteratorImpl = function (a) { var b = 0; return function () { return b < a.length ? { done: !1, value: a[b++] } : { done: !0 } } }; $jscomp.arrayIterator = function (a) { return { next: $jscomp.arrayIteratorImpl(a) } }; $jscomp.makeIterator = function (a) { var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator]; return b ? b.call(a) : $jscomp.arrayIterator(a) };
    $jscomp.arrayFromIterator = function (a) { for (var b, c = []; !(b = a.next()).done;)c.push(b.value); return c }; $jscomp.arrayFromIterable = function (a) { return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a)) }; $jscomp.ASSUME_ES5 = !1; $jscomp.ASSUME_NO_NATIVE_MAP = !1; $jscomp.ASSUME_NO_NATIVE_SET = !1; $jscomp.SIMPLE_FROUND_POLYFILL = !1; $jscomp.ISOLATE_POLYFILLS = !1; $jscomp.FORCE_POLYFILL_PROMISE = !1; $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
    $jscomp.objectCreate = $jscomp.ASSUME_ES5 || "function" == typeof Object.create ? Object.create : function (a) { var b = function () { }; b.prototype = a; return new b }; $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { if (a == Array.prototype || a == Object.prototype) return a; a[b] = c.value; return a };
    $jscomp.getGlobal = function (a) { a = ["object" == typeof globalThis && globalThis, a, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global]; for (var b = 0; b < a.length; ++b) { var c = a[b]; if (c && c.Math == Math) return c } throw Error("Cannot find global object"); }; $jscomp.global = $jscomp.getGlobal(this); $jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x"); $jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE; $jscomp.polyfills = {};
    $jscomp.propertyToPolyfillSymbol = {}; $jscomp.POLYFILL_PREFIX = "$jscp$"; var $jscomp$lookupPolyfilledValue = function (a, b) { var c = $jscomp.propertyToPolyfillSymbol[b]; if (null == c) return a[b]; c = a[c]; return void 0 !== c ? c : a[b] }; $jscomp.polyfill = function (a, b, c, d) { b && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(a, b, c, d) : $jscomp.polyfillUnisolated(a, b, c, d)) };
    $jscomp.polyfillUnisolated = function (a, b, c, d) { c = $jscomp.global; a = a.split("."); for (d = 0; d < a.length - 1; d++) { var e = a[d]; if (!(e in c)) return; c = c[e] } a = a[a.length - 1]; d = c[a]; b = b(d); b != d && null != b && $jscomp.defineProperty(c, a, { configurable: !0, writable: !0, value: b }) };
    $jscomp.polyfillIsolated = function (a, b, c, d) {
        var e = a.split("."); a = 1 === e.length; d = e[0]; d = !a && d in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global; for (var f = 0; f < e.length - 1; f++) { var g = e[f]; if (!(g in d)) return; d = d[g] } e = e[e.length - 1]; c = $jscomp.IS_SYMBOL_NATIVE && "es6" === c ? d[e] : null; b = b(c); null != b && (a ? $jscomp.defineProperty($jscomp.polyfills, e, { configurable: !0, writable: !0, value: b }) : b !== c && (void 0 === $jscomp.propertyToPolyfillSymbol[e] && (c = 1E9 * Math.random() >>> 0, $jscomp.propertyToPolyfillSymbol[e] = $jscomp.IS_SYMBOL_NATIVE ?
            $jscomp.global.Symbol(e) : $jscomp.POLYFILL_PREFIX + c + "$" + e), $jscomp.defineProperty(d, $jscomp.propertyToPolyfillSymbol[e], { configurable: !0, writable: !0, value: b })))
    };
    $jscomp.getConstructImplementation = function () {
        function a() { function c() { } new c; Reflect.construct(c, [], function () { }); return new c instanceof c } if ($jscomp.TRUST_ES6_POLYFILLS && "undefined" != typeof Reflect && Reflect.construct) { if (a()) return Reflect.construct; var b = Reflect.construct; return function (c, d, e) { c = b(c, d); e && Reflect.setPrototypeOf(c, e.prototype); return c } } return function (c, d, e) {
            void 0 === e && (e = c); e = $jscomp.objectCreate(e.prototype || Object.prototype); return Function.prototype.apply.call(c, e, d) ||
                e
        }
    }; $jscomp.construct = { valueOf: $jscomp.getConstructImplementation }.valueOf(); $jscomp.underscoreProtoCanBeSet = function () { var a = { a: !0 }, b = {}; try { return b.__proto__ = a, b.a } catch (c) { } return !1 }; $jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function (a, b) { a.__proto__ = b; if (a.__proto__ !== b) throw new TypeError(a + " is not extensible"); return a } : null;
    $jscomp.inherits = function (a, b) { a.prototype = $jscomp.objectCreate(b.prototype); a.prototype.constructor = a; if ($jscomp.setPrototypeOf) { var c = $jscomp.setPrototypeOf; c(a, b) } else for (c in b) if ("prototype" != c) if (Object.defineProperties) { var d = Object.getOwnPropertyDescriptor(b, c); d && Object.defineProperty(a, c, d) } else a[c] = b[c]; a.superClass_ = b.prototype }; $jscomp.generator = {};
    $jscomp.generator.ensureIteratorResultIsObject_ = function (a) { if (!(a instanceof Object)) throw new TypeError("Iterator result " + a + " is not an object"); }; $jscomp.generator.Context = function () { this.isRunning_ = !1; this.yieldAllIterator_ = null; this.yieldResult = void 0; this.nextAddress = 1; this.finallyAddress_ = this.catchAddress_ = 0; this.finallyContexts_ = this.abruptCompletion_ = null };
    $jscomp.generator.Context.prototype.start_ = function () { if (this.isRunning_) throw new TypeError("Generator is already running"); this.isRunning_ = !0 }; $jscomp.generator.Context.prototype.stop_ = function () { this.isRunning_ = !1 }; $jscomp.generator.Context.prototype.jumpToErrorHandler_ = function () { this.nextAddress = this.catchAddress_ || this.finallyAddress_ }; $jscomp.generator.Context.prototype.next_ = function (a) { this.yieldResult = a };
    $jscomp.generator.Context.prototype.throw_ = function (a) { this.abruptCompletion_ = { exception: a, isException: !0 }; this.jumpToErrorHandler_() }; $jscomp.generator.Context.prototype.return = function (a) { this.abruptCompletion_ = { return: a }; this.nextAddress = this.finallyAddress_ }; $jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function (a) { this.abruptCompletion_ = { jumpTo: a }; this.nextAddress = this.finallyAddress_ }; $jscomp.generator.Context.prototype.yield = function (a, b) { this.nextAddress = b; return { value: a } };
    $jscomp.generator.Context.prototype.yieldAll = function (a, b) { a = $jscomp.makeIterator(a); var c = a.next(); $jscomp.generator.ensureIteratorResultIsObject_(c); if (c.done) this.yieldResult = c.value, this.nextAddress = b; else return this.yieldAllIterator_ = a, this.yield(c.value, b) }; $jscomp.generator.Context.prototype.jumpTo = function (a) { this.nextAddress = a }; $jscomp.generator.Context.prototype.jumpToEnd = function () { this.nextAddress = 0 };
    $jscomp.generator.Context.prototype.setCatchFinallyBlocks = function (a, b) { this.catchAddress_ = a; void 0 != b && (this.finallyAddress_ = b) }; $jscomp.generator.Context.prototype.setFinallyBlock = function (a) { this.catchAddress_ = 0; this.finallyAddress_ = a || 0 }; $jscomp.generator.Context.prototype.leaveTryBlock = function (a, b) { this.nextAddress = a; this.catchAddress_ = b || 0 };
    $jscomp.generator.Context.prototype.enterCatchBlock = function (a) { this.catchAddress_ = a || 0; a = this.abruptCompletion_.exception; this.abruptCompletion_ = null; return a }; $jscomp.generator.Context.prototype.enterFinallyBlock = function (a, b, c) { c ? this.finallyContexts_[c] = this.abruptCompletion_ : this.finallyContexts_ = [this.abruptCompletion_]; this.catchAddress_ = a || 0; this.finallyAddress_ = b || 0 };
    $jscomp.generator.Context.prototype.leaveFinallyBlock = function (a, b) { b = this.finallyContexts_.splice(b || 0)[0]; if (b = this.abruptCompletion_ = this.abruptCompletion_ || b) { if (b.isException) return this.jumpToErrorHandler_(); void 0 != b.jumpTo && this.finallyAddress_ < b.jumpTo ? (this.nextAddress = b.jumpTo, this.abruptCompletion_ = null) : this.nextAddress = this.finallyAddress_ } else this.nextAddress = a }; $jscomp.generator.Context.prototype.forIn = function (a) { return new $jscomp.generator.Context.PropertyIterator(a) };
    $jscomp.generator.Context.PropertyIterator = function (a) { this.object_ = a; this.properties_ = []; for (var b in a) this.properties_.push(b); this.properties_.reverse() }; $jscomp.generator.Context.PropertyIterator.prototype.getNext = function () { for (; 0 < this.properties_.length;) { var a = this.properties_.pop(); if (a in this.object_) return a } return null }; $jscomp.generator.Engine_ = function (a) { this.context_ = new $jscomp.generator.Context; this.program_ = a };
    $jscomp.generator.Engine_.prototype.next_ = function (a) { this.context_.start_(); if (this.context_.yieldAllIterator_) return this.yieldAllStep_(this.context_.yieldAllIterator_.next, a, this.context_.next_); this.context_.next_(a); return this.nextStep_() };
    $jscomp.generator.Engine_.prototype.return_ = function (a) { this.context_.start_(); var b = this.context_.yieldAllIterator_; if (b) return this.yieldAllStep_("return" in b ? b["return"] : function (c) { return { value: c, done: !0 } }, a, this.context_.return); this.context_.return(a); return this.nextStep_() };
    $jscomp.generator.Engine_.prototype.throw_ = function (a) { this.context_.start_(); if (this.context_.yieldAllIterator_) return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"], a, this.context_.next_); this.context_.throw_(a); return this.nextStep_() };
    $jscomp.generator.Engine_.prototype.yieldAllStep_ = function (a, b, c) { try { var d = a.call(this.context_.yieldAllIterator_, b); $jscomp.generator.ensureIteratorResultIsObject_(d); if (!d.done) return this.context_.stop_(), d; var e = d.value } catch (f) { return this.context_.yieldAllIterator_ = null, this.context_.throw_(f), this.nextStep_() } this.context_.yieldAllIterator_ = null; c.call(this.context_, e); return this.nextStep_() };
    $jscomp.generator.Engine_.prototype.nextStep_ = function () { for (; this.context_.nextAddress;)try { var a = this.program_(this.context_); if (a) return this.context_.stop_(), { value: a.value, done: !1 } } catch (b) { this.context_.yieldResult = void 0, this.context_.throw_(b) } this.context_.stop_(); if (this.context_.abruptCompletion_) { a = this.context_.abruptCompletion_; this.context_.abruptCompletion_ = null; if (a.isException) throw a.exception; return { value: a.return, done: !0 } } return { value: void 0, done: !0 } };
    $jscomp.generator.Generator_ = function (a) { this.next = function (b) { return a.next_(b) }; this.throw = function (b) { return a.throw_(b) }; this.return = function (b) { return a.return_(b) }; this[Symbol.iterator] = function () { return this } }; $jscomp.generator.createGenerator = function (a, b) { b = new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b)); $jscomp.setPrototypeOf && a.prototype && $jscomp.setPrototypeOf(b, a.prototype); return b };
    $jscomp.asyncExecutePromiseGenerator = function (a) { function b(d) { return a.next(d) } function c(d) { return a.throw(d) } return new Promise(function (d, e) { function f(g) { g.done ? d(g.value) : Promise.resolve(g.value).then(b, c).then(f, e) } f(a.next()) }) }; $jscomp.asyncExecutePromiseGeneratorFunction = function (a) { return $jscomp.asyncExecutePromiseGenerator(a()) }; $jscomp.asyncExecutePromiseGeneratorProgram = function (a) { return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a))) };
    $jscomp.polyfill("Reflect", function (a) { return a ? a : {} }, "es6", "es3"); $jscomp.polyfill("Reflect.construct", function (a) { return $jscomp.construct }, "es6", "es3"); $jscomp.polyfill("Reflect.setPrototypeOf", function (a) { if (a) return a; if ($jscomp.setPrototypeOf) { var b = $jscomp.setPrototypeOf; return function (c, d) { try { return b(c, d), !0 } catch (e) { return !1 } } } return null }, "es6", "es5"); $jscomp.initSymbol = function () { };
    $jscomp.polyfill("Symbol", function (a) { if (a) return a; var b = function (f, g) { this.$jscomp$symbol$id_ = f; $jscomp.defineProperty(this, "description", { configurable: !0, writable: !0, value: g }) }; b.prototype.toString = function () { return this.$jscomp$symbol$id_ }; var c = "jscomp_symbol_" + (1E9 * Math.random() >>> 0) + "_", d = 0, e = function (f) { if (this instanceof e) throw new TypeError("Symbol is not a constructor"); return new b(c + (f || "") + "_" + d++, f) }; return e }, "es6", "es3");
    $jscomp.polyfill("Symbol.iterator", function (a) { if (a) return a; a = Symbol("Symbol.iterator"); for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), c = 0; c < b.length; c++) { var d = $jscomp.global[b[c]]; "function" === typeof d && "function" != typeof d.prototype[a] && $jscomp.defineProperty(d.prototype, a, { configurable: !0, writable: !0, value: function () { return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this)) } }) } return a }, "es6",
        "es3"); $jscomp.iteratorPrototype = function (a) { a = { next: a }; a[Symbol.iterator] = function () { return this }; return a };
    $jscomp.polyfill("Promise", function (a) {
        function b() { this.batch_ = null } function c(g) { return g instanceof e ? g : new e(function (h, k) { h(g) }) } if (a && (!($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && "undefined" === typeof $jscomp.global.PromiseRejectionEvent) || !$jscomp.global.Promise || -1 === $jscomp.global.Promise.toString().indexOf("[native code]"))) return a; b.prototype.asyncExecute = function (g) { if (null == this.batch_) { this.batch_ = []; var h = this; this.asyncExecuteFunction(function () { h.executeBatch_() }) } this.batch_.push(g) };
        var d = $jscomp.global.setTimeout; b.prototype.asyncExecuteFunction = function (g) { d(g, 0) }; b.prototype.executeBatch_ = function () { for (; this.batch_ && this.batch_.length;) { var g = this.batch_; this.batch_ = []; for (var h = 0; h < g.length; ++h) { var k = g[h]; g[h] = null; try { k() } catch (l) { this.asyncThrow_(l) } } } this.batch_ = null }; b.prototype.asyncThrow_ = function (g) { this.asyncExecuteFunction(function () { throw g; }) }; var e = function (g) {
            this.state_ = 0; this.result_ = void 0; this.onSettledCallbacks_ = []; this.isRejectionHandled_ = !1; var h = this.createResolveAndReject_();
            try { g(h.resolve, h.reject) } catch (k) { h.reject(k) }
        }; e.prototype.createResolveAndReject_ = function () { function g(l) { return function (m) { k || (k = !0, l.call(h, m)) } } var h = this, k = !1; return { resolve: g(this.resolveTo_), reject: g(this.reject_) } }; e.prototype.resolveTo_ = function (g) {
            if (g === this) this.reject_(new TypeError("A Promise cannot resolve to itself")); else if (g instanceof e) this.settleSameAsPromise_(g); else {
                a: switch (typeof g) { case "object": var h = null != g; break a; case "function": h = !0; break a; default: h = !1 }h ? this.resolveToNonPromiseObj_(g) :
                    this.fulfill_(g)
            }
        }; e.prototype.resolveToNonPromiseObj_ = function (g) { var h = void 0; try { h = g.then } catch (k) { this.reject_(k); return } "function" == typeof h ? this.settleSameAsThenable_(h, g) : this.fulfill_(g) }; e.prototype.reject_ = function (g) { this.settle_(2, g) }; e.prototype.fulfill_ = function (g) { this.settle_(1, g) }; e.prototype.settle_ = function (g, h) {
            if (0 != this.state_) throw Error("Cannot settle(" + g + ", " + h + "): Promise already settled in state" + this.state_); this.state_ = g; this.result_ = h; 2 === this.state_ && this.scheduleUnhandledRejectionCheck_();
            this.executeOnSettledCallbacks_()
        }; e.prototype.scheduleUnhandledRejectionCheck_ = function () { var g = this; d(function () { if (g.notifyUnhandledRejection_()) { var h = $jscomp.global.console; "undefined" !== typeof h && h.error(g.result_) } }, 1) }; e.prototype.notifyUnhandledRejection_ = function () {
            if (this.isRejectionHandled_) return !1; var g = $jscomp.global.CustomEvent, h = $jscomp.global.Event, k = $jscomp.global.dispatchEvent; if ("undefined" === typeof k) return !0; "function" === typeof g ? g = new g("unhandledrejection", { cancelable: !0 }) :
                "function" === typeof h ? g = new h("unhandledrejection", { cancelable: !0 }) : (g = $jscomp.global.document.createEvent("CustomEvent"), g.initCustomEvent("unhandledrejection", !1, !0, g)); g.promise = this; g.reason = this.result_; return k(g)
        }; e.prototype.executeOnSettledCallbacks_ = function () { if (null != this.onSettledCallbacks_) { for (var g = 0; g < this.onSettledCallbacks_.length; ++g)f.asyncExecute(this.onSettledCallbacks_[g]); this.onSettledCallbacks_ = null } }; var f = new b; e.prototype.settleSameAsPromise_ = function (g) {
            var h = this.createResolveAndReject_();
            g.callWhenSettled_(h.resolve, h.reject)
        }; e.prototype.settleSameAsThenable_ = function (g, h) { var k = this.createResolveAndReject_(); try { g.call(h, k.resolve, k.reject) } catch (l) { k.reject(l) } }; e.prototype.then = function (g, h) { function k(q, t) { return "function" == typeof q ? function (n) { try { l(q(n)) } catch (r) { m(r) } } : t } var l, m, p = new e(function (q, t) { l = q; m = t }); this.callWhenSettled_(k(g, l), k(h, m)); return p }; e.prototype.catch = function (g) { return this.then(void 0, g) }; e.prototype.callWhenSettled_ = function (g, h) {
            function k() {
                switch (l.state_) {
                    case 1: g(l.result_);
                        break; case 2: h(l.result_); break; default: throw Error("Unexpected state: " + l.state_);
                }
            } var l = this; null == this.onSettledCallbacks_ ? f.asyncExecute(k) : this.onSettledCallbacks_.push(k); this.isRejectionHandled_ = !0
        }; e.resolve = c; e.reject = function (g) { return new e(function (h, k) { k(g) }) }; e.race = function (g) { return new e(function (h, k) { for (var l = $jscomp.makeIterator(g), m = l.next(); !m.done; m = l.next())c(m.value).callWhenSettled_(h, k) }) }; e.all = function (g) {
            var h = $jscomp.makeIterator(g), k = h.next(); return k.done ? c([]) : new e(function (l,
                m) { function p(n) { return function (r) { q[n] = r; t--; 0 == t && l(q) } } var q = [], t = 0; do q.push(void 0), t++, c(k.value).callWhenSettled_(p(q.length - 1), m), k = h.next(); while (!k.done) })
        }; return e
    }, "es6", "es3"); $jscomp.checkStringArgs = function (a, b, c) { if (null == a) throw new TypeError("The 'this' value for String.prototype." + c + " must not be null or undefined"); if (b instanceof RegExp) throw new TypeError("First argument to String.prototype." + c + " must not be a regular expression"); return a + "" };
    $jscomp.polyfill("String.prototype.startsWith", function (a) { return a ? a : function (b, c) { var d = $jscomp.checkStringArgs(this, b, "startsWith"); b += ""; var e = d.length, f = b.length; c = Math.max(0, Math.min(c | 0, d.length)); for (var g = 0; g < f && c < e;)if (d[c++] != b[g++]) return !1; return g >= f } }, "es6", "es3");
    $jscomp.polyfill("Array.from", function (a) { return a ? a : function (b, c, d) { c = null != c ? c : function (h) { return h }; var e = [], f = "undefined" != typeof Symbol && Symbol.iterator && b[Symbol.iterator]; if ("function" == typeof f) { b = f.call(b); for (var g = 0; !(f = b.next()).done;)e.push(c.call(d, f.value, g++)) } else for (f = b.length, g = 0; g < f; g++)e.push(c.call(d, b[g], g)); return e } }, "es6", "es3"); $jscomp.polyfill("Object.is", function (a) { return a ? a : function (b, c) { return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c } }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.includes", function (a) { return a ? a : function (b, c) { var d = this; d instanceof String && (d = String(d)); var e = d.length; c = c || 0; for (0 > c && (c = Math.max(c + e, 0)); c < e; c++) { var f = d[c]; if (f === b || Object.is(f, b)) return !0 } return !1 } }, "es7", "es3"); $jscomp.polyfill("String.prototype.includes", function (a) { return a ? a : function (b, c) { return -1 !== $jscomp.checkStringArgs(this, b, "includes").indexOf(b, c || 0) } }, "es6", "es3");
    $jscomp.polyfill("String.prototype.repeat", function (a) { return a ? a : function (b) { var c = $jscomp.checkStringArgs(this, null, "repeat"); if (0 > b || 1342177279 < b) throw new RangeError("Invalid count value"); b |= 0; for (var d = ""; b;)if (b & 1 && (d += c), b >>>= 1) c += c; return d } }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.fill", function (a) { return a ? a : function (b, c, d) { var e = this.length || 0; 0 > c && (c = Math.max(0, e + c)); if (null == d || d > e) d = e; d = Number(d); 0 > d && (d = Math.max(0, e + d)); for (c = Number(c || 0); c < d; c++)this[c] = b; return this } }, "es6", "es3"); $jscomp.typedArrayFill = function (a) { return a ? a : Array.prototype.fill }; $jscomp.polyfill("Int8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Uint8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
    $jscomp.polyfill("Uint8ClampedArray.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Int16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Uint16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Int32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Uint32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Float32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
    $jscomp.polyfill("Float64Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5"); $jscomp.polyfill("Promise.prototype.finally", function (a) { return a ? a : function (b) { return this.then(function (c) { return Promise.resolve(b()).then(function () { return c }) }, function (c) { return Promise.resolve(b()).then(function () { throw c; }) }) } }, "es9", "es3"); $jscomp.findInternal = function (a, b, c) { a instanceof String && (a = String(a)); for (var d = a.length, e = 0; e < d; e++) { var f = a[e]; if (b.call(c, f, e, a)) return { i: e, v: f } } return { i: -1, v: void 0 } };
    $jscomp.polyfill("Array.prototype.find", function (a) { return a ? a : function (b, c) { return $jscomp.findInternal(this, b, c).v } }, "es6", "es3"); $jscomp.polyfill("String.prototype.endsWith", function (a) { return a ? a : function (b, c) { var d = $jscomp.checkStringArgs(this, b, "endsWith"); b += ""; void 0 === c && (c = d.length); c = Math.max(0, Math.min(c | 0, d.length)); for (var e = b.length; 0 < e && 0 < c;)if (d[--c] != b[--e]) return !1; return 0 >= e } }, "es6", "es3");
    $jscomp.checkEs6ConformanceViaProxy = function () { try { var a = {}, b = Object.create(new $jscomp.global.Proxy(a, { get: function (c, d, e) { return c == a && "q" == d && e == b } })); return !0 === b.q } catch (c) { return !1 } }; $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1; $jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy(); $jscomp.owns = function (a, b) { return Object.prototype.hasOwnProperty.call(a, b) };
    $jscomp.polyfill("WeakMap", function (a) {
        function b() { if (!a || !Object.seal) return !1; try { var l = Object.seal({}), m = Object.seal({}), p = new a([[l, 2], [m, 3]]); if (2 != p.get(l) || 3 != p.get(m)) return !1; p.delete(l); p.set(m, 4); return !p.has(l) && 4 == p.get(m) } catch (q) { return !1 } } function c() { } function d(l) { var m = typeof l; return "object" === m && null !== l || "function" === m } function e(l) { if (!$jscomp.owns(l, g)) { var m = new c; $jscomp.defineProperty(l, g, { value: m }) } } function f(l) {
            if (!$jscomp.ISOLATE_POLYFILLS) {
                var m = Object[l]; m && (Object[l] =
                    function (p) { if (p instanceof c) return p; Object.isExtensible(p) && e(p); return m(p) })
            }
        } if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) { if (a && $jscomp.ES6_CONFORMANCE) return a } else if (b()) return a; var g = "$jscomp_hidden_" + Math.random(); f("freeze"); f("preventExtensions"); f("seal"); var h = 0, k = function (l) { this.id_ = (h += Math.random() + 1).toString(); if (l) { l = $jscomp.makeIterator(l); for (var m; !(m = l.next()).done;)m = m.value, this.set(m[0], m[1]) } }; k.prototype.set = function (l, m) {
            if (!d(l)) throw Error("Invalid WeakMap key");
            e(l); if (!$jscomp.owns(l, g)) throw Error("WeakMap key fail: " + l); l[g][this.id_] = m; return this
        }; k.prototype.get = function (l) { return d(l) && $jscomp.owns(l, g) ? l[g][this.id_] : void 0 }; k.prototype.has = function (l) { return d(l) && $jscomp.owns(l, g) && $jscomp.owns(l[g], this.id_) }; k.prototype.delete = function (l) { return d(l) && $jscomp.owns(l, g) && $jscomp.owns(l[g], this.id_) ? delete l[g][this.id_] : !1 }; return k
    }, "es6", "es3"); $jscomp.MapEntry = function () { };
    $jscomp.polyfill("Map", function (a) {
        function b() { if ($jscomp.ASSUME_NO_NATIVE_MAP || !a || "function" != typeof a || !a.prototype.entries || "function" != typeof Object.seal) return !1; try { var k = Object.seal({ x: 4 }), l = new a($jscomp.makeIterator([[k, "s"]])); if ("s" != l.get(k) || 1 != l.size || l.get({ x: 4 }) || l.set({ x: 4 }, "t") != l || 2 != l.size) return !1; var m = l.entries(), p = m.next(); if (p.done || p.value[0] != k || "s" != p.value[1]) return !1; p = m.next(); return p.done || 4 != p.value[0].x || "t" != p.value[1] || !m.next().done ? !1 : !0 } catch (q) { return !1 } }
        if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) { if (a && $jscomp.ES6_CONFORMANCE) return a } else if (b()) return a; var c = new WeakMap, d = function (k) { this.data_ = {}; this.head_ = g(); this.size = 0; if (k) { k = $jscomp.makeIterator(k); for (var l; !(l = k.next()).done;)l = l.value, this.set(l[0], l[1]) } }; d.prototype.set = function (k, l) {
            k = 0 === k ? 0 : k; var m = e(this, k); m.list || (m.list = this.data_[m.id] = []); m.entry ? m.entry.value = l : (m.entry = { next: this.head_, previous: this.head_.previous, head: this.head_, key: k, value: l }, m.list.push(m.entry),
                this.head_.previous.next = m.entry, this.head_.previous = m.entry, this.size++); return this
        }; d.prototype.delete = function (k) { k = e(this, k); return k.entry && k.list ? (k.list.splice(k.index, 1), k.list.length || delete this.data_[k.id], k.entry.previous.next = k.entry.next, k.entry.next.previous = k.entry.previous, k.entry.head = null, this.size--, !0) : !1 }; d.prototype.clear = function () { this.data_ = {}; this.head_ = this.head_.previous = g(); this.size = 0 }; d.prototype.has = function (k) { return !!e(this, k).entry }; d.prototype.get = function (k) {
            return (k =
                e(this, k).entry) && k.value
        }; d.prototype.entries = function () { return f(this, function (k) { return [k.key, k.value] }) }; d.prototype.keys = function () { return f(this, function (k) { return k.key }) }; d.prototype.values = function () { return f(this, function (k) { return k.value }) }; d.prototype.forEach = function (k, l) { for (var m = this.entries(), p; !(p = m.next()).done;)p = p.value, k.call(l, p[1], p[0], this) }; d.prototype[Symbol.iterator] = d.prototype.entries; var e = function (k, l) {
            var m = l && typeof l; "object" == m || "function" == m ? c.has(l) ? m = c.get(l) :
                (m = "" + ++h, c.set(l, m)) : m = "p_" + l; var p = k.data_[m]; if (p && $jscomp.owns(k.data_, m)) for (k = 0; k < p.length; k++) { var q = p[k]; if (l !== l && q.key !== q.key || l === q.key) return { id: m, list: p, index: k, entry: q } } return { id: m, list: p, index: -1, entry: void 0 }
        }, f = function (k, l) { var m = k.head_; return $jscomp.iteratorPrototype(function () { if (m) { for (; m.head != k.head_;)m = m.previous; for (; m.next != m.head;)return m = m.next, { done: !1, value: l(m) }; m = null } return { done: !0, value: void 0 } }) }, g = function () { var k = {}; return k.previous = k.next = k.head = k }, h = 0;
        return d
    }, "es6", "es3");
    $jscomp.polyfill("Set", function (a) {
        function b() { if ($jscomp.ASSUME_NO_NATIVE_SET || !a || "function" != typeof a || !a.prototype.entries || "function" != typeof Object.seal) return !1; try { var d = Object.seal({ x: 4 }), e = new a($jscomp.makeIterator([d])); if (!e.has(d) || 1 != e.size || e.add(d) != e || 1 != e.size || e.add({ x: 4 }) != e || 2 != e.size) return !1; var f = e.entries(), g = f.next(); if (g.done || g.value[0] != d || g.value[1] != d) return !1; g = f.next(); return g.done || g.value[0] == d || 4 != g.value[0].x || g.value[1] != g.value[0] ? !1 : f.next().done } catch (h) { return !1 } }
        if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) { if (a && $jscomp.ES6_CONFORMANCE) return a } else if (b()) return a; var c = function (d) { this.map_ = new Map; if (d) { d = $jscomp.makeIterator(d); for (var e; !(e = d.next()).done;)this.add(e.value) } this.size = this.map_.size }; c.prototype.add = function (d) { d = 0 === d ? 0 : d; this.map_.set(d, d); this.size = this.map_.size; return this }; c.prototype.delete = function (d) { d = this.map_.delete(d); this.size = this.map_.size; return d }; c.prototype.clear = function () { this.map_.clear(); this.size = 0 }; c.prototype.has =
            function (d) { return this.map_.has(d) }; c.prototype.entries = function () { return this.map_.entries() }; c.prototype.values = function () { return this.map_.values() }; c.prototype.keys = c.prototype.values; c.prototype[Symbol.iterator] = c.prototype.values; c.prototype.forEach = function (d, e) { var f = this; this.map_.forEach(function (g) { return d.call(e, g, g, f) }) }; return c
    }, "es6", "es3");
    $jscomp.iteratorFromArray = function (a, b) { a instanceof String && (a += ""); var c = 0, d = !1, e = { next: function () { if (!d && c < a.length) { var f = c++; return { value: b(f, a[f]), done: !1 } } d = !0; return { done: !0, value: void 0 } } }; e[Symbol.iterator] = function () { return e }; return e }; $jscomp.polyfill("Array.prototype.keys", function (a) { return a ? a : function () { return $jscomp.iteratorFromArray(this, function (b) { return b }) } }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.entries", function (a) { return a ? a : function () { return $jscomp.iteratorFromArray(this, function (b, c) { return [b, c] }) } }, "es6", "es3");
    $jscomp.polyfill("Object.fromEntries", function (a) { return a ? a : function (b) { var c = {}; if (!(Symbol.iterator in b)) throw new TypeError("" + b + " is not iterable"); b = b[Symbol.iterator].call(b); for (var d = b.next(); !d.done; d = b.next()) { d = d.value; if (Object(d) !== d) throw new TypeError("iterable for fromEntries should yield objects"); c[d[0]] = d[1] } return c } }, "es_2019", "es3");
    $jscomp.polyfill("String.prototype.replaceAll", function (a) { return a ? a : function (b, c) { if (b instanceof RegExp && !b.global) throw new TypeError("String.prototype.replaceAll called with a non-global RegExp argument."); return b instanceof RegExp ? this.replace(b, c) : this.replace(new RegExp(String(b).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08"), "g"), c) } }, "es_2021", "es3");
    $jscomp.polyfill("Object.entries", function (a) { return a ? a : function (b) { var c = [], d; for (d in b) $jscomp.owns(b, d) && c.push([d, b[d]]); return c } }, "es8", "es3"); $jscomp.polyfill("Array.prototype.values", function (a) { return a ? a : function () { return $jscomp.iteratorFromArray(this, function (b, c) { return c }) } }, "es8", "es3"); $jscomp.polyfill("Math.imul", function (a) { return a ? a : function (b, c) { b = Number(b); c = Number(c); var d = b & 65535, e = c & 65535; return d * e + ((b >>> 16 & 65535) * e + d * (c >>> 16 & 65535) << 16 >>> 0) | 0 } }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.flat", function (a) { return a ? a : function (b) { b = void 0 === b ? 1 : b; for (var c = [], d = 0; d < this.length; d++) { var e = this[d]; Array.isArray(e) && 0 < b ? (e = Array.prototype.flat.call(e, b - 1), c.push.apply(c, e)) : c.push(e) } return c } }, "es9", "es5"); var Configs = { squaredle: { game: "squaredle", showTutorial: !0, darkMode: !0, clueLength: 1 }, bee: { game: "bee", showTutorial: !1, darkMode: !1, clueLength: 2 } }, Config = (new URL(location.href)).pathname.startsWith("/bee") ? Configs.bee : Configs.squaredle; var Strings = { "%player": "Squaredler", "%puzzle": "Squaredle" }; var gVersion = "v2.12.6", VersionNumber = function (a) { a = a.match(/v(\d+)\.(\d+)\.(\d+)([^ ]*)/); null == a ? (this.build = this.minor = this.major = 0, this.buildIteration = "") : (this.major = parseInt(a[1], 10), this.minor = parseInt(a[2], 10), this.build = parseInt(a[3], 10), this.buildIteration = a[4]) }; VersionNumber.prototype.isNewerThan = function (a) { return this.major != a.major ? this.major > a.major : this.minor != a.minor ? this.minor > a.minor : this.build > a.build };
    VersionNumber.prototype.isAtLeast = function (a) { return this.major != a.major ? this.major > a.major : this.minor != a.minor ? this.minor > a.minor : this.build >= a.build }; VersionNumber.prototype.toString = function () { return "v" + this.major + "." + this.minor + "." + this.build + this.buildIteration }; VersionNumber.getHtmlVersion = function () { var a = document.querySelector("#version"); return a ? new VersionNumber(a.textContent) : null };
    document.addEventListener("DOMContentLoaded", function () {
        var a = VersionNumber.getHtmlVersion(); if (a) {
            var b = new VersionNumber(gVersion), c = localStorage.getItem("squaredle-lastVersion"); c && (new VersionNumber(c)).isNewerThan(b) && ($("#cacheUsed").hidden = !1); b.isNewerThan(a) ? !c || b.isNewerThan(new VersionNumber(c)) ? (gtag("event", "version_mismatch"), localStorage.setItem("squaredle-lastVersion", gVersion), api.reload("versionMismatch")) : (console.error("Latest version is " + gVersion + ", but HTML version is " + a),
                gtag("event", "version_mismatch_unfixable")) : localStorage.setItem("squaredle-lastVersion", gVersion)
        }
    }); var domReady = new Promise(function (a, b) { window.addEventListener("DOMContentLoaded", function () { return a() }) }), readyPromises = [domReady]; function onReady(a) { Promise.all(readyPromises).then(a) } function $(a) { var b = document.querySelector(a); assert(b, "Element not found: " + a); return b } function cloneTemplate(a) { a = $("#" + a); assert(a instanceof HTMLTemplateElement); a = a.content.cloneNode(!0).firstElementChild; assert(a, "Template has no child"); return a }
    function $$(a) { return Array.from(document.querySelectorAll(a)) } Object.defineProperty(SVGElement.prototype, "hidden", { get: function () { return "undefined" == typeof this._hidden ? !1 : this._hidden }, set: function (a) { (this._hidden = a) ? this.setAttribute("hidden", "") : this.removeAttribute("hidden") } }); function assert(a, b) { if (!a) throw Error("Assertion failed" + (b ? ": " + b : "")); return a } function assertNotReached(a) { assert(!1, a || "Unreachable code hit") }
    function assertInstanceOf(a, b, c) { a instanceof b || assertNotReached(c || "Value " + a + " is a " + a.constructor.name + ", not a " + (b.name || typeof b)); return a } function assertEquals(a, b, c) { assert(a === b, "Assertion failed: " + a + " === " + b + (c ? ": " + c : "")) }
    function assertDeepEquals(a, b, c) { assert(typeof a == typeof b); if ("object" != typeof a) assertEquals(a, b, c); else { assert(Array.isArray(a), "assertDeepEquals only supports arrays"); assert(Array.isArray(b), "assertDeepEquals only supports arrays"); for (var d = 0; d < Math.max(a.length, b.length); d++) { var e = null; try { assertDeepEquals(a[d], b[d], c) } catch (f) { e = f } null !== e && assertNotReached("Expected " + a + " to deep-equal " + b + " (" + (e.message + ")") + (c ? ": " + c : "")) } } }
    String.prototype.replaceAll || (String.prototype.replaceAll = function (a, b) { return "[object regexp]" === Object.prototype.toString.call(a).toLowerCase() ? this.replace(a, b) : this.replace(new RegExp(a, "g"), b) }); location.href.includes("localhost") && (document.title = "[dev] " + document.title); var Util = {
        leftPad: function (a, b, c) { "number" == typeof a && (a = a.toString()); assert(1 == b.length); return a.length >= c ? a : b.repeat(c - a.length) + a }, average: function (a) { return Math.round(a.reduce(function (b, c) { return b + c }, 0) / a.length) }, setIntervalImmediate: function (a, b) { setTimeout(a); return setInterval(a, b) }, editDistance: function (a, b) {
            for (var c = Array(a.length + 1), d = 0; d <= a.length; d++)c[d] = Array(b.length + 1), c[d].fill(0); for (d = 0; d < a.length; d++)c[d + 1][0] = d + 1; for (d = 0; d < b.length; d++)c[0][d + 1] = d + 1; for (d = 0; d < b.length; d++)for (var e =
                0; e < a.length; e++) { var f = 0; a[e] != b[d] && (f = 1); c[e + 1][d + 1] = Math.min(c[e][d + 1] + 1, c[e + 1][d] + 1, c[e][d] + f) } return c[a.length][b.length]
        }, removeFromArray: function (a, b) { b = a.indexOf(b); -1 != b && a.splice(b, 1) }, getCookie: function (a) { a = ("; " + document.cookie).split("; " + a + "="); return 2 == a.length ? decodeURIComponent(a[1].split(";")[0]) : null }, setCookie: function (a, b) { b = encodeURIComponent(b); document.cookie = a + "=" + b + "; expires=Tue, 19 Jan 2038 00:00:01 GMT; path=/;" }, unsetCookie: function (a) { document.cookie = a + "=; Max-Age=-99999999; path=/;" },
        submitEmail: function (a, b, c, d, e, f) {
            var g = assertInstanceOf(b, HTMLButtonElement); if (g.disabled) return Promise.reject("Form submission in progress"); d.hidden = !0; var h = assertInstanceOf(a, HTMLInputElement), k = h.value; a = 255 >= k.length && null != k.match(/^[^@]+@[^@]+\.[^@]+$/); c.hidden = !1; if (!a) return c.textContent = "Please enter a valid email address.", c.classList.add("error"), Promise.reject("Invalid email address"); c.textContent = e; c.classList.remove("error"); c.hidden = !1; g.disabled = !0; return f(k).then(function () {
                c.hidden =
                    !0; d.hidden = !1; h.value = ""; return k
            }).catch(function (l) { c.classList.add("error"); c.textContent = "string" == typeof l ? l : "Network or server error. Please try again."; throw l; }).finally(function () { g.disabled = !1 })
        }, getUuid: function () { return "undefined" != typeof crypto && "function" == typeof crypto.randomUUID ? crypto.randomUUID() : (new Date).getTime().toString() + Math.random().toString().slice(2, 18) }, confirm: function (a, b, c) {
            return new Promise(function (d, e) {
                gPopups.onShowConfirm(); var f = gPopups.curPopup(); f ? f.classList.add("blur") :
                    $("#outerContainer").classList.add("blur"); e = a.includes("<"); $("#confirmText").innerHTML = (e ? "" : "<p>") + a + (e ? "" : "</p>"); $("#confirmAccept").textContent = b; $("#confirmCancel").textContent = c; $("#confirm").hidden = !1; $("#confirm").scrollTop = 0; $("#confirmCancel").focus(); var g = function (m) {
                        $("#confirm").hidden = !0; gPopups.onCloseConfirm(); f ? f.classList.remove("blur") : $("#outerContainer").classList.remove("blur"); $("#confirmAccept").removeEventListener("click", h); $("#confirmCancel").removeEventListener("click",
                            k); window.removeEventListener("keydown", l); d(m)
                    }, h = function (m) { return g(!0) }; $("#confirmAccept").addEventListener("click", h); var k = function (m) { return g(!1) }; $("#confirmCancel").addEventListener("click", k); var l = function (m) { if ("Esc" == m.key || "Escape" == m.key) m.preventDefault(), g(!1) }; window.addEventListener("keydown", l)
            })
        }, isIOs: /iPad|iPhone|iPod/.test(navigator.platform) || "MacIntel" === navigator.platform && 1 < navigator.maxTouchPoints, encodeEntities: function (a) {
            return a.replace(/&/g, "&amp;").replace(Util.SURROGATE_PAIR_REGEXP,
                function (b) { var c = b.charCodeAt(0); b = b.charCodeAt(1); return "&#" + (1024 * (c - 55296) + (b - 56320) + 65536) + ";" }).replace(Util.NON_ALPHANUMERIC_REGEXP, function (b) { return "&#" + b.charCodeAt(0) + ";" }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }, createSvg: function (a, b) { var c = document.createElementNS("http://www.w3.org/2000/svg", "svg"); b && c.classList.add("inline-icon"); b = document.createElementNS("http://www.w3.org/2000/svg", "use"); b.setAttribute("href", "#" + a); c.appendChild(b); return c }, addStars: function (a, b) {
            for (var c =
                0; c < Math.floor(b); c++)a.appendChild(Util.createSvg("icon-star", !0)); b != Math.floor(b) && (c = Util.createSvg("icon-star", !0), c.classList.add("halfStar"), a.appendChild(c)); for (c = 0; c < 5 - Math.ceil(b); c++) { var d = Util.createSvg("icon-star", !0); d.style.fill = "none"; a.appendChild(d) }
        }, SURROGATE_PAIR_REGEXP: /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, NON_ALPHANUMERIC_REGEXP: /([^#-~| |!])/g
    };
    if (location.href.includes("speedy") || "about:srcdoc" == location.href && !location.href.includes("interactive")) { var oldSetTimeout = window.setTimeout.bind(window), oldSetInterval = window.setInterval.bind(window); window.setTimeout = function (a, b) { "number" != typeof b && (b = 0); return oldSetTimeout(a, Math.round(b / 10)) }; window.setInterval = function (a, b) { assert("number" == typeof b); return oldSetInterval(a, Math.round(b / 10)) } }; var DateUtil = {
        kHour: 36E5, _dateStrToDate: function (a) { a = new Date((new Date(a)).getTime() + 864E5); assert("Invalid Date" != a.toString(), "Invalid date parameter"); return a }, origTodayDateStr: "", origYesterdayDateStr: "", _todayDateStr: null, _yesterdayDateStr: null, _nextBoardTime: null, _nextBoardTimeFromServer: null, _timesFromServerPromise: null, _shouldAllowHints: location.href.includes("forceHints"), get shouldAllowHints() { return this._shouldAllowHints || !gPuzzleManager.isTodayPuzzle && !gPuzzleManager.isWeeklyPuzzle },
        _nowForTest: null, now: function () { return DateUtil._nowForTest ? DateUtil._nowForTest : new Date }, setNowForTest: function (a) { DateUtil._nowForTest = a }, getTodayStr: function () { return assert(this._todayDateStr) }, getYesterdayStr: function () { return this._yesterdayDateStr }, setDates: function (a, b) { this.origTodayDateStr || (this.origTodayDateStr = a, this.origYesterdayDateStr = b); this._todayDateStr = a; this._yesterdayDateStr = b }, getStrForDaysPast: function (a) {
            a = DateUtil._dateStrToDate(this.origTodayDateStr).getTime() - 24 * a * DateUtil.kHour;
            return DateUtil._getDayStrForTime(new Date(a - 3 * DateUtil.kHour))
        }, numDaysBetween: function (a, b) { a = new Date(a); return Math.round(((new Date(b)).getTime() - a.getTime()) / 1E3 / 3600 / 24) }, _getDayStrForTime: function (a) {
            var b = null, c = { timeZone: "America/Los_Angeles", year: "numeric", month: "2-digit", day: "2-digit" }; try { b = (new Intl.DateTimeFormat("en-US", c)).formatToParts(a) } catch (d) { c.timeZone = "UTC", b = (new Intl.DateTimeFormat("en-US", c)).formatToParts(new Date(a.getTime() - 5 * DateUtil.kHour)) } a = b.find(function (d) {
                return "year" ==
                    d.type
            }).value; 2 == a.length && (a = "20" + a); c = b.find(function (d) { return "month" == d.type }).value; b = b.find(function (d) { return "day" == d.type }).value; return a + "/" + c + "/" + b
        }, timeToNextBoard: function () {
            var a = DateUtil.now(); this._timesFromServerPromise || this.getSecondsToNextBoardFromServer(); var b = this._nextBoardTimeFromServer || this._nextBoardTime; b || (this._nextBoardTime = b = new Date(DateUtil.getStrForDaysPast(-1) + " 03:00:00 GMT-0700")); a = Math.round((b.getTime() - a.getTime()) / 1E3); return 0 >= a ? {
                hours: 0, minutes: 0, seconds: 0,
                totalSeconds: 0
            } : { hours: Math.floor(a / 60 / 60), minutes: Math.floor(a / 60 % 60), seconds: a % 60, totalSeconds: a }
        }, getSecondsToNextBoardFromServer: function () { return this._getTimesFromServer().then(function (a) { return a.secondsToNextPuzzle }) }, getSecondsToHints: function () { var a = this; return this._getTimesFromServer().then(function (b) { return b.secondsToHints }).catch(function () { return a._getLocalSecondsToHints() }) }, getNewPuzzleTimeStrWithPeriod: function () {
            var a = ""; try {
                var b = new Date(DateUtil.getTodayStr() + " 03:00:00 GMT-0700");
                a = (new Intl.DateTimeFormat(navigator.language, { hour: "numeric", minute: "numeric", timeZoneName: "short" })).format(b)
            } catch (c) { a = "3am Pacific" } a.endsWith(".") || (a += "."); return a
        }, getHintsAvailableTimeStr: function () { try { var a = new Date(DateUtil.getTodayStr() + " 15:00:00 GMT-0700"); return (new Intl.DateTimeFormat(navigator.language, { hour: "numeric", minute: "numeric", timeZoneName: "short" })).format(a) } catch (b) { return "3pm Pacific" } }, dayOfWeek: function (a) { return "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" ")[a.getDay()] },
        _getTimesFromServer: function () {
            var a = this; if (!this._timesFromServerPromise) if (Store.needsTutorial()) this._timesFromServerPromise = new Promise(function () { }); else {
                var b = 0; this._timesFromServerPromise = api.getTimes(DateUtil.getTodayStr()).then(function (c) { a._nextBoardTimeFromServer = new Date((new Date).getTime() + 1E3 * c.data.secondsToNextPuzzle); b = c.data.secondsToHints; return c.data }).catch(function (c) { b = a._getLocalSecondsToHints(); throw c; }).finally(function () {
                    if (!gPuzzleManager.isWeeklyPuzzle) if (0 >= b) a._shouldAllowHints =
                        !0; else { setTimeout(function () { a._shouldAllowHints = !0 }, 1E3 * b); var c = (new Date).getTime(), d = setInterval(function () { a._shouldAllowHints ? clearInterval(d) : (new Date).getTime() - c >= 1E3 * b && (clearInterval(d), a._shouldAllowHints = !0) }, 1E4) }
                })
            } return this._timesFromServerPromise
        }, _getLocalSecondsToHints: function () {
            var a = new Date; if (DateUtil._getDayStrForTime(a) > DateUtil.getTodayStr()) return 0; var b = new Date(DateUtil.getTodayStr() + " 15:00:00 GMT-0700"); a = Math.round((b.getTime() - a.getTime()) / 1E3); return Math.max(0,
                a)
        }
    }; var BaseStore = function () { this.isTest = location.href.includes("test.html") || "about:srcdoc" == location.href; this.userPrefix = (new URL(location.href)).searchParams.get("userPrefix"); this._prefix = "" }; BaseStore.prototype.getInteger = function (a) { return (a = this._get(a)) ? parseInt(a, 10) : null }; BaseStore.prototype.setInteger = function (a, b) { this._set(a, b.toString()) }; BaseStore.prototype.getBoolean = function (a) { return (a = this._get(a)) ? "true" == a : null }; BaseStore.prototype.setBoolean = function (a, b) { this._set(a, b.toString()) };
    BaseStore.prototype.getString = function (a) { a = this._get(a); return "string" == typeof a ? a : null }; BaseStore.prototype.setString = function (a, b) { this._set(a, b) }; BaseStore.prototype.getItem = function (a) { return this._get(a) }; BaseStore.prototype.setItem = function (a, b) { localStorage.setItem(this._prefix + a, b) }; BaseStore.prototype._get = function (a) { return localStorage.getItem(this._prefix + a) }; BaseStore.prototype._set = function (a, b) { localStorage.setItem(this._prefix + a, b) };
    BaseStore.prototype._delete = function (a) { localStorage.removeItem(this._prefix + a) }; BaseStore.prototype.dateToDateStr = function (a) { var b = a.getFullYear(), c = Util.leftPad(a.getMonth() + 1, "0", 2); a = Util.leftPad(a.getDate(), "0", 2); return b + "/" + c + "/" + a }; var GlobalStoreSingleton = function () { BaseStore.call(this); this._prefix = this.userPrefix ? this.userPrefix + "-" : this.isTest ? "test-" : ""; this._prefix += "squaredle-"; this._cachedFavorites = null }; $jscomp.inherits(GlobalStoreSingleton, BaseStore);
    GlobalStoreSingleton.prototype.hasOpenedLeaderboards = function () { return "true" == this._get("hasOpenedLeaderboards") }; GlobalStoreSingleton.prototype.setHasOpenedLeaderboards = function () { this._set("hasOpenedLeaderboards", "true") }; GlobalStoreSingleton.prototype.isBetaAllowed = function () { return "true" == this._get("isBetaAllowed") || location.href.includes("allowBeta") }; GlobalStoreSingleton.prototype.setIsBetaAllowed = function (a) { this._set("isBetaAllowed", a.toString()) };
    GlobalStoreSingleton.prototype.useBeta = function () { return "true" == this._get("useBeta") }; GlobalStoreSingleton.prototype.setUseBeta = function (a) { this._set("useBeta", a.toString()) }; GlobalStoreSingleton.prototype.getUuid = function () { return this._get("uuid") }; GlobalStoreSingleton.prototype.setUuid = function (a) { this._set("uuid", a) }; GlobalStoreSingleton.prototype.getUserId = function () { var a = this._get("userId"); return null == a ? null : parseInt(a, 10) };
    GlobalStoreSingleton.prototype.setUserId = function (a) { this._set("userId", a.toString()) }; GlobalStoreSingleton.prototype.getName = function () { return this._get("name") }; GlobalStoreSingleton.prototype.setName = function (a) { this._set("name", a) }; GlobalStoreSingleton.prototype.getEmail = function () { return this._get("email") }; GlobalStoreSingleton.prototype.setEmail = function (a) { this._set("email", a) }; GlobalStoreSingleton.prototype.analyticsOptedOut = function () { return "true" == this._get("analytics-optout") };
    GlobalStoreSingleton.prototype.getFavorites = function () { if (!this._cachedFavorites) { var a = this._get("favoriteUserIds"); a = a ? JSON.parse(a) : null; Array.isArray(a) ? this._cachedFavorites = new Set(a) : this._cachedFavorites = new Set } return this._cachedFavorites }; GlobalStoreSingleton.prototype.addFavorite = function (a) { "string" == typeof a && (a = parseInt(a, 10)); var b = this.getFavorites(); b.add(a); this._set("favoriteUserIds", JSON.stringify(Array.from(b))); return b };
    GlobalStoreSingleton.prototype.removeFavorite = function (a) { "string" == typeof a && (a = parseInt(a, 10)); var b = this.getFavorites(); b.delete(a); this._set("favoriteUserIds", JSON.stringify(Array.from(b))); return b }; GlobalStoreSingleton.prototype.setFavorites = function (a) { this._cachedFavorites = new Set(a); this._set("favoriteUserIds", JSON.stringify(a)) }; GlobalStoreSingleton.prototype.showedBonusWordDialog = function () { return "true" == this._get("showedBonusWordDialog") };
    GlobalStoreSingleton.prototype.setShowedBonusWordDialog = function () { this._set("showedBonusWordDialog", "true") }; GlobalStoreSingleton.prototype.showedInappropriateDialog = function () { return "true" == this._get("showedInappropriateDialog") }; GlobalStoreSingleton.prototype.setShowedInappropriateDialog = function () { this._set("showedInappropriateDialog", "true") }; GlobalStoreSingleton.prototype.showedProperNounDialog = function () { return "true" == this._get("showedProperNounDialog") };
    GlobalStoreSingleton.prototype.setShowedProperNounDialog = function () { this._set("showedProperNounDialog", "true") }; var GameStore = function (a) { BaseStore.call(this); this._prefix = this.userPrefix ? this.userPrefix + "-" : this.isTest ? "test-" : ""; this._prefix += a + "-"; this._savedForTest = void 0; this.game = a }; $jscomp.inherits(GameStore, BaseStore); GameStore.prototype.init = function () { var a = this; setTimeout(function () { return a._syncDeletedSolutions() }, 2E3) };
    GameStore.prototype.hasAnyEntries = function () { for (var a = 0, b = localStorage.length; a < b; a++)if (localStorage.key(a).startsWith(this._prefix)) return !0; return !1 }; GameStore.prototype.hasPlayedPuzzle = function (a) { return localStorage.hasOwnProperty(this._prefix + this._solutionKey(a)) }; GameStore.prototype.getSolutionForCurPuzzle = function (a) { return this.getSolutionForKey(a || null, gPuzzleManager.puzzleKey, gBeta.useBetaPuzzle) };
    GameStore.prototype.getSolutionForYesterday = function (a) { return DateUtil.getYesterdayStr() ? this.getSolutionForKey(a, assert(DateUtil.getYesterdayStr()) + (gPuzzleManager.isWeeklyPuzzle ? "-weekly" : "")) : null }; GameStore.prototype.saveSolutionForCurPuzzle = function (a) { this.saveSolutionForKey(a, gPuzzleManager.puzzleKey, gBeta.useBetaPuzzle) }; GameStore.prototype.updateSolutionMs = function (a) { var b = this.getSolutionForCurPuzzle(); b.ms = Math.max(a.ms, b.ms); this.saveSolutionForCurPuzzle(b) };
    GameStore.prototype.saveSolutionForKey = function (a, b, c) { this._set(this._solutionKey(b, c), JSON.stringify({ words: Array.from(a.words), obscureWords: Array.from(a.obscureWords), nonWordCount: a.nonWordCount, givenClues: a.givenClues, hints: { sort: a.hints.sort, firstLetters: a.hints.firstLetters }, everEnabledHints: a.everEnabledHints, ms: a.ms, shared: a.shared, revealsUsed: a.revealsUsed, rotations: a.rotations })) }; GameStore.prototype.deleteSolutionForToday = function () { this.deleteSolution(gPuzzleManager.puzzleKey) };
    GameStore.prototype.deleteSolution = function (a) { this._delete(this._solutionKey(a, gBeta.useBetaPuzzle)) };
    GameStore.prototype.getStats = function () {
        for (var a = "Su Mo Tu We Th Fr Sa".split(" "), b = this.getPastStats(), c = new Map, d = $jscomp.makeIterator(this._getSerializedSolutions()), e = d.next(); !e.done; e = d.next()) { var f = $jscomp.makeIterator(e.value); e = f.next().value; f = f.next().value; f = this._deserializeSolution(null, f); (0 < f.words.size || 0 < f.obscureWords.size || 0 < f.nonWordCount) && c.set(e, f) } c = $jscomp.makeIterator(c); for (d = c.next(); !d.done; d = c.next())e = $jscomp.makeIterator(d.value), d = e.next().value, e = e.next().value,
            b.has(d) ? (d = b.get(d), d.score = Math.max(d.score, e.score), d.wordCount = Math.max(d.wordCount, e.words.size), d.optionalWordCount = Math.max(d.optionalWordCount, e.obscureWords.size), d.nonWordCount = Math.max(d.nonWordCount, e.nonWordCount), "undefined" == typeof d.ms ? d.ms = e.ms : "undefined" != typeof e.ms && (d.ms = Math.max(d.ms, e.ms))) : b.set(d, { puzzleDate: d, score: e.score, wordCount: e.words.size, optionalWordCount: e.obscureWords.size, nonWordCount: e.nonWordCount, ms: e.ms }); var g = Array.from(b.keys()); g.sort().reverse(); d = c =
                !0; e = DateUtil.getTodayStr(); for (var h = f = 0, k = 0, l = 0, m = 0, p = [], q = 0; 7 > q; q++) { var t = DateUtil.getStrForDaysPast(q); t = a[(new Date(t)).getDay()]; p.push({ weekday: t, pct: 0 }) } a = $jscomp.makeIterator(g); for (g = a.next(); !g.done; g = a.next())g = g.value, q = b.get(g), (t = gPuzzleManager.puzzleStats.get(g)) ? (l++, q = Math.min(100, q.score / t.maxScore * 100), k += q, 100 == q && m++, t = DateUtil.numDaysBetween(g, DateUtil.origTodayDateStr), 0 <= t && 6 >= t && (p[t].pct = q), g == DateUtil.origTodayDateStr || c && 1 == DateUtil.numDaysBetween(g, e) || "2022/04/16" ==
                    g && "2022/04/18" == e || "2022/07/30" == g && "2022/08/01" == e ? (e = g, f++, 100 == q ? d && h++ : g != DateUtil.origTodayDateStr && "2022/04/17" != g && "2022/07/31" != g && (d = !1)) : d = c = !1) : console.warn("No puzzle found for key: " + g); return { numPuzzles: l, numPuzzlesSolved: m, avgPct: 0 < l ? Math.floor(k / l) : 0, playStreak: f, solveStreak: h, last7Days: p.reverse(), stats: b }
    };
    GameStore.prototype.getArchiveStats = function () {
        var a = this.getPastStats(), b = new Map, c = new Set, d = new Set; a = $jscomp.makeIterator(a.entries()); for (var e = a.next(); !e.done; e = a.next()) { var f = $jscomp.makeIterator(e.value); e = f.next().value; f = f.next().value; b.set(e, f.score); d.add(e) } a = $jscomp.makeIterator(this._getSerializedSolutions()); for (e = a.next(); !e.done; e = a.next()) {
            f = $jscomp.makeIterator(e.value); e = f.next().value; f = f.next().value; f = this._deserializeSolution(null, f); d.delete(e); var g = b.get(e) || 0; b.set(e,
                Math.max(g, f.score)); g > f.score && c.add(e)
        } return { scores: b, missingPartialSolutionDays: c, missingEntireSolutionDays: d }
    }; GameStore.prototype.clearForTest = function () { if ("undefined" == typeof this._savedForTest) { this._savedForTest = new Map; for (var a = 0, b = localStorage.length; a < b; a++) { var c = localStorage.key(a); this._savedForTest.set(c, localStorage.getItem(c)) } } localStorage.clear() };
    GameStore.prototype.restoreAfterTest = function () { assert(this._savedForTest); localStorage.clear(); for (var a = $jscomp.makeIterator(this._savedForTest.entries()), b = a.next(); !b.done; b = a.next())b = b.value, localStorage.setItem(b[0], b[1]) };
    GameStore.prototype.backUp = function () { for (var a = [], b = 0; b < localStorage.length; b++) { var c = localStorage.key(b); c.startsWith("backup-" + this._prefix) && a.push(c) } b = $jscomp.makeIterator(a); for (a = b.next(); !a.done; a = b.next())localStorage.removeItem(a.value); a = []; for (b = 0; b < localStorage.length; b++)c = localStorage.key(b), c.startsWith(this._prefix) && a.push(c); b = $jscomp.makeIterator(a); for (a = b.next(); !a.done; a = b.next())a = a.value, console.log("Backing up " + a), localStorage.setItem("backup-" + a, assert(localStorage.getItem(a))) };
    GameStore.prototype.restoreFromBackup = function () {
        for (var a = [], b = 0; b < localStorage.length; b++) { var c = localStorage.key(b); c.startsWith(this._prefix) && a.push(c) } b = $jscomp.makeIterator(a); for (a = b.next(); !a.done; a = b.next())localStorage.removeItem(a.value); a = []; for (b = 0; b < localStorage.length; b++)c = localStorage.key(b), c.startsWith("backup-" + this._prefix) && a.push(c); b = $jscomp.makeIterator(a); for (a = b.next(); !a.done; a = b.next())a = a.value, console.log("Restoring " + a), localStorage.setItem(a.slice(7), assert(localStorage.getItem(a))),
            localStorage.removeItem(a)
    }; GameStore.prototype.hasRotated = function () { return "true" == this._get("hasRotated") }; GameStore.prototype.setHasRotated = function () { this._set("hasRotated", "true") }; GameStore.prototype.lastBetaPuzzleAdvertised = function () { var a = this._get("lastBetaPuzzleAdvertised"); return null == a ? -1 : parseInt(a, 10) }; GameStore.prototype.setLastBetaPuzzleAdvertised = function (a) { this._set("lastBetaPuzzleAdvertised", a.toString()) };
    GameStore.prototype.needsTutorial = function () { return Configs[this.game].showTutorial && null == this._get("didTutorial") && !location.href.includes("skipTutorial") && !navigator.userAgent.includes("Googlebot") && !navigator.userAgent.includes("bingbot") && !navigator.userAgent.includes("BingPreview") }; GameStore.prototype.getTutorialValue = function () { return this._get("didTutorial") }; GameStore.prototype.setDidTutorial = function (a) { !1 !== a ? this._set("didTutorial", "true") : this._delete("didTutorial") };
    GameStore.prototype.setSkippedTutorial = function () { this._set("didTutorial", "skipped") }; GameStore.prototype.hasEnabledHints = function () { return "true" == this._get("hasEnabledHints") }; GameStore.prototype.setHasEnabledHints = function () { this._set("hasEnabledHints", "true") }; GameStore.prototype.isDarkMode = function () { var a = this._get("darkMode"); return Configs[this.game].darkMode ? "false" != a : "true" == a }; GameStore.prototype.setIsDarkMode = function (a) { this._set("darkMode", a.toString()) };
    GameStore.prototype.isRightHanded = function () { return "false" != this._get("rightHanded") }; GameStore.prototype.setIsRightHanded = function (a) { this._set("rightHanded", a.toString()) }; GameStore.prototype.isLargerUsageCounts = function () { return "true" == this._get("largerUsageCounts") }; GameStore.prototype.setIsLargerUsageCounts = function (a) { this._set("largerUsageCounts", a.toString()) }; GameStore.prototype.showTimer = function () { return "true" == this._get("showTimer") };
    GameStore.prototype.setShowTimer = function (a) { this._set("showTimer", a.toString()) }; GameStore.prototype.setRotate45Enabled = function (a) { this._set("rotate45Enabled", a.toString()) }; GameStore.prototype.isRotate45Enabled = function () { return this.isPremium() ? "false" != this._get("rotate45Enabled") : !1 }; GameStore.prototype.setLevelUpFasterEnabled = function (a) { this._set("levelUpFasterEnabled", a.toString()) };
    GameStore.prototype.isLevelUpFasterEnabled = function () { return this.isPremium() ? "false" != this._get("levelUpFasterEnabled") : !1 }; GameStore.prototype.hideCompletedPuzzles = function () { return "true" == this._get("hideCompletedPuzzles") }; GameStore.prototype.setHideCompletedPuzzles = function (a) { this._set("hideCompletedPuzzles", a.toString()) }; GameStore.prototype.getThemeColor = function () { return this._get("themeColor") || "red" }; GameStore.prototype.setThemeColor = function (a) { this._set("themeColor", a) };
    GameStore.prototype.getThemeFont = function () { return this._get("themeFont") || "roboto" }; GameStore.prototype.setThemeFont = function (a) { this._set("themeFont", a) }; GameStore.prototype.isPermaClosed = function (a) { return "true" == this._get("isPermaClosed-" + a) }; GameStore.prototype.setPermaClosed = function (a) { this._set("isPermaClosed-" + a, "true") }; GameStore.prototype.showedPremiumOnLaunch = function () { return "true" == this._get("showedPremiumOnLaunch") };
    GameStore.prototype.setShowedPremiumOnLaunch = function () { this._set("showedPremiumOnLaunch", "true") }; GameStore.prototype.showedFeatureMessage = function () { return "true" == this._get("showedFeatureMessage6") }; GameStore.prototype.setShowedFeatureMessage = function () { this._set("showedFeatureMessage6", "true") }; GameStore.prototype.showedBrowserWarning = function () { return "true" == this._get("showedBrowserWarning") }; GameStore.prototype.setShowedBrowserWarning = function () { this._set("showedBrowserWarning", "true") };
    GameStore.prototype.showedSurvey = function () { return "true" == this._get("showedSurvey") }; GameStore.prototype.setShowedSurvey = function () { this._set("showedSurvey", "true") }; GameStore.prototype.showedJoinCommunity = function () { return "true" == this._get("showedJoinCommunity") }; GameStore.prototype.setShowedJoinCommunity = function () { this._set("showedJoinCommunity", "true") }; GameStore.prototype.showedBetaPuzzleDialog = function () { return "true" == this._get("showedBetaPuzzleDialog") };
    GameStore.prototype.setShowedBetaPuzzleDialog = function () { this._set("showedBetaPuzzleDialog", "true") }; GameStore.prototype.showedWaffleDialog = function () { return "true" == this._get("showedWaffleDialog") }; GameStore.prototype.setShowedWaffleDialog = function () { this._set("showedWaffleDialog", "true") }; GameStore.prototype.isDejaVu = function () { return "true" == this._get("dejaVu") }; GameStore.prototype.setDejaVu = function () { this._set("dejaVu", "true") }; GameStore.prototype.clearDejaVu = function () { this._delete("dejaVu") };
    GameStore.prototype.suppressInstallPrompt = function () { return "true" == this._get("suppressInstallPrompt") }; GameStore.prototype.setSuppressInstallPrompt = function () { this._set("suppressInstallPrompt", "true") }; GameStore.prototype.isPremium = function () { return "true" == this._get("isPremium") }; GameStore.prototype.setIsPremium = function (a) { this._set("isPremium", a.toString()) }; GameStore.prototype.hasPlayedDays = function (a) { return this.numDaysPlayed() >= a };
    GameStore.prototype.numDaysPlayed = function () { for (var a = 0, b = $jscomp.makeIterator(this._getSerializedSolutions()), c = b.next(); !c.done; c = b.next()) { c = $jscomp.makeIterator(c.value); var d = c.next().value; c.next(); d <= DateUtil.getTodayStr() && a++ } for (b = 0; b < localStorage.length; b++)localStorage.key(b).match(this._prefix + "stats-(\\d{4}/\\d{2}/\\d{2})$") && a++; return a }; GameStore.prototype.getLeaderboardSort = function () { return this._get("leaderboardSort") || "bonus words" };
    GameStore.prototype.setLeaderboardSort = function (a) { this._set("leaderboardSort", a) }; GameStore.prototype.getReferrerUrl = function () { return this._get("referrerUrl") }; GameStore.prototype.setReferrerUrl = function (a) { return this._set("referrerUrl", a) }; GameStore.prototype.migrateBetaSolutionToToday = function (a) { a = "beta-" + a + "-solution"; var b = this._get(a); if (b) { var c = this._solutionKey(DateUtil.getTodayStr(), !1); this._set(c, b); this._delete(a); alert("Heads up! You already started today's puzzle when it was in beta.\n\nYour score will be on the leaderboard 2 hours after the puzzle was released.") } };
    GameStore.prototype.getPastStats = function () { for (var a = new Map, b = new RegExp("^" + this._prefix + "stats-(\\d{4}/\\d{2}/\\d{2})$"), c = 0; c < localStorage.length; c++) { var d = localStorage.key(c); assert("string" == typeof d); var e = d.match(b); e && (d = localStorage.getItem(d), assert("string" == typeof d), d = JSON.parse(d), (0 < d.wordCount || 0 < d.optionalWordCount || 0 < d.nonWordCount) && a.set(e[1], d)) } return a };
    GameStore.prototype.mergePastStats = function (a) {
        var b = this.getPastStats(); a = $jscomp.makeIterator(a); for (var c = a.next(); !c.done; c = a.next()) { c = c.value; var d = b.get(c.puzzleDate); !d || d.puzzleDate.endsWith("-weekly") && !c.puzzleDate.endsWith("-weekly") ? b.set(c.puzzleDate, c) : (d.score = Math.max(d.score, c.score), d.wordCount = Math.max(d.wordCount, c.wordCount), d.optionalWordCount = Math.max(d.optionalWordCount, c.optionalWordCount), d.nonWordCount = Math.max(d.nonWordCount, c.nonWordCount)) } b = $jscomp.makeIterator(b.entries());
        for (a = b.next(); !a.done; a = b.next())c = $jscomp.makeIterator(a.value), a = c.next().value, c = c.next().value, this._set("stats-" + a, JSON.stringify(c))
    }; GameStore.prototype.resetExplainers = function () { for (var a = [], b = 0; b < localStorage.length; b++)localStorage.key(b).startsWith(this._prefix + "isPermaClosed-") && a.push(localStorage.key(b)); a = $jscomp.makeIterator(a); for (b = a.next(); !b.done; b = a.next())localStorage.removeItem(b.value) };
    GameStore.prototype.resetMessages = function () { for (var a = $jscomp.makeIterator(["showedPremiumOnLaunch", "showedFeatureMessage6", "showedSurvey", "showedJoinCommunity"]), b = a.next(); !b.done; b = a.next())this._delete(b.value) }; GameStore.prototype._solutionKey = function (a, b) { return b ? "beta-" + gPuzzleManager.getBetaPuzzle().id + "-solution" : a + "-solution" };
    GameStore.prototype._deserializeSolution = function (a, b) {
        b = JSON.parse(b); assert("object" == typeof b); assert(Array.isArray(b.words)); assert(Array.isArray(b.obscureWords)); a = new Solution(a, new Set(b.words), new Set(b.obscureWords), b.givenClues); "number" == typeof b.nonWordCount && (a.nonWordCount = b.nonWordCount); "object" == typeof b.hints && (a.hints.sort = b.hints.sort, a.hints.firstLetters = b.hints.firstLetters); a.everEnabledHints = b.everEnabledHints || a.everEnabledHints; a.ms = "number" == typeof b.ms ? b.ms : null; "boolean" ==
            typeof b.shared && (a.shared = b.shared); "number" == typeof b.revealsUsed && (a.revealsUsed = b.revealsUsed); a.rotations = "number" == typeof b.rotations ? b.rotations : null; "number" == typeof b.changeId && (a.changeId = b.changeId); return a
    }; GameStore.prototype.getSolutionForKey = function (a, b, c) { b = this._get(this._solutionKey(b, c)); return null == b ? new Solution(a) : this._deserializeSolution(a, b) }; GameStore.prototype.getReloadCount = function () { return parseInt(this._get("reloadCount"), 10) || 0 };
    GameStore.prototype.setReloadCount = function (a) { this._set("reloadCount", a.toString()) }; GameStore.prototype.getDebugData = function () { var a = {}; a.solutions = Object.fromEntries(this._getSerializedSolutions()); a.pastStats = Object.fromEntries(this.getPastStats()); a.syncDeletedSolutionsComplete = this._get("syncDeletedSolutionsComplete"); return a };
    GameStore.prototype._getSerializedSolutions = function () { for (var a = new Map, b = 0; b < localStorage.length; b++) { var c = localStorage.key(b); assert("string" == typeof c); var d = c.match(new RegExp(this._prefix + "(\\d{4}/\\d{2}/\\d{2})-solution")); if (d) { var e = localStorage.getItem(c); "string" != typeof e ? api.uploadDebugData({ i: b, key: c, valueType: typeof e, value: e }) : a.set(d[1], e) } } return a };
    GameStore.prototype._syncDeletedSolutions = function () {
        var a = this; if (!this._get("syncDeletedSolutionsComplete")) {
            for (var b = new Set, c = new Set, d = 0; d < localStorage.length; d++) { var e = localStorage.key(d), f = e.match(new RegExp(this._prefix + "(\\d{4}/\\d{2}/\\d{2})-solution")); f ? b.add(f[1]) : (e = e.match(new RegExp(this._prefix + "stats-(\\d{4}/\\d{2}/\\d{2})$"))) && "2022/03/30" <= e[1] && c.add(e[1]) } b = $jscomp.makeIterator(b); for (d = b.next(); !d.done; d = b.next())c.delete(d.value); var g = 0, h = Array.from(c).sort(), k = function () {
                api.getSolution(h[g]).then(function (l) {
                    if (l) {
                        var m =
                            new Solution(null, new Set(l.words), new Set(l.optionalWords)); assert(!m.mergeWithApiSolution(l))
                    } g++; g < h.length ? setTimeout(k, 500 + 500 * Math.random()) : a._set("syncDeletedSolutionsComplete", "true")
                })
            }; 0 < h.length && k()
        }
    }; var GlobalStore = new GlobalStoreSingleton, Store = new GameStore(Config.game); "bee" == Config.game && Store.setBoolean("alpha-bee", !0); var useFakeApi = location.href.includes("fakeApi") || "about:srcdoc" == location.href || location.href.includes("test.html"); function log(a) { api.isAlpha && console.log(a) } function warn(a) { console.warn(a); var b = document.querySelector("#devErrors"); b && ("No errors detected" == b.value && (b.value = ""), b.value += a + "\n\n") } function logServerError(a, b) { warn("Server error: status code = " + a + " for " + b); "undefined" != typeof gtag && gtag("event", "api_error", { type: "server_error", status_code: a }) }
    function logApiError(a) { a instanceof SyntaxError ? console.error("JSON error parsing API response", a) : console.error("Unexpected error in API response", a); "undefined" != typeof gtag && gtag("event", "api_error", { type: "api_error", syntax_error: a instanceof SyntaxError }) } function logNetworkError(a) { warn("Network error: " + a); "undefined" != typeof gtag && gtag("event", "network_error") } var pwKey = "squaredle-admin-pw"; function clearPassword() { localStorage.removeItem(pwKey) }
    function promptPassword() { var a = window.prompt("Enter password"); a && localStorage.setItem(pwKey, a); return a } function getPassword() { var a = localStorage.getItem(pwKey); return null != a ? a : promptPassword() } var CxnError = function (a) { var b = Error.call(this, "HTTP response: " + a); this.message = b.message; "stack" in b && (this.stack = b.stack); this.responseCode = a }; $jscomp.inherits(CxnError, Error); var ApiError = function (a) { a = Error.call(this, "API error: " + a); this.message = a.message; "stack" in a && (this.stack = a.stack) };
    $jscomp.inherits(ApiError, Error); var ServerError = function (a) { var b = Error.call(this, "Server error: " + a); this.message = b.message; "stack" in b && (this.stack = b.stack); this.msg = a }; $jscomp.inherits(ServerError, Error); var InternalServerError = function () { ServerError.call(this, "Internal server error") }; $jscomp.inherits(InternalServerError, ServerError); var OverloadedServerError = function (a) { ServerError.call(this, "Server overloaded or down, status code " + a) }; $jscomp.inherits(OverloadedServerError, ServerError);
    var NetworkError = function () { var a = Error.call(this, "Network error"); this.message = a.message; "stack" in a && (this.stack = a.stack) }; $jscomp.inherits(NetworkError, Error);
    var Score = function (a, b, c, d, e, f, g, h, k) { this.userId = a; this.name = b; this.score = c; this.wordCount = d; this.optionalWordCount = e; this.nonWordCount = f; this.ms = g; this.lastUpdatedWord = h; this.isPremium = k }, Api = function () {
        var a = this; this._nonce = null; this._isMaintenanceMode = !1; this.isDevServer = location.href.includes("penguin.linux.test"); this.isTest = location.href.includes("test.html") || "about:srcdoc" == location.href; this.isLocalhost = location.host.startsWith("localhost"); this.isAlpha = location.href.includes("penguin.linux.test") ||
            "about:srcdoc" == location.href || location.href.includes("/alpha") || location.href.includes("localhost") || (new URL(location.href)).searchParams.has("alpha"); this.isBeta = location.href.includes("/beta"); this.endpoint = this.server = ""; this.setServerAndEndpoint(); if (this.isAlpha || this.isBeta) { var b = document.querySelector("#version"); b && (b.textContent += "-" + (this.isAlpha ? "alpha" : "beta")) } this._uuid = "undefined" != typeof Store ? GlobalStore.getUuid() : null; this._pendingUuidPromise = null; this._userId = "undefined" != typeof Store ?
                GlobalStore.getUserId() : null; this._hasPendingUserIdFetch = !1; this._lastScore = this._pendingScore = null; this._deletedSolution = !1; this._pendingSyncSolutionPromise = null; this._pendingScoreInterval = -1; document.addEventListener("visibilitychange", function () { a._deletedSolution || "hidden" != document.visibilityState || a._sendPendingScore(!0) })
    };
    Api.prototype.setServerAndEndpoint = function () { this.isDevServer ? (this.server = "https://penguin.linux.test/api/", this.endpoint = this.server + "index.php") : (this.endpoint = this.server = "https://squaredle.app/api/", this.isAlpha ? location.href.includes("bee/alpha") || location.href.includes("alpha-bee") ? this.endpoint += "alpha-bee/" : this.endpoint += "alpha/" : this.isBeta && (this.endpoint += "beta/"), this.endpoint += "index.php") };
    Api.prototype._sendRequest = function (a) {
        var b = this; if (this._isMaintenanceMode) return Promise.reject(new OverloadedServerError(0)); if (useFakeApi) { var c = FakeApi.prototype[a.op].bind(fakeApi); return assertInstanceOf(c(a), Promise) } var d = a.args && a.args.anonymous; return (!d && "setCookieSettings register signIn postAchievements postScore syncSolution getSolution deleteSolution setName addFavorite removeFavorite sendFeedback submitSurvey submitError devSetSolution devDeleteSolutionForDay".split(" ").includes(a.op) ?
            this._ensureIds() : Promise.resolve()).then(function () { "undefined" == typeof a.args && (a.args = {}); d || (a.args.uuid = b._uuid); a.args.game = Config.game; log(a); return b.isTest ? new Promise(function () { }) : fetch(b.endpoint, { method: "POST", body: JSON.stringify(a), credentials: b.isLocalhost ? "include" : void 0 }) }).then(function (e) {
                var f, g; return $jscomp.asyncExecutePromiseGeneratorProgram(function (h) {
                    if (1 == h.nextAddress) {
                        if (200 != e.status) {
                            0 == e.status ? logNetworkError(Error("Response status was 0")) : logServerError(e.status,
                                b.endpoint); if (500 == e.status) throw new InternalServerError; if ([503, 507, 508].includes(e.status)) throw b._isMaintenanceMode = !0, new OverloadedServerError(e.status); 404 == e.status && warn("404 Not Found: " + b.endpoint); throw new ServerError("Unexpected server error, status code " + e.status);
                        } h.setCatchFinallyBlocks(2); return h.yield(e.json(), 4)
                    } if (2 != h.nextAddress) {
                        f = h.yieldResult; if ("error" == f.status && "Static" == f.error) throw b._isMaintenanceMode = !0, new OverloadedServerError(0); if ("error" == f.status) throw warn(f),
                            "Unauthorized" == f.error && (clearPassword(), alert("Invalid password")), new ApiError(JSON.stringify(f.error)); return h.return(f)
                    } g = h.enterCatchBlock(); logApiError(g); throw g;
                })
            }, function (e) { logNetworkError(e); throw new NetworkError; })
    };
    Api.prototype._sendBeacon = function (a) { "undefined" == typeof navigator.sendBeacon ? this._sendRequest(a) : useFakeApi ? FakeApi.prototype[a.op].bind(fakeApi)(a) : ("undefined" == typeof a.args && (a.args = {}), a.args.uuid = this._uuid, log(a), this.isTest || navigator.sendBeacon(this.endpoint, JSON.stringify(a))) };
    Api.prototype._fetchJson = function (a) {
        var b = this.server + "static/" + a; this.isTest && (b = gOrigin + "/api/static/" + a); return fetch(b, { method: "GET" }).then(function (c) {
            if (200 != c.status) { 0 == c.status ? logNetworkError(Error("Response status was 0")) : logServerError(c.status, b); if (500 == c.status) throw new InternalServerError; if ([503, 507, 508].includes(c.status)) throw new OverloadedServerError(c.status); throw new ServerError("Unexpected server error, status code " + c.status); } try { return c.json() } catch (d) {
                throw logApiError(d),
                new ApiError("Unexpected JSON failure: " + d.toString());
            }
        }, function (c) { console.error("Failed to fetch " + b); throw c; })
    };
    Api.prototype.fetchText = function (a) {
        var b = this.server + "static/" + a; this.isTest && (b = gOrigin + "/api/static/" + a); return fetch(b, { method: "GET" }).then(function (c) {
            if (200 != c.status) { 0 == c.status ? logNetworkError(Error("Response status was 0")) : logServerError(c.status, b); if (500 == c.status) throw new InternalServerError; if ([503, 507, 508].includes(c.status)) throw new OverloadedServerError(c.status); throw new ServerError("Unexpected server error, status code " + c.status); } try { return c.text() } catch (d) {
                throw logApiError(d),
                new ApiError("Unexpected JSON failure: " + d.toString());
            }
        }, function (c) { console.error("Failed to fetch " + b); throw c; })
    };
    Api.prototype._ensureIds = function () {
        var a = this; if (this._pendingUuidPromise) return this._pendingUuidPromise; var b = null; this._uuid ? b = Promise.resolve() : this._pendingUuidPromise = b = this._requestUuid().then(function (c) { if ("error" == c.status) throw Error(c); a._uuid = c.data.uuid; GlobalStore.setUuid(a._uuid) }).finally(function () { a._pendingUuidPromise = null }); return this._userId || this._hasPendingUserIdFetch ? b : (this._hasPendingUserIdFetch = !0, b.then(function () {
            assert(null != a._uuid); return a._getUserId().then(function (c) {
                a._userId =
                    c.data.id; GlobalStore.setUserId(a._userId)
            })
        }).finally(function () { setTimeout(function () { a._hasPendingUserIdFetch = !1 }, 5E3) }))
    }; Api.prototype._requestUuid = function () { null == this._nonce && (this._nonce = Util.getUuid()); var a = "", b = new URL(location.href), c = b.searchParams.get("r"); c ? a = c : b.searchParams.get("fbclid") ? a = "fb" : document.referrer.endsWith(".facebook.com") && (a = "fb"); return this._sendRequest({ op: "requestUuid", args: { isTest: this.isAlpha || this.isTest, nonce: this._nonce, referrer: a, referrerUrl: Store.getReferrerUrl() } }) };
    Api.prototype.setInitialSolution = function (a) { this._lastScore = a }; Api.prototype.getUserId = function () { var a = this; return this._userId ? Promise.resolve(this._userId) : this._ensureIds().then(function () { return a._userId }) }; Api.prototype._getUserId = function () { return this._sendRequest({ op: "getUserId" }) }; Api.prototype.getUsername = function (a) { return this._sendRequest({ op: "getUsername", args: { userId: a } }).then(function (b) { return b.data.username }) }; Api.prototype.getContinent = function () { return this._sendRequest({ op: "getContinent" }).then(function (a) { return a.data.continent }) };
    Api.prototype.setCookieSettings = function (a) { return this._sendRequest({ op: "setCookieSettings", args: { functional: a.get("functional"), performance: a.get("performance"), targeting: a.get("targeting") } }) }; Api.prototype.register = function (a, b, c, d, e, f) { var g = this; return this._sendPendingScore(!1).then(function () { return g._sendRequest({ op: "register", args: { email: a, password: b, favoriteUserIds: Array.from(c), emailSignUp: d, globalSettings: e, globalAchievements: f } }) }) };
    Api.prototype.signIn = function (a, b, c, d) { var e = this; return this._sendPendingScore(!1).then(function () { return e._sendRequest({ op: "signIn", args: { email: a, password: b, favoriteUserIds: Array.from(c), globalAchievements: d } }) }).then(function (f) { f.data && f.data.id && (e._userId = f.data.id, GlobalStore.setUserId(e._userId), e._uuid = f.data.uuid); return f }) }; Api.prototype.requestPasswordReset = function (a) { return this._sendRequest({ op: "requestPasswordReset", args: { email: a } }) };
    Api.prototype.resetPassword = function (a, b) { return this._sendRequest({ op: "resetPassword", args: { hash: a, password: b } }) }; Api.prototype.requestSync = function () { return this._sendRequest({ op: "requestSync" }) }; Api.prototype.postSettings = function (a) { return this._sendRequest({ op: "postSettings", args: { settings: a } }) }; Api.prototype.postAchievements = function (a) { return this._sendRequest({ op: "postAchievements", args: { achievements: a } }) }; Api.prototype.getSubscription = function () { return this._sendRequest({ op: "getSubscription" }).then(function (a) { return a.data.subscription }) };
    Api.prototype.enableAutoRenew = function () { return this._sendRequest({ op: "enableAutoRenew" }).then(function (a) { return a.data.success }) }; Api.prototype.disableAutoRenew = function () { return this._sendRequest({ op: "disableAutoRenew" }).then(function (a) { return a.data.success }) }; Api.prototype.onPaypalSubscribe = function (a, b) { return this._sendRequest({ op: "onPaypalSubscribe", args: { subId: a, planId: b } }) }; Api.prototype.getTimes = function (a) { return this._sendRequest({ op: "getTimes", args: { dateStr: a } }) };
    Api.prototype.syncSolution = function (a) { var b = this; this._ensureIds(); this._lastScore = this._pendingScore = a; -1 == this._pendingScoreInterval && (this._pendingScoreInterval = setInterval(function () { b._sendPendingScore(!1); assert(b._pendingSyncSolutionPromise)(); b._pendingSyncSolutionPromise() }, 3E4)); return new Promise(function (c, d) { b._pendingSyncSolutionPromise = c }) }; Api.prototype.getSolution = function (a) { return this._sendRequest({ op: "getSolution", args: { date: a } }).then(function (b) { return b.data.solution }) };
    Api.prototype.deleteSolution = function (a, b) { b && (this._deletedSolution = !0, this._pendingScore = null); return this._sendRequest({ op: "deleteSolution", args: { puzzleKey: a } }) };
    Api.prototype._sendPendingScore = function (a) {
        var b = this; if (!this._pendingScore || this.isTest) return Promise.resolve(); var c = { op: "syncSolution", args: this._getSolutionArgs(this._pendingScore) }; if (a) return this._sendBeacon(c), clearInterval(this._pendingScoreInterval), this._pendingScoreInterval = -1, this._pendingSyncSolutionPromise = this._pendingScore = null, Promise.resolve(); var d = this._pendingScore; return this._sendRequest(c).then(function () {
            b._pendingScore == d && (clearInterval(b._pendingScoreInterval), b._pendingScoreInterval =
                -1, b._pendingScore = null, b._pendingSyncSolutionPromise())
        })
    }; Api.prototype.setName = function (a) { return this._sendRequest({ op: "setName", args: { name: a } }) }; Api.prototype.getPercentiles = function (a) { return this._sendRequest({ op: "getPercentiles", args: { puzzleId: a, getCompletedPercentiles: !0 } }).then(function (b) { return b.data ? b.data.percentiles : null }) };
    Api.prototype.getLeaderboardScores = function (a, b) {
        var c = this; return this._sendPendingScore(!1).then(function () {
            var d = c._lastScore ? c._getSolutionArgs(c._lastScore) : null; return c._sendRequest({ op: "getLeaderboardScores", args: { puzzleId: a, showDebug: c.isAlpha, favorites: b, isBetaPuzzle: gBeta.useBetaPuzzle, lastScore: d, getCompletedPercentiles: !0 } }).then(function (e) {
                c._lastScore = null; for (var f = [], g = $jscomp.makeIterator(e.data.scores), h = g.next(); !h.done; h = g.next())h = h.value, f.push(new Score(h.userId, h.name, h.score,
                    h.wordCount, h.optionalWordCount, h.nonWordCount, h.ms, h.lastUpdatedWord, h.isPremium)); return { scores: f, numPlayers: e.data.numPlayers, numCompleted: e.data.numCompleted, percentiles: e.data.percentiles }
            })
        })
    }; Api.prototype.addFavorite = function (a) { return this._sendRequest({ op: "addFavorite", args: { favoriteUserId: a } }) }; Api.prototype.removeFavorite = function (a) { return this._sendRequest({ op: "removeFavorite", args: { favoriteUserId: a } }) };
    Api.prototype.sendFeedback = function (a, b, c) { return this._sendRequest({ op: "sendFeedback", args: { message: a, email: b, anonymous: c, dimensions: window.innerWidth + "x" + window.innerHeight, version: gVersion } }) }; Api.prototype.submitSurvey = function (a) { return this._sendRequest({ op: "submitSurvey", args: { difficulty: a.difficulty, comments: a.comments, numDaysPlayed: a.numDaysPlayed, version: gVersion } }) };
    Api.prototype.submitError = function (a) { return this.isAlpha && !location.href.includes("alpha-bee") ? Promise.resolve() : this._sendRequest({ op: "submitError", args: { message: a.message, stack: a.stack, version: gVersion } }) }; Api.prototype.signUpForBeta = function (a) { return this._sendRequest({ op: "signUpForBeta", args: { email: a } }) }; Api.prototype.getFbShareCount = function () { return this._fetchJson("fb-share-count.json") }; Api.prototype.incFbShareCount = function () { this._sendRequest({ op: "incFbShareCount" }) };
    Api.prototype.getPuzzleForDay = function (a) { return this._sendRequest({ op: "getPuzzleForDay", args: { dateStr: a } }).then(function (b) { return b.data ? b.data : null }) }; Api.prototype.getPuzzlesForWeek = function (a) { return this._sendRequest({ op: "getPuzzlesForWeek", args: { dateStr: a } }).then(function (b) { return b.data }) }; Api.prototype.getPuzzleByKey = function (a) { return this._sendRequest({ op: "getPuzzleByKey", args: { puzzleKey: a } }).then(function (b) { return b.data ? b.data : null }) }; Api.prototype.getBetaPuzzle = function () { return this._sendRequest({ op: "getBetaPuzzle" }).then(function (a) { return a.data.puzzle }) };
    Api.prototype.devSetSolution = function (a) { return this._sendRequest({ op: "devSetSolution", args: { solution: a, pw: getPassword() } }) }; Api.prototype.devDeleteSolutionForDay = function (a) { return this._sendRequest({ op: "devDeleteSolutionForDay", args: { dateStr: a, pw: getPassword() } }) }; Api.prototype.devGetPuzzleForDay = function (a) { return this._sendRequest({ op: "devGetPuzzleForDay", args: { dateStr: a, pw: getPassword() } }).then(function (b) { return b.data || null }) };
    Api.prototype.getAvgScore = function (a) { var b = this, c = ""; "bee" == Config.game && (c = "bee/"); c += "stats-" + a.replaceAll("/", "-") + ".json"; return this._fetchJson(c).catch(function (d) { return new Promise(function (e, f) { setTimeout(function () { b._fetchJson(c).then(e, f) }, 5E3) }) }).then(function (d) { assert("number" == typeof d.averageScore); return d.averageScore }) };
    Api.prototype.getVersion = function () { var a = this, b = "version-" + (this.isAlpha ? "alpha" : this.isBeta ? "beta" : "release") + ".json"; return this._fetchJson(b).catch(function (c) { return new Promise(function (d, e) { setTimeout(function () { a._fetchJson(b).then(d, e) }, 5E3) }) }).then(function (c) { assert("string" == typeof c.version); return c.version }) }; Api.prototype.getLastWeekWords = function () { var a = "weekly/" + DateUtil.getYesterdayStr().replaceAll("/", "-") + "-weekly-words.json"; return this._fetchJson(a).then(function (b) { return b }) };
    Api.prototype.uploadDebugData = function (a) { return this._sendRequest({ op: "uploadDebugData", args: { data: JSON.stringify(a) } }) }; Api.prototype.reload = function (a) { location.reload() }; Api.prototype.setLocation = function (a, b) { location.href = a };
    Api.prototype._getSolutionArgs = function (a) { return { puzzleId: a.puzzleId, words: a.words, optionalWords: a.optionalWords, nonWordCount: a.nonWordCount, ms: a.ms, shared: a.shared, revealsUsed: a.revealsUsed, enabledHints: a.enabledHints, version: gVersion, isBetaPuzzle: gBeta.useBetaPuzzle, changeId: a.changeId } }; var api = new Api; var FakeApi = function () { this.avgScore = void 0 }; FakeApi.prototype._success = function (a) { var b = { status: "success" }; a && (b.data = a); return Promise.resolve(b) }; FakeApi.prototype.requestUuid = function (a) { return Promise.resolve({ data: { uuid: "1234" } }) }; FakeApi.prototype.getUserId = function (a) { return Promise.resolve({ data: { id: 1234 } }) }; FakeApi.prototype.getTimes = function (a) { return Promise.resolve({ data: { secondsToHints: 120, secondsToNextPuzzle: 360 } }) }; FakeApi.prototype.updateScore = function (a) { };
    FakeApi.prototype.getAvgScore = function (a) { return this._success({ avg: "undefined" == typeof FakeApi.avgScore ? 230 : FakeApi.avgScore, version: "v0.4.9" }) };
    FakeApi.prototype.getLeaderboardScores = function (a) { var b = []; for (a = 0; 100 > a; a++)b.push({ name: "Anonymous" + (0 == a ? "" : "-" + a), score: Math.ceil(500 * Math.random()), wordCount: Math.ceil(60 * Math.random()), userId: a }); b.sort(function (c, d) { return c.score != d.score ? d.score - c.score : c.timestamp > d.timestamp ? 1 : c.timestamp < d.timestamp ? -1 : 0 }); return new Promise(function (c) { setTimeout(function () { c({ status: "success", data: { scores: b, favorites: [b[2], b[15]] } }) }, 1E3) }) };
    FakeApi.prototype.setName = function (a) { return "used" == a.args.name ? this._success({ success: !1, reason: "Sorry, that name is taken" }) : this._success({ success: !0 }) }; FakeApi.prototype.submitError = function (a) { return this._success() }; FakeApi.prototype.sendFeedback = function (a) { return this._success() }; var fakeApi = new FakeApi; window.dataLayer = []; window.plausible = function (a, b) { (window.plausible.q || []).push(arguments) }; function gtag() { window.dataLayer.push(arguments) } gtag("js", new Date); gtag("config", "UA-221779398-1", { anonymize_ip: !0 }); var gAnalyticsId = "G-SXC0D18MH7"; gtag("config", "AW-10976814591");
    function gtagReconfig() { gtag("set", { game: Config.game, new_user: 0 == localStorage.length, registered: null != GlobalStore.getEmail(), user_id: GlobalStore.getUserId(), version: gVersion, tutorial: Store.getTutorialValue() || "shown" }); gtag("config", gAnalyticsId, { game: Config.game, new_user: 0 == localStorage.length, registered: null != GlobalStore.getEmail(), user_id: GlobalStore.getUserId(), version: gVersion, tutorial: Store.getTutorialValue() || "shown" }) }
    function gtagSet(a, b) { gtag("set", { property: b }); gtag("config", gAnalyticsId, { property: b }) } gtagReconfig(); (GlobalStore.analyticsOptedOut() || location.href.startsWith("http://localhost") || location.href.includes("penguin.linux.test") || location.href.includes("/alpha")) && !location.href.includes("forceAnalytics") && (window["ga-disable-" + gAnalyticsId] = !0, console.log("Google Analytics disabled")); function uetReportFindWord() { window.uetq = window.uetq || []; window.uetq.push("event", "find_word", {}) }
    var loadedBingScript = !1; function loadBingScript() { } var loadedFacebook = !1; function loadFacebook() { onReady(function () { var a = document.createElement("script"); a.setAttribute("async", ""); a.setAttribute("defer", ""); a.setAttribute("crossorigin", "anonymous"); a.setAttribute("src", "https://connect.facebook.net/en_US/sdk.js"); document.body.appendChild(a) }) }
    function cookiesRequireConsent() { var a = document.cookie.split("; ").find(function (b) { return b.startsWith("continentCode=") }); if (!a) return null; a = decodeURIComponent(a.split("=")[1]); return "EU" == a || "Europe" == a } function getContinentCode() { return $jscomp.asyncExecutePromiseGeneratorProgram(function (a) { return a.return(api.getContinent()) }) }
    null != cookiesRequireConsent() || document.cookie.includes("acceptedCookies=") || getContinentCode().then(function (a) { 0 < a.length && (document.cookie = "continentCode=" + encodeURIComponent(a) + ("; expires=" + (new Date(2038, 0, 1)).toUTCString())); cookiesRequireConsent() || updateConsent() }); function setConsentCategories(a) { a = encodeURIComponent(a.join(",")); document.cookie = "acceptedCookies=" + a + ("; expires=" + (new Date(2038, 0, 1)).toUTCString()); updateConsent(); api.setCookieSettings(getConsentCategories()) }
    function getConsentCategories() { var a = document.cookie.split("; ").find(function (e) { return e.startsWith("acceptedCookies=") }), b = new Map; if (a) { a = decodeURIComponent(a.split("=")[1]).split(","); a = $jscomp.makeIterator(a); for (var c = a.next(); !c.done; c = a.next()) { var d = $jscomp.makeIterator(c.value.split("=")); c = d.next().value; d = d.next().value; b.set(c, "true" == d) } } return b }
    function updateConsent() { var a = cookiesRequireConsent(), b = 0 == a; a = 0 == a; var c = getConsentCategories(); c.get("targeting") && (b = !0); b && (loadedBingScript || loadBingScript(), loadedFacebook || loadFacebook()); c.get("performance") && (a = !0); gtag("consent", "default", { ad_storage: b ? "granted" : "denied", analytics_storage: a ? "granted" : "denied" }) } updateConsent(); var SearchEvent = function (a) { this._word = a; this._wordOfTheDay = !1 }; SearchEvent.prototype.setWordType = function (a) { this._wordType = a };
    SearchEvent.prototype.setWordResult = function (a) { this._wordResult = a }; SearchEvent.prototype.setWordOfTheDay = function () { this._wordOfTheDay = !0 }; SearchEvent.prototype.log = function () { var a = DateUtil.now(); gtag("event", "search", { search_term: this._word, word_type: this._wordType, word_result: this._wordResult, word_of_the_day: this._wordOfTheDay, value: this._word.length, utc_hour: a.getUTCHours(), hour: a.getHours() }) }; SearchEvent.WordType = { kWord: "word", kOptionalWord: "optional_word", kNotAWord: "not_a_word" };
    SearchEvent.WordResult = { kFound: "found_word", kAlreadyFound: "already_found_word", kNotAWord: "not_a_word" }; var ButtonClickEvent = { log: function (a) { gtag("event", "button_click", { button: a }); plausible("Button", { props: { button: a } }) } }; var AchievementItem, AchievementsModel = function (a, b) {
        this._store = a; this._achievementsMgr = b; this.all = [{ id: "perfect", title: "Perfect %player", desc: "Finish a %puzzle without any incorrect words." }, { id: "share", title: "Go Viral", desc: "Share your score." }, { id: "speedy", title: "Speedy %player", desc: "Finish a %puzzle in under 10 minutes." }, { id: "speedy5", title: "Supersonic %player", desc: "Finish a %puzzle in under 5 minutes." }, { id: "kofi", title: "Drink Some Ko-fi", desc: 'Check out my page on <a href="https://ko-fi.com/squaredle" target="_blank">Ko-fi</a>. (Donation not required, but appreciated!)' },
        { id: "finishFriday", title: "Friday %player", desc: "Friday is often the hardest puzzle of the week.", syncKey: "friday" }, { id: "finishSunday", title: "Sunday %player", desc: "Sunday %puzzles often have more words than other daily %puzzles.", syncKey: "sunday" }, { id: "longWordFirst", title: "Show-Off", desc: "Find a long word (8+) as your first word in a puzzle.", game: "squaredle" }, { id: "pangramFirst", title: "Show-Off", desc: "Find a pangram (using all letters) as your first word in a puzzle.", game: "bee" }, {
            id: "longBonusWord",
            title: "Language Connoisseur", desc: "Find a long bonus word (8+)."
        }, { id: "finish5", title: "Pro %player", desc: "Finish 5 %puzzles.", target: 5, sync: !1 }, { id: "finish20", title: "Epic %player", desc: "Finish 20 %puzzles.", target: 20, sync: !1 }, { id: "finish50", title: "Elite %player", desc: "Finish 50 %puzzles.", target: 50, syncKey: "finished" }, { id: "finishWeek", title: "Daily %player", desc: "Solve every puzzle for a week.", target: 7, syncKey: "week" }, {
            id: "languageLearner", title: "Language Learner", desc: "Look up 5 words in the dictionary by tapping the word chip above the board.",
            target: 5, syncKey: "dictionaryLookups"
        }, { id: "languageExplorer", title: "Language Explorer", desc: "Find 20 bonus words in one %puzzle.", target: 20, syncKey: "bonusWords" }, { id: "noRotate", title: "Stoic", desc: "Finish a puzzle without rotating the board." }, { id: "feedback", title: "Everyone's a Critic", desc: "Find the Feedback menu. (And let me know if you have thoughts!)", game: "squaredle" }, { id: "rotator", title: "Epic Rotator", desc: "Rotate the board 10 times in one session.", secret: !0, game: "squaredle" }, {
            id: "rotator",
            title: "Epic Shuffler", desc: "Shuffle the board 10 times in one session.", secret: !0, game: "bee"
        }, { id: "timeTraveler", title: "Time Traveler", desc: "Finish a puzzle from the archives.", premium: !0, game: "squaredle" }, { id: "dejaVu", title: "D\u00e9j\u00e0 Vu", desc: "Replay a puzzle from the archives from scratch.", premium: !0, game: "squaredle" }]; for (a = this.all.length; a--;)this.all[a].game && this.all[a].game != this._store.game && this.all.splice(a, 1); this._isSyncingAchievements = !1; gServerAchievements && (this.syncAchievements(gServerAchievements),
            gServerAchievements = null); this._store.isDejaVu() && (this.setIfIncomplete("dejaVu", 1), this._store.clearDejaVu())
    };
    AchievementsModel.prototype.syncAchievements = function (a) {
        this._isSyncingAchievements = !0; var b = this.load(); b.get("languageLearner").value = Math.max(b.get("languageLearner").value, a.dictionaryLookups); a.noRotate && (b.get("noRotate").value = 1); a.feedback && (b.get("feedback").value = 1); a.rotator && (b.get("rotator").value = 1); a.share && (b.get("share").value = 1); a.kofi && (b.get("kofi").value = 1); "squaredle" == this._store.game ? a.longWordFirst && (b.get("longWordFirst").value = 1) : "bee" == this._store.game && a.pangramFirst &&
            (b.get("pangramFirst").value = 1); a.longBonusWord && (b.get("longBonusWord").value = 1); a.timeTraveler && (b.get("timeTraveler").value = 1); a.dejaVu && (b.get("dejaVu").value = 1); this._save(b); this._isSyncingAchievements = !1
    };
    AchievementsModel.prototype.load = function () { var a = new Map, b = this._store.getItem("achievements"); if (b) try { for (var c = JSON.parse(b), d = $jscomp.makeIterator(Object.getOwnPropertyNames(c)), e = d.next(); !e.done; e = d.next()) { var f = e.value; a.set(f, c[f]) } } catch (g) { } b = $jscomp.makeIterator(this.all); for (c = b.next(); !c.done; c = b.next())c = c.value, a.has(c.id) || a.set(c.id, { value: 0 }); return a };
    AchievementsModel.prototype._save = function (a) { if (!this._store.needsTutorial()) { var b = this._store.getItem("achievements"); a = JSON.stringify(Object.fromEntries(a)); b != a && (this._store.setItem("achievements", a), !this._isSyncingAchievements && GlobalStore.getUuid() && api.postAchievements(this.getSyncAchievements())) } };
    AchievementsModel.prototype.getSyncAchievements = function () { for (var a = this.load(), b = { finished: a.get("finish50").value }, c = $jscomp.makeIterator(this.all), d = c.next(); !d.done; d = c.next())d = d.value, 0 != d.sync && (b[d.syncKey || d.id] = a.get(d.id).value); return b }; AchievementsModel.getGlobalAchievements = function () { for (var a = { squaredle: null, bee: null }, b = $jscomp.makeIterator(["squaredle", "bee"]), c = b.next(); !c.done; c = b.next()) { c = c.value; var d = new AchievementsModel(new GameStore(c)); a[c] = d.getSyncAchievements() } return a };
    AchievementsModel.prototype.updateGameAchievements = function () {
        for (var a = this._store.getStats().stats, b = this.load(), c = 0, d = 0, e = "1979/01/01", f = !1, g = !1, h = $jscomp.makeIterator(Array.from(a.keys()).sort()), k = h.next(); !k.done; k = h.next()) {
            k = k.value; var l = new Date(k), m = a.get(k), p = gPuzzleManager.puzzleStats.get(k); p && (m.score >= p.maxScore ? (c++, 1 == DateUtil.numDaysBetween(e, k) ? d++ : d = 1, 7 == d && (g = !0), k == DateUtil.origYesterdayDateStr && (f = !0), 0 == m.nonWordCount && this.setIfIncomplete("perfect", 1, b), 0 == l.getDay() ? this.setIfIncomplete("finishSunday",
                1, b) : 5 == l.getDay() && this.setIfIncomplete("finishFriday", 1, b), 6E5 > m.ms && this.setIfIncomplete("speedy", 1, b), 3E5 > m.ms && this.setIfIncomplete("speedy5", 1, b), e = k) : k != DateUtil.origTodayDateStr && (d = 0), 20 <= m.optionalWordCount ? this.setIfIncomplete("languageExplorer", 20, b) : k == DateUtil.getTodayStr() && this.setIfIncomplete("languageExplorer", this._store.getSolutionForKey(null, k).obscureWords.size, b))
        } g ? this.setIfIncomplete("finishWeek", 7, b) : f ? this.setIfIncomplete("finishWeek", d, b) : this.setIfIncomplete("finishWeek",
            0, b); a = $jscomp.makeIterator([5, 20, 50]); for (d = a.next(); !d.done; d = a.next())this.setIfIncomplete("finish" + d.value, c, b); this._save(b)
    }; AchievementsModel.prototype.setIfIncomplete = function (a, b, c) { var d = this.all.find(function (g) { return g.id == a }); if (!d) return !1; var e = c ? c : this.load(), f = e.get(a); if (f) if (assert(d), f.value < (d.target || 1)) f.value = b; else return !1; else e.set(a, { value: b }); this._achievementsMgr && b >= (d.target || 1) && this._achievementsMgr.showAchievement(d); c || this._save(e); return !0 };
    AchievementsModel.prototype.increment = function (a) { var b = this.load(), c = b.get(a), d = !1, e = this.all.find(function (f) { return f.id == a }); assert(e); c ? (d = c.value >= (e.target || 1), c.value++) : (d = !1, b.set(a, { value: 1 })); this._save(b); return d || e.target && !(c.value >= e.target) ? null : e };
    AchievementsModel.prototype.formatForGame = function () { for (var a = $jscomp.makeIterator(this.all), b = a.next(); !b.done; b = a.next()) { b = b.value; for (var c = $jscomp.makeIterator(Object.getOwnPropertyNames(Strings)), d = c.next(); !d.done; d = c.next())d = d.value, b.title = b.title.replaceAll(d, Strings[d]), b.desc = b.desc.replaceAll(d, Strings[d]) } };
    var AchievementsMgr = function () {
        var a = this; null == gAchievementsMgr && (gAchievementsMgr = this); this._model = new AchievementsModel(Store, this); this._model.formatForGame(); this._numRotations = 0; this._calculatingInitialAchievements = this._showingAchievements = !1; this._timeout = 0; $("#achievement").addEventListener("click", function (b) { $("#achievement").hidden = !0; a.show(); var c = b.currentTarget.dataset.achievement; setTimeout(function () { $("#achievement-" + c).scrollIntoView({ behavior: "smooth" }) }) }); $$(".kofi-link").forEach(function (b) {
            return b.addEventListener("click",
                function () { return a._onKofiClick() })
        }); Store.needsTutorial() || Store.getBoolean("initializedAchievements2") || setTimeout(function () { a._calculatingInitialAchievements = !0; a._model.updateGameAchievements(); a._calculatingInitialAchievements = !1; Store.setBoolean("initializedAchievements2", !0) }, 2E3)
    }; AchievementsMgr.prototype.syncAchievements = function (a) { return this._model.syncAchievements(a) };
    AchievementsMgr.prototype.show = function () {
        var a = this; this._showingAchievements = !0; this._model.updateGameAchievements(); var b = this._model.load(); this._model.all.sort(function (p, q) { p = b.get(p.id).value >= ("undefined" != typeof p.target ? p.target : 1) ? 1 : 0; q = b.get(q.id).value >= ("undefined" != typeof q.target ? q.target : 1) ? 1 : 0; return p - q }); for (var c = '<div id="achievements">', d = $jscomp.makeIterator(this._model.all), e = d.next(); !e.done; e = d.next()) {
            e = e.value; var f = b.get(e.id) || { value: 0 }, g = e.target || 1, h = "", k = ""; f.value >=
                g ? (h = '<svg><use href="#icon-checkbox-marked-outline"></svg>', k = "completed") : h = '<svg><use href="#icon-checkbox-blank-outline"></svg>'; var l = e.title, m = ""; e.secret && f.value < g || (1 < g && f.value < g && (m = f.value / g * 100, m = '\n          <div class="progressOutline">\n            <div class="progressFilled" style="width: ' + (0 < m ? "calc(" + m + "% + 2px)" : "0") + '">\n              <span class="count">' + (f.value || "") + "</span>\n            </div>\n          </div>"), f = "", e.premium && (l = '\n          <svg class="inline-icon"><use href="#icon-squared"></svg> ' +
                    l, Store.isPremium() || (f = '\n            <div class="achievementPremium">\n              Requires <a href="#">Squaredle Squared</a>.\n            </div>')), g = "", "undefined" != typeof gGlobalAchievements[e.id] && 0 < gGlobalAchievements[e.id] && (g = '\n          <div class="achievementGlobalPct">\n            ' + gGlobalAchievements[e.id] + "% of players\n          </div>"), c += '\n        <div class="achievement ' + k + '" id="achievement-' + e.id + '">\n          <div class="status">' + h + '</div>\n          <div class="info">\n            <div class="achievementTitle">' +
                    l + '</div>\n            <div class="achievementDesc">' + e.desc + "</div>\n            " + m + "\n            " + f + "\n            " + g + "\n          </div>\n        </div>")
        } Dialog.show("Achievements", c + "</div>"); $("#achievement-kofi a").addEventListener("click", function () { return a._onKofiClick() }); $$("#dialog .achievementPremium a").forEach(function (p) { p.addEventListener("click", function (q) { q.preventDefault(); gPopups.show($("#premiumSignup")) }) }); this._showingAchievements = !1
    };
    AchievementsMgr.prototype.showAchievement = function (a) {
        var b = this; if (!this._showingAchievements && !this._calculatingInitialAchievements) {
            var c = $("#achievement"); this._timeout && (clearTimeout(this._timeout), c.classList.remove("fade-out")); c.dataset.achievement = a.id; c.querySelector(".title").textContent = a.title; c.querySelector(".desc").innerHTML = a.desc; c.hidden && (c.hidden = !1, c.classList.add("fade-in"), this._timeout = setTimeout(function () {
                c.classList.add("fade-out"); b._timeout = setTimeout(function () {
                    c.hidden =
                        !0
                }, 5E3)
            }, 7E3))
        }
    }; AchievementsMgr.prototype.setIfIncomplete = function (a, b, c) { return this._model.setIfIncomplete(a, b, c) }; AchievementsMgr.prototype.increment = function (a) { (a = this._model.increment(a)) && this.showAchievement(a) }; AchievementsMgr.prototype.onRotate = function () { this._numRotations++; 10 == this._numRotations && this.setIfIncomplete("rotator", 1) }; AchievementsMgr.prototype.onShare = function () { this.setIfIncomplete("share", 1) };
    AchievementsMgr.prototype.onComplete = function (a) { this._model.updateGameAchievements(); 0 == a.rotations && this.setIfIncomplete("noRotate", 1); !gPuzzleManager.isTodayPuzzle && gPuzzleManager.puzzleKey.match(/\d{4}\/\d{2}\/\d{2}/) && this.setIfIncomplete("timeTraveler", 1) }; AchievementsMgr.prototype._onKofiClick = function () { this.setIfIncomplete("kofi", 1) && Dialog.isDialogOpen("Achievements") && this.show() }; var gAchievementsMgr = null, gServerAchievements = null; var PopupManagerListener = function () { }; PopupManagerListener.prototype.onPopupShow = function (a) { }; PopupManagerListener.prototype.onPopupClose = function (a) { };
    var PopupManager = function () {
        var a = this; this._curPopup = null; this._lastPopupShownTime = 0; this._showingConfirm = !1; this._onCloseHooks = []; this._closePopupClickListener = function (b) { assert(a._curPopup && !a._curPopup.hidden); !a._curPopup.contains(b.target) && !$("#definition").contains(b.target) && !$("#confirm").contains(b.target) && 200 < (new Date).getTime() - a._lastPopupShownTime && (a.close(!0), b.preventDefault()) }; this._listeners = []; window.addEventListener("keydown", function (b) { return a._onKeyDown(b) }); onReady(function () {
            $$(".popup .closeBtn").forEach(function (b) {
                b.addEventListener("click",
                    function (c) { c.preventDefault(); a.close(!0) })
            })
        }); this._delayClose = !1; this._delayCloseTimeout = -1
    }; PopupManager.prototype.addListener = function (a) { this._listeners.push(a) }; PopupManager.prototype.removeListener = function (a) { a = this._listeners.indexOf(a); -1 != a && this._listeners.splice(a, 1) }; PopupManager.prototype._onKeyDown = function (a) { var b = assertInstanceOf(a, KeyboardEvent); !$("#definition").hidden || "Escape" != b.key && "Esc" != b.key || (this.close(!0), a.preventDefault()) };
    PopupManager.prototype.isPopupOpen = function (a) { return a ? this._curPopup == a : !!this._curPopup }; PopupManager.prototype.curPopup = function () { return this._curPopup };
    PopupManager.prototype.show = function (a) {
        var b = this; assertInstanceOf(a, HTMLElement); if (a.classList.contains("popup") && !(this._curPopup && (this._curPopup.classList.contains("uncloseable") || this._curPopup.classList.contains("important")) || this._showingConfirm)) {
            gtag("event", "popup_view", { popup_title: a.id }); this.close(!1); $("#overlay").hidden = !1; $("#game").classList.add("blur"); a.hidden = !1; this._curPopup = a; var c = a.querySelector('[role="tab"][aria-selected="true"]'); if (c) c.focus(), c.blur(); else if (c = a.querySelector("h2 .closeBtn")) c.focus(),
                c.blur(); if (this._delayClose = a.classList.contains("delayClose")) a.querySelector(".closeBtn").hidden = !0, clearTimeout(this._delayCloseTimeout), this._delayCloseTimeout = setTimeout(function () { b._delayClose = !1; a.querySelector(".closeBtn").hidden = !1 }, 2E3); this._listeners.forEach(function (d) { return d.onPopupShow(a.id) }); this._lastPopupShownTime = new Date; requestAnimationFrame(function () { return window.addEventListener("click", b._closePopupClickListener) })
        }
    };
    PopupManager.prototype.close = function (a) {
        if (!a || !this._delayClose) if (!a || !this._showingConfirm) if (window.removeEventListener("click", this._closePopupClickListener), this._curPopup && (!a || !this._curPopup.classList.contains("uncloseable"))) {
            a && gRouter.removeHash(); var b = this._curPopup.id; this._curPopup.hidden = !0; this._curPopup = null; $("#overlay").hidden = !0; $("#game").classList.remove("blur"); a = this._onCloseHooks.slice(); this._onCloseHooks = []; a.forEach(function (c) { return c() }); document.activeElement.blur();
            this._listeners.forEach(function (c) { return c.onPopupClose(b) })
        }
    }; PopupManager.prototype.addOnCloseHook = function (a) { this._onCloseHooks.push(a) }; PopupManager.prototype.onShowConfirm = function () { this._showingConfirm = !0 }; PopupManager.prototype.onCloseConfirm = function () { this._showingConfirm = !1 }; var gPopups = new PopupManager; var gNumErrors = 0;
    function gTryDebug(a) {
        try { return a() } catch (b) {
            try { gNumErrors++, 1 == gNumErrors && (api.submitError(b), setTimeout(function () { return gNumErrors = 0 }, 1E3)) } catch (c) { alert("Error logging error!\n" + c.message) } 1 == gNumErrors && $("#debugReload").addEventListener("click", function (c) { c.preventDefault(); api.reload("debugReload") }); a = ""; b instanceof Error ? (a = b.stack, a.includes(b.message) || (a = b.message + "\n" + a)) : a = b.toString(); gPopups.isPopupOpen($("#debug")) || ($("#debugLog").textContent = a, $("#debugEmail").textContent = "hello@squaredle.app",
                a.includes("Browser is outdated") || gPopups.show($("#debug"))); throw b;
        }
    } function gTryDebugAsync(a) { var b; return $jscomp.asyncExecutePromiseGeneratorProgram(function (c) { if (1 == c.nextAddress) return c.setCatchFinallyBlocks(2), c.yield(a(), 4); if (2 != c.nextAddress) return c.leaveTryBlock(0); b = c.enterCatchBlock(); gTryDebug(function () { throw b; }); c.jumpToEnd() }) }; var PageTimer = function (a, b) { var c = this; gPageTimer = this; this._lastDate = null; this._timeout = -1; this._solution = a; (this._isFinished = b) || null == this._solution.ms ? this._isFinished && null != this._solution.ms && this.showTime() : (this._visibilityChangeListener = function () { return c._onVisibilityChange() }, document.addEventListener("visibilitychange", this._visibilityChangeListener), gPopups.addListener(this), this.start()) }; PageTimer.prototype.canStart = function () { return !gPopups.isPopupOpen() && "visible" == document.visibilityState };
    PageTimer.prototype.start = function () { this.canStart() && (this._lastDate = new Date, this._tick()) }; PageTimer.prototype.pause = function () { assert(this.isStarted()); this.updateTimer(); this._lastDate = null; clearTimeout(this._timeout); this._timeout = -1 }; PageTimer.prototype.finish = function () { this.isStarted() && this.pause(); document.removeEventListener("visibilitychange", this._visibilityChangeListener); gPopups.removeListener(this); this._isFinished = !0 }; PageTimer.prototype.isStarted = function () { return null != this._lastDate };
    PageTimer.prototype.updateTimer = function () { assert(null != this._solution.ms); var a = new Date, b = a.getTime() - this._lastDate.getTime(); 5E3 < b && (b = 5E3); this._solution.ms += b; this._lastDate = a; Store.showTimer() && this.showTime() };
    PageTimer.prototype.showTime = function () { assert(null != this._solution.ms); var a = this._solution.ms / 1E3, b = a / 60, c = b / 60, d = c / 24; a = [Math.floor(d), Math.floor(c) % 24, Util.leftPad(Math.floor(b) % 60, "0", 2), Util.leftPad(Math.floor(a) % 60, "0", 2)]; 1 <= d ? c = a[0] + "d " + a[1] + "h " + a[2] + "m " + a[3] + "s" : (a = a.slice(1), 1 > c && (a = a.slice(1)), c = a.join(":")); $("#timer").textContent = c }; PageTimer.prototype.onPopupShow = function () { this.isStarted() && this.pause() }; PageTimer.prototype.onPopupClose = function () { this.start() };
    PageTimer.prototype._tick = function () { var a = this; this.updateTimer(); this._timeout = setTimeout(function () { return a._tick() }, 1E3) }; PageTimer.prototype._onVisibilityChange = function () { assert(!this._isFinished); this.isStarted() && "hidden" == document.visibilityState ? (this.pause(), Store.updateSolutionMs(this._solution)) : this.isStarted() || "visible" != document.visibilityState || this.start() }; var gPageTimer = null; var Dialog = function () { };
    Dialog.show = function (a, b, c, d, e) {
        var f = $("#dialog"); f.querySelector(".closeBtn").hidden = !!c; var g = f.querySelector(".content"); f.querySelector(".title").innerHTML = a; g.innerHTML = b; f.classList.toggle("uncloseable", !!c); f.classList.toggle("delayClose", !!d); e && (a = document.createElement("div"), a.classList.add("p", "closeButtons"), b = document.createElement("button"), b.classList.add("basicButton"), b.textContent = e.label, b.addEventListener("click", function (h) { gPopups.close(); e.action() }), a.appendChild(b), b = document.createElement("button"),
            b.classList.add("primaryButton"), b.textContent = "Close", b.addEventListener("click", function (h) { return gPopups.close() }), a.appendChild(b), g.appendChild(a)); gPopups.show(f); g.scrollTop = 0
    }; Dialog.isDialogOpen = function (a) { return gPopups.isPopupOpen($("#dialog")) && $("#dialog .title").innerHTML == a }; var gContractions = "'twas 'tween 'twere ain't aren't can't could've couldn't couldn't've daren't daresn't didn't doesn't don't everybody's everyone's had've hadn't hasn't haven't here's how'd how'll how're how's i'd've isn't it'll ma'am may've might've mightn't must've mustn't mustn't've needn't ne'er o'clock ought've oughtn't oughtn't've shan't she's should've shouldn't somebody's someone's something's that'd that'll there'd there'll there's they'd they'll they're they've wasn't we'd've we've weren't what'd what'll what're what's what've when'd when's where'd where'll where's where've which's which've who'd who'd've who'll who're who's who've why'd why're why's won't would've wouldn't wouldn't've y'all you'd you'll you're you've".split(" "); var gBannedGuesses = "abos;amakwerekwere;arse;arses;arsing;asshole;baas;baases;backra;backras;bakra;bakras;ballbag;ballbags;ballsack;bantu;bantus;bastard;bastards;batshit;beaner;beaners;beastiality;bender;biatch;biatches;binghi;binghis;bint;bints;bitch;bitched;bitches;bitching;blackamoor;blackamoors;blackfella;blackfellas;blowjob;boche;boches;bogtrotter;bogtrotters;bohunk;bohunks;bollock;bollocks;boner;boong;boonga;boongas;boongs;bosche;bosches;bossboy;bossboys;brushite;bubba;bubbas;buckra;buckras;buftie;bufties;bufty;bukkake;bulldike;bulldikes;bulldyke;bulldykes;bullshit;bullshits;bullshitted;bullshitter;bullshitters;bullshitting;bumboy;bumboys;buttmunch;buttplug;chickenshit;chickenshits;chinkie;chinkies;cholo;cholos;clit;cocksucker;cocksuckers;coolie;coolies;cooly;coon;coonshit;coonshits;copperskin;copperskins;cracka;crackas;crap;crapped;crapper;crapping;crip;crippledom;crippledoms;crips;cummed;cummer;cumming;cums;cumshot;cunt;cunts;cunty;dago;dagoes;dagos;darkey;darkeys;darkie;darkies;darky;dick;dicked;dicking;dicks;dikey;dikier;dikiest;dildo;dipshit;dipshits;dogan;dogans;douche;douchebag;douchebags;dyke;dykey;dykier;dykiest;faggeries;faggery;faggier;faggiest;fagging;faggot;faggotier;faggotiest;faggotries;faggotry;faggots;faggoty;faggy;fags;fatass;fatasses;fellate;fellatio;frig;frigged;frigging;frigs;fuck;fucked;fucker;fuckers;fuckface;fuckfaces;fuckhead;fuckheads;fucking;fuckoff;fuckoffs;fucks;fuckup;fuckups;fuckwit;fuckwits;fudgepacker;gammat;gammats;gangbang;gaylord;gaysex;ginzo;ginzoes;ginzos;gipped;gipping;gippo;gippoes;gippos;gips;gobshite;gobshites;golliwog;golliwogg;golliwoggs;golliwogs;gollywog;gollywogs;gook;gookeye;gookeyes;gooks;gooky;gookys;goyim;goyisch;goyish;goyishe;goys;gringa;gringas;gringo;gringos;guinea;gypo;gypos;gypped;gypper;gyppers;gypping;gyppo;gyppos;gyps;gypsied;gypsies;gypster;gypsters;gypsy;gypsying;haole;haoles;harelip;harelipped;harelips;hasbian;hasbians;hebe;hebes;honkey;honkeys;honkie;honkies;honky;hori;horis;horniest;horny;horseshit;horseshits;humping;hunkey;hunkeys;hunkie;hunkies;incest;incests;incestuous;incestuously;incestuousness;incestuousnesses;injun;injuns;jackoff;jerkoff ;jerries;jerry;jerrys;jesuit;jesuitic;jesuitical;jesuitically;jesuitism;jesuitisms;jesuitries;jesuitry;jesuits;jewboy;jewboys;jigaboo;jigaboos;jism;jizm ;jizz;kaffir;kaffirboom;kaffirbooms;kaffirs;kafir;kafirs;kanaka;kanakas;kike;kikes;knobhead;knobjocky;kraut;krauts;langer;langers;lesbo;lesbos;leses;lezes;lezz;lezza;lezzas;lezzes;lezzie;lezzies;lezzy;lubra;lubras;massa;massas;merde;mick;micks;mierda;mindfuck;mindfucked;mindfucks;minge;minges;moffie;moffies;mofo;mong;monged;mongol;mongolian;mongolism;mongolisms;mongoloid;mongoloids;mongols;mongs;motherfucker;motherfuckers;motherfucking;mulatress;mulatresses;mulatta;mulattas;mulatto;mulattoes;mulattos;mulattress;mulattresses;munt;munts;muntu;muntus;nance;nances;nancier;nancies;nanciest;nancified;nancy;negress;negresses;negro;negroes;negrohead;negroheads;negroid;negroidal;negroids;negroism;negroisms;negrophil;negrophile;negrophiles;negrophilism;negrophilisms;negrophilist;negrophilists;negrophils;negrophobe;negrophobes;negrophobia;negrophobias;negros;nelly;niger;nigers;nigga;niggah;nigger;niggerdom;niggerdoms;niggered;niggerhead;niggerheads;niggerier;niggeriest;niggering;niggerish;niggerism;niggerisms;niggerling;niggerlings;niggers;niggery;niglet;niglets;nitchie;nitchies;nonhandicapped;nonpapist;nonpapists;numbnuts;nutsack;nutsacks;octaroon;octaroons;octoroon;octoroons;ofay;ofays;papish;papisher;papishers;papishes;papism;papisms;papist;papistic;papistical;papistically;papistries;papistry;papists;peckerwood;peckerwoods;phonesex;picaninnies;picaninny;piccanin;piccaninnies;piccaninny;piccanins;pickaninnies;pickaninny;pickney;pickneys;pikey;pikeys;piss;polack;polacks;poofier;poofiest;poofs;pooftah;pooftahs;poofter;poofters;poofy;poove;pooveries;poovery;pooves;poovier;pooviest;poovy;poperies;popery;popish;popishly;porn;porno;pornographic;pornography;pornos;porns;pouftah;pouftahs;poufter;poufters;pube;pubes;pussies;pussy;quadroon;quadroons;quarteroon;quarteroons;quashee;quashees;quashie;quashies;queerdom;queerdoms;quintroon;quintroons;raghead;ragheads;rape;raped;rapes;raping;redneck;rednecked;rednecks;redskin;redskins;reffo;reffos;retard;retardate;retardates;retarded;retards;sakai;sakais;sambo;sambos;schizier;schiziest;schizo;schizos;schizy;schizzier;schizziest;schizzy;schvartze;schvartzes;schwartze;schwartzes;semimute;semimutes;shat;sheeney;sheeneys;sheenie;sheenies;shegetz;shemale;shemales;shicksa;shicksas;shiksa;shiksas;shikse;shikseh;shiksehs;shikses;shirtlifter;shirtlifters;shit;shitbag;shitbags;shitcan;shitcans;shite;shites;shitface;shitfaced;shitfaces;shithead;shitholes;shithteads;shitlist;shits;shitshole;shitstorm;shitstorms;shitte;shitted;shittier;shittiest;shittiness;shitting;shitty;shkotzim;shvartze;shvartzes;shylock;shylocks;skank;skanks;skanky;skimo;skimos;spastics;spaz;spazz;spazzed;spazzes;spazzing;spic;spick;spicks;spics;spik;spiks;squaw;squawman;squawmen;squaws;taig;taigs;terr;thot;thots;tits;tittiefucker;titties;titty;towelhead;towelheads;trannie;trannies;tranny;twat;twinkie;twinkies;umlungu;umlungus;vendu;vendus;wang;wank;wanked;wanker;wanking;wanks;wench;wetback;wetbacks;whitey;whiteys;whities;whore;wigga;wiggas;wigger;wiggers;willy;woggish;wogs;wooftah;wooftahs;woofter;woofters;yids;zambo;zambos".split(";"),
        gInappropriateWords = "asshole;ballsack;batshit;blowjob;boner;brushite;bukkake;bullshit;bullshits;bullshitted;bullshitter;bullshitters;bullshitting;buttmunch;buttplug;chickenshit;chickenshits;clit;coonshit;coonshits;cummer;cunt;cunts;cunty;dildo;dipshit;dipshits;fagging;faggot;fags;fellate;fellatio;frig;frigged;frigging;frigs;fuck;fucked;fucker;fuckers;fuckface;fuckfaces;fuckhead;fuckheads;fucking;fuckoff;fuckoffs;fucks;fuckup;fuckups;fuckwit;fuckwits;fudgepacker;gangbang;gaylord;gaysex;gobshite;gobshites;harelip;horniest;horny;horseshit;horseshits;jackoff;jerkoff ;jism;jizm ;jizz;knobhead;knobjocky;merde;mierda;mindfuck;mindfucked;mindfucks;mofo;motherfucker;motherfuckers;motherfucking;nigga;nigger;piss;porn;porno;pornographic;pornography;pornos;porns;pussies;pussy;shat;shit;shitbag;shitbags;shitcan;shitcans;shite;shites;shitface;shitfaced;shitfaces;shithead;shitholes;shithteads;shitlist;shits;shitshole;shitstorm;shitstorms;shitte;shitted;shittier;shittiest;shittiness;shitting;shitty;tittiefucker;titties;wang;wench;whore;willy".split(";"); var Hints = function (a) { this._firstLetters = this._sort = !1; this._solution = a }; $jscomp.global.Object.defineProperties(Hints.prototype, { sort: { configurable: !0, enumerable: !0, get: function () { return this._sort }, set: function (a) { if (this._sort = a) this._solution.everEnabledHints = !0, Store.setHasEnabledHints() } }, firstLetters: { configurable: !0, enumerable: !0, get: function () { return this._firstLetters }, set: function (a) { if (this._firstLetters = a) this._solution.everEnabledHints = !0, Store.setHasEnabledHints() } } });
    var ScoreTier, Solution = function (a, b, c, d, e) {
        this.puzzle = a; this.words = b || new Set; this.obscureWords = c || new Set; this.givenClues = d || []; this._isTemporary = e || !1; this._showedDeveloperMessage = !1; this.ms = this.nonWordCount = 0; this.everEnabledHints = !1; this.hints = new Hints(this); this.shared = !1; this.changeId = this.rotations = this.revealsUsed = 0; this.maxReveals = Store.isPremium() ? 5 : 1; if (!Store.needsTutorial()) {
            switch (gPuzzleManager.puzzleKey) {
                case "2022/04/24": this.maxReveals += 2; break; case "2022/05/08": case "2022/06/19": this.maxReveals +=
                    5
            }this.foundBWOTD() && this.maxReveals++
        } if (this.puzzle) { b = $jscomp.makeIterator(this.words); for (a = b.next(); !a.done; a = b.next())a = a.value, this.puzzle.words.includes(a) || (this.words.delete(a), this.puzzle.optionalWords.includes(a) && this.obscureWords.add(a)); b = $jscomp.makeIterator(this.obscureWords); for (a = b.next(); !a.done; a = b.next())a = a.value, this.puzzle.optionalWords.includes(a) || (this.obscureWords.delete(a), this.puzzle.words.includes(a) && this.words.add(a)) } this.score = 0; b = $jscomp.makeIterator(this.words);
        for (a = b.next(); !a.done; a = b.next())this.score += Solution.scoreWord(a.value)
    }; Solution.prototype.isEmpty = function () { return 0 == this.words.size && 0 == this.obscureWords.size }; Solution.prototype.isSolved = function () { return this.words.size >= assert(this.puzzle).words.length }; Solution.prototype.has = function (a) { return this.words.has(a) || this.obscureWords.has(a) };
    Solution.prototype.add = function (a) { assert(this.puzzle && this.puzzle.words.includes(a)); assert(!this.obscureWords.has(a)); if (this.words.has(a)) return !1; this.words.add(a); this.score += Solution.scoreWord(a); this._isTemporary || (Store.saveSolutionForCurPuzzle(this), this._postScore()); return !0 };
    Solution.prototype.addObscure = function (a) { assert(this.puzzle && this.puzzle.optionalWords.includes(a)); assert(!this.words.has(a)); if (this.obscureWords.has(a)) return !1; this.obscureWords.add(a); this.puzzle && this.puzzle.wordOfTheDay && this.puzzle.wordOfTheDay.term == a && this.maxReveals++; this._isTemporary || (Store.saveSolutionForCurPuzzle(this), this._postScore()); return !0 };
    Solution.prototype.addNonWord = function () { assert(this.puzzle); this.words.size != this.puzzle.words.length && (this.nonWordCount++, this._isTemporary || Store.saveSolutionForCurPuzzle(this)) }; Solution.prototype.saveAndPostScore = function () { this._isTemporary || (Store.saveSolutionForCurPuzzle(this), this._postScore()) };
    Solution.prototype.getScoreTier = function (a) { a = this.score / a * 100; var b = Solution.getScoreThresholds(); return 100 <= a ? { level: 6, tierName: "Complete!" } : a >= b[1] ? { level: 5, tierName: "Hints" } : a >= b[2] ? { level: 4, tierName: "Expert" } : a >= b[3] ? { level: 3, tierName: "Adept" } : 0 < a ? { level: 2, tierName: "" } : { level: 1, tierName: "" } }; Solution.prototype.getAccuracy = function () { return 0 == this.words.size ? 0 : this.words.size / (this.nonWordCount + this.words.size) };
    Solution.prototype.useReveal = function () { assert(0 < this.maxReveals - this.revealsUsed); this.revealsUsed++; this.saveAndPostScore() }; Solution.prototype.foundBWOTD = function () { return this.puzzle && this.puzzle.wordOfTheDay && this.obscureWords.has(this.puzzle.wordOfTheDay.term) }; Solution.prototype.onRotate = function () { null !== this.rotations && this.rotations++ };
    Solution.prototype.getApiSolution = function (a) { return { puzzleId: this.puzzle.id, puzzleDate: a, words: Array.from(this.words), optionalWords: Array.from(this.obscureWords), nonWordCount: this.nonWordCount, ms: this.ms, shared: this.shared, revealsUsed: this.revealsUsed, enabledHints: this.everEnabledHints, changeId: this.changeId } };
    Solution.prototype.mergeWithApiSolution = function (a) {
        for (var b = !1, c = $jscomp.makeIterator(a.words), d = c.next(); !d.done; d = c.next())d = d.value, this.words.has(d) || this.puzzle && !this.puzzle.words.includes(d) || (this.words.add(d), b = !0); c = $jscomp.makeIterator(a.optionalWords); for (d = c.next(); !d.done; d = c.next())d = d.value, this.obscureWords.has(d) || this.puzzle && !this.puzzle.optionalWords.includes(d) || (this.obscureWords.add(d), b = !0); this.nonWordCount = a.nonWordCount; a.ms && null != this.ms && this.ms < a.ms && (this.ms = a.ms);
        this.shared = this.shared || a.shared; this.revealsUsed = Math.max(this.revealsUsed, a.revealsUsed); this.everEnabledHints = this.everEnabledHints || (null == a.enabledHints ? !0 : a.enabledHints); this.changeId = Math.max(this.changeId, a.changeId); Store.saveSolutionForKey(this, a.puzzleDate); return b
    }; Solution.prototype._postScore = function () { api.syncSolution(this.getSyncObject()) };
    Solution.prototype.getSyncObject = function () { return { puzzleId: this.puzzle.id, words: Array.from(this.words), optionalWords: Array.from(this.obscureWords), nonWordCount: this.nonWordCount, ms: this.ms, shared: this.shared, revealsUsed: this.revealsUsed, enabledHints: this.everEnabledHints, changeId: this.changeId } };
    Solution.prototype.takeNextClue = function (a) { assert(this.totalCluesAvailable > this.givenClues.length); for (var b = 0; this.words.has(a[b]) || this.givenClues.includes(a[b]);)if (b++, b >= a.length) return !1; this.givenClues.push(a[b]); this._isTemporary || Store.saveSolutionForCurPuzzle(this); return !0 }; Solution.scoreWord = function (a) { if ("bee" == Config.game) { var b = a.length; 7 == (new Set(Array.from(a))).size && (b += 7); return b } b = Solution._scores[a.length]; return void 0 === b ? (a.length - 1) * (a.length - 2) / 2 : b };
    Solution.scoreWords = function (a) { return a.reduce(function (b, c) { return Solution.scoreWord(c) + b }, 0) }; $jscomp.global.Object.defineProperties(Solution.prototype, { totalCluesAvailable: { configurable: !0, enumerable: !0, get: function () { return Math.floor((this.words.size + this.obscureWords.size) / Clues.wordsForClue) } } }); Solution._scores = [0, 0, 0, 0, 5, 8, 12, 16, 22, 30, 38, 46, 58, 68, 80, 90, 100]; Solution.getScoreThresholds = function () { return Store.isLevelUpFasterEnabled() ? [100, 55, 40, 25] : [100, 65, 50, 35] }; var DefinitionView = function (a, b) { this.origWord = a; this.definition = b; this._keyDownListener = this._windowClickListener = this._closeClickListener = this._definitionLinkListener = null };
    DefinitionView.prototype.show = function () {
        var a = this; $("#definitionWord").textContent = this.definition.displayWord; $("#definitionWord").classList.remove("small"); var b = !(this.definition instanceof UndefinedWordDefinition); $("#definitionSource").hidden = !b; if (b) {
            if (this.definition.isLicensed()) { $("#definitionEntry").innerHTML = this.definition.htmlDefinition(); var c = $("#definition").querySelector("a.sound"); c && c.addEventListener("click", function (e) { e.preventDefault(); e.stopPropagation(); gAudio.playDefinition(c.getAttribute("href")) }) } else $("#definitionEntry").innerHTML =
                ""; $("#definitionLink .dictionaryWord").textContent = this.definition.displayWord; $("#definitionLink").setAttribute("href", this.definition.getLink()); this._definitionLinkListener = function () { return a._close() }; $("#definitionLink").addEventListener("click", this._definitionLinkListener); $("#definitionContent .dictionaryName").innerHTML = this.definition.getDictionaryNameHtml()
        } else $("#definitionEntry").textContent = "Sorry, no definition found."; this._windowClickListener = function (e) {
            e = assertInstanceOf(e,
                PointerEvent); (e = document.elementFromPoint(e.clientX, e.clientY)) && $("#definition").contains(e) || a._close()
        }; window.addEventListener("pointerdown", this._windowClickListener); this._closeClickListener = function (e) { e.preventDefault(); a._close() }; $("#definition h2 a").addEventListener("click", this._closeClickListener); this._keyDownListener = function (e) { var f = assertInstanceOf(e, KeyboardEvent); if ("Escape" == f.key || "Esc" == f.key) a._close(), e.preventDefault(), e.stopPropagation() }; window.addEventListener("keydown",
            this._keyDownListener); $("#definition").hidden = !1; $("#definitionContent").scrollTop = 0; b = $("#definition h2 a").getBoundingClientRect(); var d = $("#definition").getBoundingClientRect(); b.x + b.width > d.x + d.width && $("#definitionWord").classList.add("small"); "undefined" == typeof gAchievements || DefinitionView.lookedUpWords.has(this.origWord) || (gAchievements.increment("languageLearner"), DefinitionView.lookedUpWords.add(this.origWord))
    };
    DefinitionView.prototype._close = function () { $("#definitionLink").removeEventListener("click", this._definitionLinkListener); window.removeEventListener("pointerdown", this._windowClickListener); $("#definition h2 a").removeEventListener("click", this._closeClickListener); window.removeEventListener("keydown", this._keyDownListener); $("#definition").hidden = !0 }; DefinitionView.fromDefinition = function (a, b) { return b ? new DefinitionView(a, b) : new DefinitionView(a, new UndefinedWordDefinition(a, a)) };
    DefinitionView.lookedUpWords = new Set; var WordOfTheDay = function (a, b, c) { this.term = a; this.definition = b; this.definitionMd = c };
    WordOfTheDay.prototype.html = function () {
        var a = this.definition; if (this.definitionMd) {
            var b = a = this.definitionMd.replace(/\n/g, "<br>").replace(/\*\*([^*]*)\*\*/g, function (c, d) { return "<strong>" + d + "</strong>" }).replace(/\*([^*]*)\*/g, function (c, d) { return "<em>" + d + "</em>" }); a = a.replace(RegExp("\\[([^\\]]*)\\]\\(((?:https?:/?/?)?(?:[A-Za-z0-9-_]{1,63}\\.)+[A-Za-z]{1,63}(?:\\b[a-zA-Z0-9@:%_\\+#?&=.~/-]*[a-zA-Z0-9@:%_\\+#?&=~/-])*)\\)", "g"), '<a href="http://$2" target="_blank">$1</a>'); a == b && (a = a.replace(/(https?:\/?\/?)?([A-Za-z0-9-_]{1,63}\.)+[A-Za-z]{1,63}(\b[a-zA-Z0-9@:%_\+#?&=.~\/-]*[a-zA-Z0-9@:%_\+#?&=~\/-])*/g,
                '<a href="http://$&" target="_blank">$&</a>'))
        } return a
    }; var Puzzle = function (a, b, c, d, e, f, g, h, k, l, m, p, q) { this.board = a; this.words = b; this.optionalWords = c; this.definitions = d ? new Map(d.map(function (t) { return [t.origWord, t] })) : new Map; this.wiktDefinitions = e ? new Map(e.map(function (t) { return [t.origWord, t] })) : new Map; this.clues = new Map(Object.entries(f || [])); this.wordOfTheDay = g || null; this.difficulty = h || null; this.id = k || null; this.intro = l || null; this.message = m || null; this.credits = p || {}; this.special = q || { speller: !1 } };
    Puzzle.prototype.toSerializableObject = function () {
        var a = { board: this.board, words: this.words.sort(), optionalWords: this.optionalWords.sort(), definitions: Array.from(this.definitions.values()).map(function (b) { return b.toObj() }), wiktDefinitions: Array.from(this.wiktDefinitions.values()).map(function (b) { return b.toObj() }) }; this.wordOfTheDay && this.wordOfTheDay.term && (a.wordOfTheDay = { term: this.wordOfTheDay.term, definition: this.wordOfTheDay.definition, definitionMd: this.wordOfTheDay.definitionMd }); this.difficulty &&
            (a.difficulty = this.difficulty); this.intro && (a.intro = this.intro); this.message && (a.message = this.message); 0 < Object.getOwnPropertyNames(this.credits).length && (a.credits = this.credits); 0 < Object.getOwnPropertyNames(this.special).length && (a.special = this.special); 0 < this.clues.size && (a.clues = Object.fromEntries(this.clues)); return a
    };
    Puzzle.prototype.hasSimilarWord = function (a) {
        var b = Array.from(a.toLowerCase()).filter(function (g) { return "a" <= g && "z" >= g }).join(""); a = a.toLowerCase(); for (var c = $jscomp.makeIterator([["1", "i"], ["!", "i"], ["@", "a"], ["3", "e"], ["$", "s"], ["5", "s"], ["0", "o"]]), d = c.next(); !d.done; d = c.next())d = d.value, a = a.replaceAll(d[0], d[1]); a = Array.from(a).filter(function (g) { return "a" <= g && "z" >= g }).join(""); c = this.words.slice(); this.wordOfTheDay && c.push(this.wordOfTheDay.term); if (-1 != c.indexOf(b) || -1 != c.indexOf(a)) return !0;
        c = $jscomp.makeIterator(c); for (d = c.next(); !d.done; d = c.next()) { d = d.value; for (var e = $jscomp.makeIterator([b, a]), f = e.next(); !f.done; f = e.next())if (f = Util.editDistance(f.value, d), 4 == d.length) { if (0 == f) return !0 } else if (.25 >= f / d.length) return !0 } return !1
    };
    var tutorialPuzzles = [new Puzzle(["play", "    ", "    ", "    "], ["play", "find", "tutorial"], "airt alto aril lair lari liar lira lirot oral rail rialto rotl rout tori tour tout trail trial trout tutor urial".split(" ")), new Puzzle(["    ", "  if", "  nd", "    "], ["play", "find", "tutorial"], "airt alto aril lair lari liar lira lirot oral rail rialto rotl rout tori tour tout trail trial trout tutor urial".split(" ")), new Puzzle([" la ", "tri ", "ou  ", "  t "], ["play", "find", "tutorial"], "airt alto aril lair lari liar lira lirot oral rail rialto rotl rout tori tour tout trail trial trout tutor urial".split(" "))]; var WordDefinition = function (a, b) { this.origWord = a; this.definedWord = b; this.displayWord = a; b = $jscomp.makeIterator(gContractions); for (var c = b.next(); !c.done; c = b.next())if (c = c.value, c.replaceAll("'", "") == a) { this.displayWord = c; break } }; WordDefinition.prototype.isLicensed = function () { return !1 }; WordDefinition.prototype.getDictionaryNameHtml = function () { assertNotReached("Child class should override this function"); return "" };
    WordDefinition.prototype.getLink = function () { assertNotReached("Child class should override this function"); return "" }; WordDefinition.prototype.getAudioUrl = function () { return "" }; WordDefinition.prototype.htmlDefinition = function () { assertNotReached("Child class should override this function"); return "" }; var UndefinedWordDefinition = function (a, b) { WordDefinition.call(this, a, b) }; $jscomp.inherits(UndefinedWordDefinition, WordDefinition); UndefinedWordDefinition.prototype.htmlDefinition = function () { return "" }; var wiktionaryPos = { adj: "adjective", adv: "adverb", conj: "conjunction", det: "determiner", intj: "interjection", prep: "preposition", pron: "pronoun" }, WiktionaryWordEntry = function (a, b) { this.pos = a; this.definitions = b }; WiktionaryWordEntry.prototype.toObj = function () { return { pos: this.pos, definitions: this.definitions } }; WiktionaryWordEntry.fromObj = function (a) { return new WiktionaryWordEntry(a.pos, a.definitions) }; var WiktionaryWordDefinition = function (a, b, c) { WordDefinition.call(this, a, a); this.meanings = b; this.audio = c };
    $jscomp.inherits(WiktionaryWordDefinition, WordDefinition); WiktionaryWordDefinition.prototype.isLicensed = function () { return !0 }; WiktionaryWordDefinition.prototype.getDictionaryNameHtml = function () { return "Wiktionary" }; WiktionaryWordDefinition.prototype.getLink = function () { return "https://en.wiktionary.org/wiki/" + this.displayWord + "#English" }; WiktionaryWordDefinition.prototype.getAudioUrl = function () { return this.audio };
    WiktionaryWordDefinition.prototype.htmlDefinition = function () {
        var a = "\n      <p>\n        <strong>" + this.displayWord + "</strong>"; this.audio && (a += ' <a target="_blank" class="sound" data-button="definition-sound" href="' + (this.audio + '"><svg class="inline-icon"><use href="#icon-audio"></svg></a>')); a += "</p>"; for (var b = $jscomp.makeIterator(this.meanings), c = b.next(); !c.done; c = b.next()) {
            c = c.value; a += "<em>" + (wiktionaryPos[c.pos] || c.pos) + "</em>"; a += "<ol>"; c = $jscomp.makeIterator(c.definitions); for (var d = c.next(); !d.done; d =
                c.next()) { var e = d.value; d = []; var f = ""; "string" != typeof e && (d = e.tags || [], e = e.text); d.length && (f += "(<i>" + Util.encodeEntities(d.join(", ")) + "</i>) "); f += Util.encodeEntities(e[0].toUpperCase() + e.slice(1)); "." != f[f.length - 1] && (f += "."); a += "<li>" + f + "</li>" } a += "</ol>"
        } return a
    }; WiktionaryWordDefinition.prototype.toString = function () { return this.displayWord + "\n" + this.meanings.map(function (a) { return "  " + a.pos + "\n" + a.definitions.map(function (b) { return "  * " + b.toString() }).join("\n") }).join("\n") };
    WiktionaryWordDefinition.prototype.toObj = function () { return { origWord: this.origWord, meanings: this.meanings.map(function (a) { return a.toObj() }), audio: this.audio } }; WiktionaryWordDefinition.fromObj = function (a) { return new WiktionaryWordDefinition(a.origWord, a.meanings.map(function (b) { return WiktionaryWordEntry.fromObj(b) }), a.audio) }; var MerriamWebsterWordDefinitionObj, MerriamWebsterWordDefinition = function (a, b) { WordDefinition.call(this, a, b); this.origWord = a; this.word = b; this.grammaticalFunction = this.soundFilename = void 0; this.shortDefinition = []; this.etymology = void 0 }; $jscomp.inherits(MerriamWebsterWordDefinition, WordDefinition); MerriamWebsterWordDefinition.prototype.isLicensed = function () { return !1 }; MerriamWebsterWordDefinition.prototype.getDictionaryNameHtml = function () { return "Merriam-Webster's Collegiate<sup>&reg;</sup> Dictionary" };
    MerriamWebsterWordDefinition.prototype.getLink = function () { return "https://www.merriam-webster.com/dictionary/" + this.displayWord }; MerriamWebsterWordDefinition.prototype.getAudioUrl = function () { if (!this.soundFilename) return null; var a = "https://media.merriam-webster.com/audio/prons/en/us/mp3/"; a = this.soundFilename.startsWith("bix") ? a + "bix" : this.soundFilename.startsWith("gg") ? a + "gg" : /^[0-9_]/.test(this.soundFilename) ? a + "number" : a + this.soundFilename[0]; return a += "/" + this.soundFilename + ".mp3" };
    MerriamWebsterWordDefinition.prototype.toString = function () { return this.origWord + (this.word != this.origWord ? " (" + this.word + ")" : "") + "\n" + this.grammaticalFunction + "\n" + this.shortDefinition.map(function (a) { return "  * " + a }).join("\n") + "\n" + this.etymology + "\n" };
    MerriamWebsterWordDefinition.prototype.htmlDefinition = function () {
        var a = "\n    <p>\n      <strong>" + this._style(this.word.replaceAll("*", "\u00b7")) + "</strong> "; this.soundFilename && (a += '<a target="_blank" class="sound" data-button="definition-sound" href="' + (this.getAudioUrl() + '"><svg class="inline-icon"><use href="#icon-audio"></svg></a> ')); a += " <em>" + this._style(this.grammaticalFunction || "") + "</em>\n    </p>\n    <ol>\n    "; for (var b = $jscomp.makeIterator(this.shortDefinition), c = b.next(); !c.done; c =
            b.next())a += "<li>" + this._style(c.value) + "</li>"; a += "</ol>"; this.etymology && (a += "<p>Etymology: " + this._style(this.etymology) + "</p>"); return a
    }; MerriamWebsterWordDefinition.prototype.toObj = function () { var a = { origWord: this.origWord, word: this.word, shortDefinition: this.shortDefinition }; this.soundFilename && (a.soundFilename = this.soundFilename); this.grammaticalFunction && (a.grammaticalFunction = this.grammaticalFunction); this.etymology && (a.etymology = this.etymology); return a };
    MerriamWebsterWordDefinition.fromObj = function (a) { var b = new MerriamWebsterWordDefinition(a.origWord, a.word); b.shortDefinition = a.shortDefinition; b.soundFilename = a.soundFilename; b.grammaticalFunction = a.grammaticalFunction; b.etymology = a.etymology; return b };
    MerriamWebsterWordDefinition.prototype._style = function (a) {
        a = a.replaceAll("&", "&amp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll('"', "&quot;").replaceAll("'", "&#039;"); for (var b = $jscomp.makeIterator(Object.getOwnPropertyNames(MerriamWebsterWordDefinition._styleTokens)), c = b.next(); !c.done; c = b.next())c = c.value, a = a.replaceAll("{" + c + "}", MerriamWebsterWordDefinition._styleTokens[c]); a = a.replace(/{(?:mat|sx|dxt|a_link|d_link|i_link|et_link)\|([^|]*)\|[^}]*}/g, function (d, e) {
            d = e.replace(/:.*/,
                ""); return '<a target="_blank" data-button="definition-xref" href="https://www.merriam-webster.com/dictionary/' + (d + '-#etymology">') + (d + "</a>")
        }); return a = a.replace(/{[^}]*}/g, "")
    }; MerriamWebsterWordDefinition._styleTokens = { it: "<em>", "/it": "</em>", b: "<strong>", "/b": "</strong>", ma: " &ndash; more at ", "/ma": "", ldquo: '"', rdquo: '"', bc: "<strong>:</strong> ", inf: "<sub>", "/inf": "</sub>", sup: "<sup>", "/sup": "</sup>" }; var PuzzleManager = function () {
        this.loadedPuzzles = !1; this.isTodayPuzzle = !0; this.isSpecialPuzzle = this.isWeeklyPuzzle = !1; gTryDebug(function () { if ("undefined" == typeof gTodayDateStr || "undefined" == typeof gTodayDateStr || "undefined" == typeof gPuzzleConfig || "undefined" == typeof gPuzzleConfig.puzzles[gTodayDateStr]) throw Error("Couldn't fetch puzzle.\nPlease reload or try again in a few minutes.\nSorry about that :-("); }); this.puzzleKey = gTodayDateStr; this.puzzles = new Map; this.puzzleStats = new Map; this.archiveDate =
            this._betaPuzzle = null; DateUtil.setDates(gTodayDateStr, gYesterdayDateStr); this._setPuzzlesFromDataObj(gPuzzleConfig); this.puzzle = this.puzzles.get(this.puzzleKey)
    }; PuzzleManager.prototype.getPuzzle = function (a) { return this._betaPuzzle && a == DateUtil.getTodayStr() ? this._betaPuzzle : this.puzzles.get(a) }; PuzzleManager.prototype.setPuzzlesForDev = function (a, b, c) { DateUtil.setDates(a, b); this.puzzleKey = a; this._setPuzzlesFromDataObj(c); this.puzzle = this.puzzles.get(this.puzzleKey); this.isTodayPuzzle = !1 };
    PuzzleManager.prototype.setArchivePuzzle = function (a, b) { this.puzzleKey = this.archiveDate = a; this.puzzles.delete(DateUtil.getTodayStr()); DateUtil.getYesterdayStr() && this.puzzles.delete(assert(DateUtil.getYesterdayStr())); DateUtil.setDates(a, "no-yesterday"); var c = { puzzles: {}, puzzleStats: {} }; c.puzzles[a] = b; this._setPuzzlesFromDataObj(c); this.puzzle = this.puzzles.get(this.puzzleKey); this.isTodayPuzzle = !1; $("#drawerToday").hidden = !1 };
    PuzzleManager.prototype.setSpecialPuzzle = function (a, b) { this.puzzleKey = a; this.puzzles.delete(DateUtil.getTodayStr()); DateUtil.getYesterdayStr() && this.puzzles.delete(assert(DateUtil.getYesterdayStr())); var c = { puzzles: {}, puzzleStats: {} }; c.puzzles[a] = b; this._setPuzzlesFromDataObj(c); this.puzzle = this.puzzles.get(this.puzzleKey); this.isTodayPuzzle = !1; this.isSpecialPuzzle = !0; $("#drawerToday").hidden = !1 };
    PuzzleManager.prototype.setWeeklyPuzzles = function (a) {
        this.puzzles.delete(DateUtil.getTodayStr()); DateUtil.getYesterdayStr() && this.puzzles.delete(assert(DateUtil.getYesterdayStr())); var b = Object.getOwnPropertyNames(a).sort().reverse(); DateUtil.setDates(b[0].replace("-weekly", ""), b[1] ? b[1].replace("-weekly", "") : null); this.puzzleKey = b[0]; this._setPuzzlesFromDataObj({ puzzles: a, puzzleStats: {} }); this.puzzle = this.puzzles.get(this.puzzleKey); this.isSpecialPuzzle = this.isTodayPuzzle = !1; this.isWeeklyPuzzle =
            !0; $("#drawerToday").hidden = !1
    }; PuzzleManager.prototype.getBetaPuzzle = function () { return assert(this._betaPuzzle) }; PuzzleManager.prototype.setBetaPuzzle = function (a) { this._betaPuzzle = this._getPuzzleFromApiPuzzle(a); this.puzzleKey = "beta-" + a.id; this.puzzle = this._betaPuzzle; this.isTodayPuzzle = !1 }; PuzzleManager.prototype.playPastPuzzle = function (a) { assert(Store.isPremium()); gRouter.updateQueryParams({ date: a.replaceAll("/", "-") }, ["betaPuzzle", "puzzle"]) };
    PuzzleManager.prototype.playTodayPuzzle = function () { gRouter.updateQueryParams({}, ["date", "betaPuzzle", "puzzle"]) };
    PuzzleManager.prototype.deleteSolution = function (a) {
        var b = this, c; return $jscomp.asyncExecutePromiseGeneratorProgram(function (d) {
            switch (d.nextAddress) {
                case 1: return d.yield(Util.confirm('\n      <div class="p">Replay this puzzle?</div>\n      <div class="p">Your word list will be cleared.</div>\n      <div class="p">Your leaderboard position will <strong>freeze</strong> and\n      can no longer change, even if you do better this time.</div>', "Replay", "Cancel"), 2); case 2: if (!d.yieldResult) {
                    d.jumpTo(3);
                    break
                } ButtonClickEvent.log("replay-confirm"); (c = a == b.puzzleKey) && gPageTimer.finish(); Store.deleteSolution(a); return d.yield(api.deleteSolution(a, c), 4); case 4: return d.return(!0); case 3: return ButtonClickEvent.log("replay-cancel"), d.return(!1)
            }
        })
    };
    PuzzleManager.prototype._setPuzzlesFromDataObj = function (a) {
        for (var b = $jscomp.makeIterator(Object.getOwnPropertyNames(a.puzzles)), c = b.next(); !c.done; c = b.next())c = c.value, this.puzzles.set(c, this._getPuzzleFromApiPuzzle(a.puzzles[c])); b = $jscomp.makeIterator(Object.getOwnPropertyNames(a.puzzleStats)); for (c = b.next(); !c.done; c = b.next())c = c.value, this.puzzleStats.set(c, a.puzzleStats[c]); (a = this.puzzles.get(this.puzzleKey).id) && Store.migrateBetaSolutionToToday(a); $("#newSpecialPuzzle").hidden = !this._hasNewSpecialPuzzle();
        351 == a && document.body.classList.add("spooky", "black")
    };
    PuzzleManager.prototype._getPuzzleFromApiPuzzle = function (a) {
        var b = null; a.wordOfTheDay && (b = new WordOfTheDay(a.wordOfTheDay.term, a.wordOfTheDay.definition || "", a.wordOfTheDay.definitionMd || "")); var c = a.words, d = a.optionalWords, e = "5pyf0gcrl1a9oe3ui8d2htn67sqjkxbmw4vzPYFGCRLAOEUIDHTNSQJKXBMWVZ".split(""), f = function (l) { var m = e.indexOf(l); return -1 == m ? l : e[(m - 12 + e.length) % e.length] }, g = "undefined" == typeof a.definitions ? "" : Array.from(a.definitions).map(f).join(""), h = "undefined" == typeof a.wiktDefinitions ? "" : Array.from(a.wiktDefinitions).map(f).join(""),
            k = "undefined" == typeof a.clues ? "" : Array.from(a.clues).map(f).join(""); "undefined" != typeof a.wordScores && (c = Array.from(a.wordScores).map(f).join("")); "undefined" != typeof a.optionalWordScores && (d = Array.from(a.optionalWordScores).map(f).join("")); f = []; 0 < g.length && (f = assertInstanceOf(JSON.parse(atob(g)), Array).map(function (l) { return MerriamWebsterWordDefinition.fromObj(l) })); g = []; 0 < h.length && (h = JSON.parse(atob(h))) && (g = assertInstanceOf(h, Array).map(function (l) { return WiktionaryWordDefinition.fromObj(l) }));
        h = {}; 0 < k.length && (h = assertInstanceOf(JSON.parse(atob(k)), Object)); return new Puzzle(a.board, 0 < c.length ? atob(c).split(",") : [], 0 < d.length ? atob(d).split(",") : [], f, g, h, b, a.difficulty, a.id, a.intro || void 0, a.message || void 0, a.credits || void 0, a.special || void 0)
    };
    PuzzleManager.prototype._hasNewSpecialPuzzle = function () { for (var a = $jscomp.makeIterator(["sub50", "sub500", "waffle", "discord200", "reddit"]), b = a.next(); !b.done; b = a.next())if (b = b.value, this.puzzleKey != b && !Store.hasPlayedPuzzle(b)) return !0; if (!this.isWeeklyPuzzle && Store.isPremium()) { for (a = 0; 7 > a; a++)if (b = DateUtil.getStrForDaysPast(a), this.puzzleKey == b + "-weekly" || Store.hasPlayedPuzzle(b + "-weekly")) return !1; return !0 } return !1 }; var gPuzzleManager = function () { try { return gTryDebug(function () { return new PuzzleManager }) } catch (a) { } }(); var Random = function (a) { this.seed(a) }; Random.prototype.seed = function (a) { a = function (b) { for (var c = 1779033703 ^ b.length, d = 0; d < b.length; d++)c = Math.imul(c ^ b.charCodeAt(d), 3432918353), c = c << 13 | c >>> 19; return function () { c = Math.imul(c ^ c >>> 16, 2246822507); c = Math.imul(c ^ c >>> 13, 3266489909); return (c ^= c >>> 16) >>> 0 } }(a); this._rand = function (b, c, d, e) { return function () { b >>>= 0; c >>>= 0; d >>>= 0; e >>>= 0; var f = b + c | 0; b = c ^ c >>> 9; c = d + (d << 3) | 0; d = d << 21 | d >>> 11; e = e + 1 | 0; f = f + e | 0; d = d + f | 0; return (f >>> 0) / 4294967296 } }(a(), a(), a(), a()) };
    Random.prototype.next = function () { return this._rand() }; Random.prototype.nextUntil = function (a) { return Math.floor(this.next() * a) }; Random.prototype.shuffle = function (a) { for (var b = a.length - 1; 0 < b; b--) { var c = this.nextUntil(b + 1), d = a[b]; a[b] = a[c]; a[c] = d } return a }; Random.prototype.shuffled = function (a) { a = a.slice(); this.shuffle(a); return a }; Random.prototype.from = function (a) { return a[this.nextUntil(a.length)] }; var Beta = function () {
        var a = this; this.isBeta = (location.pathname.includes("/beta") || location.pathname.includes("/alpha") || location.host.includes("localhost") || location.host.includes("penguin.linux.test")) && !location.href.includes("pretendStable"); this.isLiterallyBeta = location.pathname.includes("/beta"); this._showedRedirectDialog = !1; this.useBetaPuzzle = this.isBeta && null != (new URL(location.href)).searchParams.get("betaPuzzle"); this.hasBetaPuzzle = !1; this.isBeta && ($("#choosePuzzleBtn").hidden = !1); onReady(function () {
            return gTryDebug(function () {
                var b =
                    $("#enterExitBeta"), c = $("#enterExitBetaBtn"), d = b.querySelector(".updating"); c.addEventListener("click", function () {
                        d.textContent = "Updating..."; c.disabled = !0; GlobalStore.setUseBeta(!GlobalStore.useBeta()); gSettings.maybePostSettings().then(function () {
                            a._setUpBetaButtons(); d.textContent = "Updated!"; var e = new URL(location.href); GlobalStore.useBeta() && !a.isLiterallyBeta ? e.pathname = e.pathname.replace("/", "/beta/") : !GlobalStore.useBeta() && a.isLiterallyBeta && (e.pathname = e.pathname.replace("/beta", "")); e.href !=
                                location.href && api.setLocation(e.href, "beta")
                        }).catch(function () { d.textContent = "Network or server error" }).finally(function () { c.disabled = !1 })
                    })
            })
        })
    };
    Beta.prototype.getBetaPuzzle = function () {
        var a = this, b; return $jscomp.asyncExecutePromiseGeneratorProgram(function (c) {
            if (1 == c.nextAddress) return assert(a.isBeta), c.yield(api.getBetaPuzzle(), 2); b = c.yieldResult; if (null == b) return a.useBetaPuzzle = !1, c.return(); $("#choosePuzzleBtn").disabled = !1; a.useBetaPuzzle && (b.difficulty = void 0, gPuzzleManager.setBetaPuzzle(b), $("#betaWatermark").hidden = !1, setTimeout(function () {
                Store.showedBetaPuzzleDialog() || gPopups.isPopupOpen() || (Dialog.show("Preview puzzle", '<p>This is the <strong>preview puzzle</strong>. It\'s a sneak peak\n            of an upcoming puzzle for beta testers to try before I release\n            it publicly. Please try it out and send me\n            feedback&mdash;is it fun? How many difficulty stars? Any problems?\n            </p>\n            <p>A new preview puzzle is uploaded once or twice a week. When this\n            puzzle becomes the regular daily puzzle, your scores will be posted\n            to the leaderboard about 2 hours later. For more info, see the\n            <a href="/beta-faqs.html" target="_blank">Beta FAQs</a>.</p>\n            <p>To get back to the regular puzzle, tap the puzzle piece icon\n            <svg class="inline-icon"><use href="#icon-puzzle-star"></svg>\n            in the top left.</p>\n            <p>Thanks, and enjoy!</p>',
                    !1, !0), setTimeout(function () { return Store.setShowedBetaPuzzleDialog() }, 5E3))
            }, 2E3)); onReady(function () {
                var d = $("#choosePuzzleBtn"); if (a.useBetaPuzzle) d.querySelector("use").setAttribute("href", "#icon-puzzle-star"); else if (b.id != Store.lastBetaPuzzleAdvertised()) { Store.setLastBetaPuzzleAdvertised(b.id); var e = $("header #betaPuzzleBox"); d.classList.add("throb"); e.hidden = !1;[d, e].forEach(function (f) { f.addEventListener("click", function (g) { e.remove(); d.classList.remove("throb"); g.stopPropagation() }) }) } $("#choosePuzzleBtn").addEventListener("click",
                    function () { var f = new URL(location.href); a.useBetaPuzzle ? f.searchParams.delete("betaPuzzle") : (f.searchParams.set("betaPuzzle", "1"), f.searchParams.delete("date")); api.setLocation(f.href, "betaPuzzle") })
            }); c.jumpToEnd()
        })
    };
    Beta.prototype._setUpBetaButtons = function () { $("#enterExitBeta").hidden = !1; $(".updating").textContent = ""; GlobalStore.useBeta() ? ($("#enterExitBetaDesc").textContent = "You're part of Squaredle Beta.", $("#enterExitBetaBtn").textContent = "Opt out of Squaredle Beta") : ($("#enterExitBetaDesc").textContent = "You're authorized for Squaredle Beta. Would you like to opt in?", $("#enterExitBetaBtn").textContent = "Opt in to Squaredle Beta") };
    Beta.prototype.handleBetaStatus = function () {
        if (GlobalStore.isBetaAllowed()) if (this._setUpBetaButtons(), this.isBeta || !GlobalStore.useBeta() || this._showedRedirectDialog || gPopups.isPopupOpen()) this.isBeta && this._showedRedirectDialog && ($("#outerContainer").style.opacity = "", gPopups.close()); else {
            var a = new URL(location.href); a.pathname = "/beta/"; this._showedRedirectDialog = !0; Dialog.show("Squaredle Beta", '<div class="p">You have access to\n          <a href="' + a.href + '">Squaredle Beta</a>!\n          Please update your bookmarks to point to\n          <a href="' +
                a.href + '">squaredle.app/beta</a>.</div>\n          <div class="disclaimer">\n            <div class="p">If you installed Squaredle like an app,\n            you\'ll need to replace it so it points to the beta:</div>\n            <ol>\n              <li>Delete the app (make sure you DON\'T ask it to clear user data)\n              </li>\n              <li>Open Squaredle.app in a regular browser and proceed to the\n              beta</li>\n              <li>Once you\'re at the beta site, install it from the prompt or\n              find an option in the browser menu like "Install app" or "Create\n              shortcut"</li>\n            </ol>\n          </div>\n          <div class="p">If you have any questions, please\n            <a href="https://discord.gg/Pkad9p4rsq" target="_blank">\n              join the Discord!\n            </a>\n          </div>\n          ')
        } else $("#enterExitBeta").hidden =
            !0, this.isLiterallyBeta && !this._showedRedirectDialog && ($("#outerContainer").style.opacity = "0", this._showedRedirectDialog = !0, Dialog.show("Beta access", "<p>You're using the beta site, but you're not signed in with a user\n          that has access to the beta.</p>\n          <p>Please visit the main site at\n          <a href=\"https://squaredle.app\">squaredle.app</a>. The beta will open\n          up to more players soon!</p>\n          <p>If you think you should have access, visit the main site and make\n          sure you're signed in with an email address.</p>",
                !0))
    }; var gBeta = gTryDebug(function () { return new Beta }); var AudioManager = function () {
        var a = this; this._tracks = "danger-storm-by-kevin-macleod-from-filmmusic-io.mp3 edm-detection-mode-by-kevin-macleod-from-filmmusic-io.mp3 half-mystery-by-kevin-macleod-from-filmmusic-io.mp3 hypnothis-by-kevin-macleod-from-filmmusic-io.mp3 impact-prelude-by-kevin-macleod-from-filmmusic-io.mp3 odyssey-by-kevin-macleod-from-filmmusic-io.mp3 raving-energy-by-kevin-macleod-from-filmmusic-io.mp3 screen-saver-by-kevin-macleod-from-filmmusic-io.mp3 the-lift-by-kevin-macleod-from-filmmusic-io.mp3".split(" ");
        this._clicks = ["zapsplat_household_light_switch_click_001_68747.mp3", "zapsplat_household_wall_mounted_switch_click_001_80312.mp3", "zapsplat_technology_camera_dslr_switch_on_or_off_canon_eos_6d_001_42614.mp3", "zapsplat_technology_camera_dslr_switch_on_or_off_canon_eos_6d_002_42615.mp3"]; this._definitionAudio = new Audio; this._clickAudios = Util.isIOs ? [] : this._clicks.map(function (c) { var d = new Audio; d.src = "/audio/effects/click/" + c; return d }); this._rand = new Random((new Date).getTime().toString()); this._clickSound =
            this._rand.from(this._clicks); this._playlist = this._rand.shuffle(this._tracks); this._playlistIdx = -1; this._soundEffectsAudio = new Audio; this._musicAudio = new Audio; var b = Store.getBoolean("music-muted"); this._hasPlayedSoundEffect = this._audioAllowed = !1; this._musicMuted = null == b ? !1 : b; b = Store.getInteger("music-volume"); null == b && (b = 75); this._musicVolume = b; this._musicAudio.volume = b / 100; this._soundEffectsMuted = !!Store.getBoolean("soundEffects-muted"); b = Store.getInteger("soundEffects-volume"); null == b && (b = 50);
        this._soundEffectsVolume = b; this._soundEffectsAudio.volume = this._soundEffectsVolume / 100; this._clickAudios.forEach(function (c) { return c.volume = a._soundEffectsVolume / 100 }); this._autoplayAudio = !!Store.getBoolean("audio-autoplay"); this._musicAudio.autoplay = !1; this._musicAudio.addEventListener("ended", function (c) { return a._setNextTrack() }); document.addEventListener("visibilitychange", function (c) { return a._onVisibilityChange(c) }); this._boardReady = !1
    };
    AudioManager.prototype.onBoardReady = function () { var a = this; this._boardReady = !0; this._autoplayAudio && (this._enableAudio(), Util.isIOs && window.addEventListener("click", function c() { a.playBonus(); window.removeEventListener("click", c) })) }; AudioManager.prototype.startMusic = function () { var a = this; this._maybePlayMusic().catch(function (b) { var c = function () { window.removeEventListener("pointerdown", c); a._maybePlayMusic() }; window.addEventListener("pointerdown", c) }) };
    AudioManager.prototype.playFoundWord = function (a) { this._playSoundEffect("/audio/effects/success/" + (4 >= a.length ? "1.mp3" : 5 == a.length ? "2.mp3" : 6 == a.length ? "3.mp3" : 7 == a.length ? "4.mp3" : "5.mp3")) }; AudioManager.prototype.playBonus = function () { this._playSoundEffect("/audio/effects/bonus.mp3") }; AudioManager.prototype.playError = function () { this._playSoundEffect("/audio/effects/cancel.mp3") }; AudioManager.prototype.playComplete = function () { this._playSoundEffect("/audio/effects/complete.mp3") };
    AudioManager.prototype.onLetter = function () { if (!this.soundEffectsMuted && this._audioAllowed && !Util.isIOs) { var a = this._rand.from(this._clickAudios); a.currentTime = 0; a.play() } }; AudioManager.prototype.onBoardVolumeClick = function () { this._audioAllowed ? ButtonClickEvent.log("board-volume") : (ButtonClickEvent.log("board-volume-first"), this._enableAudio()) };
    AudioManager.prototype._enableAudio = function () { this._audioAllowed = !0; this.musicMuted = Store.getBoolean("music-muted") || !1; this.startMusic(); this._musicAudio.autoplay = !0; Util.isIOs && this.playBonus(); this._hasPlayedSoundEffect = !0; this._updateBoardAudioIcon() }; AudioManager.prototype.playDefinition = function (a) { this._lowerMusicForAudio(this._definitionAudio); this._definitionAudio.src = a; this._definitionAudio.play() };
    AudioManager.prototype._setNextTrack = function () { this._playlistIdx++; this._playlistIdx >= this._playlist.length && (this._playlistIdx = 0, this._playlist = this._rand.shuffle(this._tracks)); this._musicAudio.src = "/audio/music/mp3/64/" + this._playlist[this._playlistIdx] }; AudioManager.prototype._onVisibilityChange = function (a) { "visible" == document.visibilityState ? this._audioAllowed && !this.musicMuted && this._musicAudio.play() : this._musicAudio.pause() };
    AudioManager.prototype._maybePlayMusic = function () { return this._musicMuted ? Promise.resolve() : this._musicAudio.play() }; AudioManager.prototype._playSoundEffect = function (a) { !this.soundEffectsMuted && this._audioAllowed && (this._lowerMusicForAudio(this._soundEffectsAudio), this._soundEffectsAudio.src = a, this._soundEffectsAudio.currentTime = 0, this._soundEffectsAudio.play()) };
    AudioManager.prototype._lowerMusicForAudio = function (a) { var b = this, c = function (d) { a.removeEventListener("ended", c); b._musicAudio.volume = b.musicVolume / 100 }; a.addEventListener("ended", c); this._musicAudio.volume = this.musicVolume / 100 / 4 }; AudioManager.prototype._updateBoardAudioIcon = function () { this._boardReady && $("#board .leftButton use").setAttribute("href", "#icon-audio" + (this._musicMuted && this._soundEffectsMuted ? "-muted" : "")) };
    $jscomp.global.Object.defineProperties(AudioManager.prototype, {
        musicMuted: { configurable: !0, enumerable: !0, get: function () { return this._musicMuted }, set: function (a) { this._musicMuted = a; Store.setBoolean("music-muted", a); a ? this._musicAudio.pause() : (-1 == this._playlistIdx && this._setNextTrack(), this._musicAudio.play(), this._musicAudio.autoplay = !0); this._updateBoardAudioIcon() } }, musicVolume: {
            configurable: !0, enumerable: !0, get: function () { return this._musicVolume }, set: function (a) {
                this._musicVolume = a; Store.setInteger("music-volume",
                    a); this._musicAudio.volume = a / 100; this.musicMuted = 0 == a
            }
        }, soundEffectsMuted: { configurable: !0, enumerable: !0, get: function () { return this._soundEffectsMuted }, set: function (a) { this._soundEffectsMuted = a; Store.setBoolean("soundEffects-muted", a); this._soundEffectsMuted || this._hasPlayedSoundEffect || (this._hasPlayedSoundEffect = !0, this.playBonus()); this._updateBoardAudioIcon() } }, soundEffectsVolume: {
            configurable: !0, enumerable: !0, get: function () { return this._soundEffectsVolume }, set: function (a) {
                this._soundEffectsVolume =
                    a; Store.setInteger("soundEffects-volume", a); this._soundEffectsAudio.volume = a / 100; this._clickAudios.forEach(function (b) { return b.volume = a / 100 }); this.soundEffectsMuted = 0 == a
            }
        }, autoplayAudio: { configurable: !0, enumerable: !0, get: function () { return this._autoplayAudio }, set: function (a) { this._autoplayAudio = a; Store.setBoolean("audio-autoplay", a) } }
    }); var gAudio = new AudioManager; var Clues = function () { var a = this; this._clues = this._solution = null; this._wordsToHint = []; this._availableCluesShown = 0; this._noMoreClues = !1; onReady(function () { $("#wordCountForClues").textContent = Clues.wordsForClue; $("#clueIcon").addEventListener("click", function (b) { b.stopPropagation(); a.show(); a._updateClueIcon() }); $("#getClue").addEventListener("click", function () { a._solution.takeNextClue(a._wordsToHint) || (a._noMoreClues = !0); a._updateCluesDialog() }) }) };
    Clues.prototype.onWordFound = function () { Store.needsTutorial() || this._updateClueIcon() }; Clues.prototype.onBonusWordFound = function () { Store.needsTutorial() || this._updateClueIcon() }; Clues.prototype.init = function (a, b, c) { this._solution = a; this._clues = b; this._wordsToHint = c; this._updateClueIcon() }; Clues.prototype.show = function () { this._solution && (this._updateCluesDialog(), gPopups.show($("#clues"))) };
    Clues.prototype._updateCluesDialog = function () {
        var a = this, b = this._solution.words.size + this._solution.obscureWords.size; $("#clueWordCount").textContent = b; $("#clueWordsNeeded").textContent = Clues.wordsForClue * (Math.floor(b / Clues.wordsForClue) + 1); setTimeout(function () { return a._updateClueIcon() }, 200); this._availableCluesShown = b = this._solution.totalCluesAvailable - this._solution.givenClues.length; $("#nextClueAt").hidden = 0 < b; $("#cluesAvailable").hidden = 0 >= b; 0 < b && ($("#numCluesAvailable").textContent = b); this._noMoreClues &&
            ($("#noMoreClues").hidden = !1); b = $("#cluesList"); b.innerHTML = ""; for (var c = Array.from(this._solution.givenClues).reverse(), d = $jscomp.makeIterator(c), e = d.next(); !e.done; e = d.next())e = e.value, this._solution.has(e) || b.appendChild(this._createClueDiv(e, !1)); c = $jscomp.makeIterator(c); for (e = c.next(); !e.done; e = c.next())d = e.value, this._solution.has(d) && b.appendChild(this._createClueDiv(d, !0))
    };
    Clues.prototype._updateClueIcon = function () { var a = this._solution.words.size + this._solution.obscureWords.size; this._solution.totalCluesAvailable - this._solution.givenClues.length > this._availableCluesShown ? a = "icon-bulb-lit" : (a = a % Clues.wordsForClue / Clues.wordsForClue, a = 10 * Math.floor(10 * a), a = "icon-bulb-" + a); $("#clueIcon use").setAttribute("href", "#" + a) };
    Clues.prototype._createClueDiv = function (a, b) {
        var c = document.createElement("div"); c.classList.add("p", "clue"); b && c.classList.add("found"); var d = document.createElement("div"); d.classList.add("clueTerm"); var e = 2; 6 < a.length && e++; 10 < a.length && e++; b && (e = a.length); b = document.createElement("span"); b.textContent = a.substring(0, e); d.appendChild(b); b = document.createElement("span"); b.classList.add("asterisks"); b.textContent = "*".repeat(a.length - e); d.appendChild(b); c.appendChild(d); d = document.createElement("div");
        d.classList.add("clueHint"); d.textContent = assert(this._clues).get(a); c.appendChild(d); return c
    }; Clues.wordsForClue = 8; var gClues = new Clues; var Archive = function () { this._shown = !1 };
    Archive.prototype.show = function () {
        var a = this, b = Store.getArchiveStats(), c = $("#archive #archiveEntries"); c.textContent = ""; c.scrollTop = 0; var d = new Date(DateUtil.origTodayDateStr + " 12:00:00"), e = "", f = {}; do {
            var g = function (r) { return function (u) { var v = document.createElement("li"); v.textContent = u; r.$jscomp$loop$prop$ul$146.appendChild(v) } }(f); e = Store.dateToDateStr(d); f.$jscomp$loop$prop$innerDateStr$147 = e; var h = b.scores.get(e), k = gPuzzleManager.puzzleStats.get(e); if ("2022/05/09" == e) {
                var l = document.createElement("div");
                l.classList.add("p"); l.innerHTML = '<strong class="primary">Note:</strong> The following puzzles used a smaller word list. They don\'t accept as many bonus words as more recent puzzles.'; c.appendChild(l)
            } else "2022/04/16" == e && (l = document.createElement("div"), l.classList.add("p"), l.innerHTML = '<strong class="primary">* Note:</strong> The following puzzles allowed <strong>contractions</strong>, like "don\'t" and "she\'s".', c.appendChild(l)); l = document.createElement("button"); l.classList.add("archiveEntry",
                "basicButton"); l.addEventListener("click", function (r) { return function () { Store.isPremium() ? (ButtonClickEvent.log("archive-playPuzzle"), a._onRequestDate(r.$jscomp$loop$prop$innerDateStr$147)) : (ButtonClickEvent.log("archive-playPuzzle-premium"), gPopups.show($("#premiumSignup"))) } }(f)); var m = document.createElement("div"); m.classList.add("date"); m.textContent = e == DateUtil.origTodayDateStr ? "Today" : e; m.textContent += " - " + DateUtil.dayOfWeek(d); l.appendChild(m); var p = document.createElement("div"); p.classList.add("progressBar");
            var q = document.createElement("div"); q.classList.add("progressBarFilled"); p.appendChild(q); m = 0; h && (m = 100 * h / k.maxScore, m = Math.max(2, m)); var t = m + "%"; 100 <= m && (t = "calc(100% + 2px)", l.classList.add("completed")); q.style.width = t; t = "var(--form-background-color)"; 70 <= m ? t = "#43a047" : 50 <= m ? t = "var(--secondary)" : 25 <= m && (t = "var(--primary)"); q.style.backgroundColor = t; l.appendChild(p); p = document.createElement("div"); p.classList.add("stars"); Util.addStars(p, k.difficulty); l.appendChild(p); f.$jscomp$loop$prop$ul$146 =
                document.createElement("ul"); f.$jscomp$loop$prop$ul$146.classList.add("disclaimer"); h && b.missingPartialSolutionDays.has(e) && g("Your solution did not fully sync. Some words may be missing."); h && b.missingEntireSolutionDays.has(e) && g("Puzzles on this date were not saved locally. To play this puzzle, you'll need to start over."); "2022/05/09" >= e && g("Smaller bonus word list."); "2022/04/16" >= e && g("Contractions are required words."); 0 < f.$jscomp$loop$prop$ul$146.children.length && l.appendChild(f.$jscomp$loop$prop$ul$146);
            100 <= m && (g = document.createElement("button"), g.classList.add("primaryButton", "disclaimer"), g.textContent = "Replay from scratch", g.addEventListener("click", this._onRequestRestartSolution_.bind(this, e)), l.appendChild(g)); c.appendChild(l); d = new Date(d.getTime() - 864E5); f = { $jscomp$loop$prop$ul$146: f.$jscomp$loop$prop$ul$146, $jscomp$loop$prop$innerDateStr$147: f.$jscomp$loop$prop$innerDateStr$147 }
        } while ("2022/03/07" <= e); var n = $("#hideCompletedPuzzles"); n.checked = Store.hideCompletedPuzzles(); c.classList.toggle("hideCompleted",
            n.checked); n.addEventListener("change", function (r) { r = n.checked; c.classList.toggle("hideCompleted", r); Store.setHideCompletedPuzzles(r) }); this._shown = !0; gPopups.show($("#archive"))
    }; Archive.prototype._onRequestDate = function (a) { assert(Store.isPremium()); a == DateUtil.origTodayDateStr ? gPuzzleManager.playTodayPuzzle() : gPuzzleManager.playPastPuzzle(a) };
    Archive.prototype._onRequestRestartSolution_ = function (a, b) { var c = this; return $jscomp.asyncExecutePromiseGeneratorProgram(function (d) { if (1 == d.nextAddress) { b.stopPropagation(); if (!Store.isPremium()) return gPopups.show($("#premiumSignup")), ButtonClickEvent.log("archive-restartPuzzle-premium"), d.return(); ButtonClickEvent.log("archive-restartPuzzle"); return d.yield(gPuzzleManager.deleteSolution(a), 2) } d.yieldResult && (Store.setDejaVu(), c._onRequestDate(a)); d.jumpToEnd() }) }; var gArchive = new Archive; var Settings = function () {
        var a = this; onReady(function () {
            $$(".settingsBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); gPopups.show($("#settings")) }) }); a._applySettingsFromStore(); var e = assertInstanceOf($("#darkModeToggle"), HTMLInputElement); e.addEventListener("change", function () { var n = e.checked; document.body.classList.toggle("light", !n); Store.setIsDarkMode(n); gtag("event", "set_dark_mode", { value: n }); a.maybePostSettings() }); var f = assertInstanceOf($("#rightHandedToggle"),
                HTMLInputElement); f.addEventListener("change", function () { var n = f.checked; $("#outerContainer").classList.toggle("lefty", !n); Store.setIsRightHanded(n); gtag("event", "set_right_handed", { value: n }); a.maybePostSettings() }); var g = assertInstanceOf($("#largerUsageCountsToggle"), HTMLInputElement); g.addEventListener("change", function () { var n = g.checked; document.body.classList.toggle("larger", n); Store.setIsLargerUsageCounts(n); gtag("event", "set_larger_usage_counts", { value: n }) }); var h = assertInstanceOf($("#showTimerToggle"),
                    HTMLInputElement); h.addEventListener("change", function () { var n = h.checked; $("#timer").style.visibility = n ? "" : "hidden"; Store.setShowTimer(n); gtag("event", "set_show_timer", { value: n }); a.maybePostSettings() }); $("#audioBtn").addEventListener("click", function () { gAudio.onBoardVolumeClick(); gPopups.show($("#audioSettings")) }); for (var k = assertInstanceOf($("#themeColorSelect"), HTMLSelectElement), l = assertInstanceOf($("#themeFontSelect"), HTMLSelectElement), m = assertInstanceOf($("#rotate45Toggle"), HTMLInputElement),
                        p = assertInstanceOf($("#levelUpFasterToggle"), HTMLInputElement), q = $jscomp.makeIterator(l.options), t = q.next(); !t.done; t = q.next())t = t.value, t.style.fontFamily = a._getFontFromValue(t.value); k.addEventListener("change", function () { if (Store.isPremium()) { var n = k.value; Store.setThemeColor(n); a._applyTheme(); gtag("event", "set_theme", { value: n }) } else k.value = k.options[0].value, gPopups.show($("#premiumSignup")) }); l.addEventListener("change", function () {
                            Store.isPremium() ? (Store.setThemeFont(l.value), a._applyTheme(),
                                gtag("event", "set_font", { value: l.value })) : (l.value = l.options[0].value, gPopups.show($("#premiumSignup")))
                        }); m.addEventListener("change", function () { Store.isPremium() ? (Store.setRotate45Enabled(m.checked), $("#rotateReload").hidden = !1, gtag("event", "set_rotate45enabled", { value: m.checked })) : (m.checked = !1, gPopups.show($("#premiumSignup"))) }); $("#rotateReloadBtn").addEventListener("click", function (n) { n.preventDefault(); api.reload("rotateReloadBtn") }); p.addEventListener("change", function () {
                            if (Store.isPremium()) {
                                var n =
                                    p.checked; Store.setLevelUpFasterEnabled(n); document.body.classList.toggle("levelUpFaster", n); $("#levelUpFasterReload").hidden = !1; window.dispatchEvent(new CustomEvent("updateScoreVisuals")); gtag("event", "set_level_up_faster_enabled", { value: n })
                            } else p.checked = !1, gPopups.show($("#premiumSignup"))
                        }); $("#levelUpFasterReloadBtn").addEventListener("click", function (n) { n.preventDefault(); api.reload("levelUpFasterReloadBtn") })
        }); var b = $("#musicVolume"); gAudio.musicMuted ? b.value = 0 : ($("#musicMute use").setAttribute("href",
            "#icon-audio"), b.value = gAudio.musicVolume); $("#musicMute").addEventListener("click", function () { gAudio.musicMuted = !gAudio.musicMuted; gAudio.musicMuted ? ($("#musicMute use").setAttribute("href", "#icon-audio-muted"), b.value = 0) : ($("#musicMute use").setAttribute("href", "#icon-audio"), b.value = gAudio.musicVolume) }); b.addEventListener("input", function () {
                gAudio.musicVolume = parseInt(b.value, 10); gAudio.musicMuted ? $("#musicMute use").setAttribute("href", "#icon-audio-muted") : $("#musicMute use").setAttribute("href",
                    "#icon-audio")
            }); var c = $("#soundEffectsVolume"); gAudio.soundEffectsMuted ? ($("#soundEffectsMute use").setAttribute("href", "#icon-audio-muted"), c.value = 0) : c.value = gAudio.soundEffectsVolume; $("#soundEffectsMute").addEventListener("click", function () { gAudio.soundEffectsMuted = !gAudio.soundEffectsMuted; gAudio.soundEffectsMuted ? ($("#soundEffectsMute use").setAttribute("href", "#icon-audio-muted"), c.value = 0) : ($("#soundEffectsMute use").setAttribute("href", "#icon-audio"), c.value = gAudio.soundEffectsVolume, gAudio.onLetter()) });
        c.addEventListener("input", function () { gAudio.soundEffectsVolume = parseInt(c.value, 10); gAudio.soundEffectsMuted ? $("#soundEffectsMute use").setAttribute("href", "#icon-audio-muted") : $("#soundEffectsMute use").setAttribute("href", "#icon-audio") }); c.addEventListener("change", function () { return gAudio.onLetter() }); var d = assertInstanceOf($("#autoEnableAudioToggle"), HTMLInputElement); d.checked = gAudio.autoplayAudio; $("#autoEnableAudioDesc").hidden = !d.checked; d.addEventListener("change", function () {
            gAudio.autoplayAudio =
                d.checked; $("#autoEnableAudioDesc").hidden = !d.checked
        })
    }; Settings.prototype.maybePostSettings = function () { return GlobalStore.getEmail() ? api.postSettings(this.getSyncSettings()) : Promise.resolve() }; Settings.prototype.getSyncSettings = function () { return { isDarkMode: Store.isDarkMode(), isRightHanded: Store.isRightHanded(), showTimer: Store.showTimer(), useBeta: GlobalStore.useBeta() } };
    Settings.getGlobalSettings = function () { for (var a = { bee: null, squaredle: null }, b = $jscomp.makeIterator(Object.getOwnPropertyNames(a)), c = b.next(); !c.done; c = b.next()) { c = c.value; var d = new GameStore(c); d.hasAnyEntries() && (a[c] = { isDarkMode: d.isDarkMode(), isRightHanded: d.isRightHanded(), showTimer: d.showTimer(), useBeta: GlobalStore.useBeta() }) } return a };
    Settings.prototype.applySyncSettings = function (a) { null != a.isDarkMode && Store.setIsDarkMode(a.isDarkMode); null != a.isRightHanded && Store.setIsRightHanded(a.isRightHanded); null != a.showTimer && Store.setShowTimer(a.showTimer); GlobalStore.setIsBetaAllowed(a.isBetaAllowed); GlobalStore.setUseBeta(a.useBeta); Store.setIsPremium(a.isPremium); Store.setBoolean("didTrial", a.didTrial); document.body.classList.toggle("premium", a.isPremium); this._applySettingsFromStore() };
    Settings.prototype._applySettingsFromStore = function () {
        var a = assertInstanceOf($("#darkModeToggle"), HTMLInputElement), b = Store.isDarkMode(); a.checked = b; document.body.classList.toggle("light", !b); a = assertInstanceOf($("#rightHandedToggle"), HTMLInputElement); b = Store.isRightHanded(); a.checked = b; $("#outerContainer").classList.toggle("lefty", !b); a = assertInstanceOf($("#largerUsageCountsToggle"), HTMLInputElement); b = Store.isLargerUsageCounts(); a.checked = b; document.body.classList.toggle("larger", b); a = assertInstanceOf($("#showTimerToggle"),
            HTMLInputElement); b = Store.showTimer(); a.checked = b; $("#timer").style.visibility = b ? "" : "hidden"; gBeta.handleBetaStatus(); Store.isPremium() && (assertInstanceOf($("#themeColorSelect"), HTMLSelectElement).value = Store.getThemeColor(), assertInstanceOf($("#themeFontSelect"), HTMLSelectElement).value = Store.getThemeFont(), assertInstanceOf($("#rotate45Toggle"), HTMLInputElement).checked = Store.isRotate45Enabled(), a = assertInstanceOf($("#levelUpFasterToggle"), HTMLInputElement), b = Store.isLevelUpFasterEnabled(), a.checked =
                b, document.body.classList.toggle("levelUpFaster", b)); this._applyTheme(); a = Store.getInteger("premiumSignupTime"); a = !Store.isPremium() && null != a && 36E5 > (new Date).getTime() - a; $("#premiumSignupProcessing").hidden = !a; $("#signup-intro").classList.toggle("hide", a); a && ($("#premiumSignupPlatform").textContent = Store.getString("premiumSignupPlatform")); Store.getBoolean("didTrial") && $$(".trialAvailable").forEach(function (c) { return c.hidden = !0 })
    };
    Settings.prototype._applyTheme = function () {
        if (Store.isPremium()) {
            var a = Store.getThemeColor(), b = assertInstanceOf($("#themeColorSelect"), HTMLSelectElement); b = $jscomp.makeIterator(b.options); for (var c = b.next(); !c.done; c = b.next())c = c.value, document.body.classList.toggle(c.value, c.value == a); document.querySelector('meta[name="theme-color"]').setAttribute("content", getComputedStyle(document.body).getPropertyValue("--primary")); b = assertInstanceOf($("#darkModeToggle"), HTMLInputElement); "beige" == a || "gold" ==
                a ? (document.body.classList.remove("light"), Store.setIsDarkMode(!0), b.checked = !0, b.disabled = !0) : b.disabled = !1; a = Store.getThemeFont(); b = this._getFontFromValue(a); $("#game").style.fontFamily = b; c = $jscomp.makeIterator(["wordly", "hand", "meow"]); for (var d = c.next(); !d.done; d = c.next())d = d.value, $("#game").classList.toggle("font-" + d, a == d); $("#wordCountArea").style.fontFamily = b; $("#themeFontSelect").style.fontFamily = b; $("#wordCountArea").classList.toggle("wideFont", ["typed", "meow", "serif"].includes(a))
        }
    };
    Settings.prototype._getFontFromValue = function (a) {
        switch (a) {
            case "roboto": return "RobotoWeb, sans-serif"; case "wordly": return "ClearSansWeb, RobotoWeb, sans-serif"; case "mono": return "InconsolataWeb, Courier New, monospace"; case "serif": return "MerriweatherWeb, Georgia, serif"; case "roman": return "GaramondWeb, Times New Roman, serif"; case "typed": return "SpecialEliteWeb, Courier New, monospace"; case "cursive": return "DancingScriptWeb, Segoe Script, Lucida Handwriting, serif"; case "script": return "NautilusWeb, Segoe Script, Lucida Handwriting, serif";
            case "hand": return "KalamWeb, Comic Sans MS, Comic Sans, sans-serif"; case "meow": return "MeowWeb, Comic Sans MS, Comic Sans, sans-serif"; default: assertNotReached("Font " + a + " not found")
        }
    }; var gSettings = new Settings; var Names = function () { var a = this; this._names = []; setTimeout(function () { return a._loadNames() }, 2E3) }; Names.prototype._loadNames = function () { var a = this, b; return $jscomp.asyncExecutePromiseGeneratorProgram(function (c) { if (1 == c.nextAddress) { if (Store.needsTutorial()) return c.return(); b = a; return c.yield(api.fetchText("names-short.csv"), 2) } b._names = c.yieldResult.split(","); c.jumpToEnd() }) };
    Names.prototype.has = function (a) { for (var b = 0, c = this._names.length - 1; b <= c;) { var d = b + Math.floor((c - b) / 2), e = this._names[d]; if (e == a) return !0; e < a ? b = d + 1 : c = d - 1 } return !1 }; var gNames = new Names; var Coord = function (a, b) { this.row = a; this.col = b }, PuzzleSolver = function (a, b) {
        this._puzzle = a; this._solution = b; this.size = this._puzzle.board.length; this._coords = []; this._letters = new Map; for (a = 0; a < this.size; a++)for (this._coords.push([]), b = 0; b < this.size; b++) { this._coords[a].push(new Coord(a, b)); var c = this._puzzle.board[a][b]; this._letters.has(c) || this._letters.set(c, []); this._letters.get(c).push(this._coords[a][b]) } this._bitmap = this._genBitmap(); this._wordCoords = new Map; a = $jscomp.makeIterator(this._puzzle.words);
        for (b = a.next(); !b.done; b = a.next())this._wordCoords.set(b.value, []); this._findWords(); this.wordsToHint = (new Random(gPuzzleManager.puzzleKey)).shuffled(this._puzzle.words); this.wordsToHint.sort(function (d, e) { return 6 < d.length || 6 < e.length ? d.length - e.length : 0 })
    }; PuzzleSolver.prototype.getWordCoords = function (a) { return (a = this._wordCoords.get(a)) ? a.slice().reverse() : null };
    PuzzleSolver.prototype.getUnnecessaryCoords = function () { for (var a = new Set(this._coords.flat()), b = $jscomp.makeIterator(this._wordCoords.entries()), c = b.next(); !c.done; c = b.next()) { var d = $jscomp.makeIterator(c.value); c = d.next().value; d = d.next().value; if (!this._solution.has(c)) for (c = $jscomp.makeIterator(d), d = c.next(); !d.done; d = c.next())a.delete(d.value) } return a };
    PuzzleSolver.prototype.getCoordUses = function () { for (var a = new Map(this._coords.flat().map(function (e) { return [e, 0] })), b = $jscomp.makeIterator(this._wordCoords.entries()), c = b.next(); !c.done; c = b.next()) { var d = $jscomp.makeIterator(c.value); c = d.next().value; d = d.next().value; if (!this._solution.has(c)) for (c = $jscomp.makeIterator(d), d = c.next(); !d.done; d = c.next())d = d.value, a.set(d, a.get(d) + 1) } return a };
    PuzzleSolver.prototype.getCoordFirstCounts = function () { for (var a = new Map(this._coords.flat().map(function (e) { return [e, 0] })), b = $jscomp.makeIterator(this._wordCoords.entries()), c = b.next(); !c.done; c = b.next()) { var d = $jscomp.makeIterator(c.value); c = d.next().value; d = d.next().value; this._solution.has(c) || (c = d[d.length - 1], a.set(c, a.get(c) + 1)) } return a }; PuzzleSolver.prototype.findWord = function (a) { return this._findWord(a, a) };
    PuzzleSolver.prototype._genBitmap = function () { for (var a = [], b = 0; b < this.size; b++)a.push(Array(this.size)), a[b].fill(!1); return a };
    PuzzleSolver.prototype._findWord = function (a, b, c, d) {
        if (0 == a.length) return !0; for (var e = [], f = $jscomp.makeIterator(this._letters.get(a[0])), g = f.next(); !g.done; g = f.next())g = g.value, void 0 == c ? e.push(g) : (assert(void 0 != d), (this._puzzle.special.speller || 1 >= Math.abs(g.row - c) && 1 >= Math.abs(g.col - d)) && e.push(g)); c = $jscomp.makeIterator(e); for (g = c.next(); !g.done; g = c.next())if (e = g.value, d = e.row, e = e.col, this._puzzle.special.speller || 0 == this._bitmap[d][e]) if (this._bitmap[d][e] = !0, f = this._findWord(a.slice(1), b, d, e),
            this._bitmap[d][e] = !1, f) return this._wordCoords.get(b).push(this._coords[d][e]), !0; return !1
    }; PuzzleSolver.prototype._findWords = function () { for (var a = $jscomp.makeIterator(this._puzzle.words), b = a.next(); !b.done; b = a.next())b = b.value, this._solution.has(b) || this._findWord(b, b) }; var WordList = function (a, b, c, d, e) {
        var f = this; this._node = $("#wordList"); this.game = a; this._solution = b; this._yesterdaySolution = d; this._puzzle = this.game.puzzle; this._yesterdayPuzzle = c; this._isTutorial = e; this._allowHints = !1; this._lastWeekWords = null; this._hintSortEl = this._node.querySelector("#hintSort"); this._hintFirstLettersEl = this._node.querySelector("#hintFirstLetters"); this._hintSortEl.addEventListener("change", function () {
            var h = f._hintSortEl.checked; gtag("event", h ? "enable_hint" : "disable_hint", { label: "Sort missing words" });
            f._solution.hints.sort = h; f._solution.saveAndPostScore(); f._render(!0)
        }); this._hintFirstLettersEl.addEventListener("change", function () { var h = f._hintFirstLettersEl.checked; gtag("event", h ? "enable_hint" : "disable_hint", { label: "Show first letters" }); f._solution.hints.firstLetters = h; f._solution.saveAndPostScore(); f._render(!0) }); this._hintSortEl.checked = this._solution.hints.sort; this._hintFirstLettersEl.checked = this._solution.hints.firstLetters; $("#showWordsInFoundOrderToggle").addEventListener("change",
            function (h) { h = h.target.checked; $("#wordsInFoundOrder").hidden = !h; h && $("#wordsInFoundOrder").scrollIntoView({ behavior: "smooth" }) }); $("#yesterdayShowWordsInFoundOrderToggle").addEventListener("change", function (h) { h = h.target.checked; $("#yesterdayWordsInFoundOrder").hidden = !h; h && $("#yesterdayWordsInFoundOrder").scrollIntoView({ behavior: "smooth" }) });[$("#wordsInFoundOrder"), $("#yesterdayWordsInFoundOrder")].forEach(function (h) {
                return h.addEventListener("click", function (k) {
                    if ("SPAN" == k.target.tagName) {
                        var l =
                            k.target.textContent.split(", ")[0]; console.log(l); var m = f._puzzle.wiktDefinitions.get(l) || f._puzzle.definitions.get(l); setTimeout(function () { return DefinitionView.fromDefinition(l, m).show() })
                    }
                })
            }); gBeta.useBetaPuzzle ? $("#replayPuzzleTeaser").hidden = !0 : $("#replayCurPuzzle").addEventListener("click", function () {
                return $jscomp.asyncExecutePromiseGeneratorProgram(function (h) {
                    if (1 == h.nextAddress) return Store.isPremium() ? h.yield(gPuzzleManager.deleteSolution(gPuzzleManager.puzzleKey), 3) : (gPopups.show($("#premiumSignup")),
                        h.jumpTo(0)); h.yieldResult && api.reload("replayCurPuzzle"); h.jumpToEnd()
                })
            }); this._yesterdayPuzzle && !gBeta.useBetaPuzzle ? (new Board($("#yesterdayBoard"), this._yesterdayPuzzle.board), this._resizeYesterdayBoardWhenVisible(), $("#wordList-yesterday-play").addEventListener("click", function (h) { Store.isPremium() ? gPuzzleManager.playPastPuzzle(DateUtil.getYesterdayStr()) : gPopups.show($("#premiumSignup")) }), $("#wordList-yesterday-show").addEventListener("click", function (h) {
                $("#yesterdayLinks").hidden = !0; $("#yesterdayReveal").hidden =
                    !1
            }), gPuzzleManager.isWeeklyPuzzle && api.getLastWeekWords().then(function (h) { f._lastWeekWords = h; f._render(!1) })) : ($('#wordList button[aria-controls="wordsYesterdayTab"]').hidden = !0, gBeta.useBetaPuzzle && ($('#wordList button[aria-controls="wordsTodayTab"] .notExtraNarrow').textContent = "Preview")); DateUtil.origTodayDateStr == DateUtil.getTodayStr() ? $("#wordList-past-today").hidden = !0 : $("#wordList-past-today").addEventListener("click", function (h) { gPuzzleManager.playTodayPuzzle() }); $("#wordList-past-archives").addEventListener("click",
                function (h) { assert(Store.isPremium()); gArchive.show() }); gPuzzleManager.archiveDate && ($('#wordList button[aria-controls="wordsTodayTab"] .notExtraNarrow').textContent = gPuzzleManager.archiveDate, $('#wordList button[aria-controls="wordsPastTab"] .notExtraNarrow').textContent = "Archive"); DateUtil.getSecondsToHints().then(function (h) {
                    if (!f._allowHints) {
                        setTimeout(function () { f._allowHints || 0 != $("#wordList").offsetHeight && f._render(!0) }, Math.max(0, 1E3 * h)); var k = setInterval(function () {
                            f._allowHints ? clearInterval(k) :
                                DateUtil.shouldAllowHints && (clearInterval(k), f._render(!0))
                        }, 1E4)
                    }
                }); var g = setInterval(function () {
                    for (var h = $jscomp.makeIterator($$("#wordsTodayTab .wordLengths li")), k = h.next(); !k.done; k = h.next())if (k = k.value, k.textContent != k.dataset.word) {
                        clearInterval(g); Dialog.show("Translate detected", "<p>It looks like you're using a translation plug-in, such as Google\n            Translate. This plug-in changes the words that are shown in the word\n            list.</p>\n            <p>Since this is a word game, please disable your translator for\n            this website and then refresh the page. Otherwise, you will\n            encounter unexpected behavior.</p>",
                            !0, !1, { label: "Refresh", action: function () { return api.reload("translateWarning") } }); break
                    }
                }, 5E3)
    }; WordList.prototype.show = function () { this._render(!0); this._yesterdayPuzzle && this._render(!1); $("#wordList .content").classList.add("show"); gPopups.show($("#wordList")) }; WordList.prototype.enableHints = function () { this._allowHints = !0 };
    WordList.prototype._render = function (a) {
        function b() { for (var l = $jscomp.makeIterator(k.children), m = l.next(); !m.done; m = l.next())if (m = m.value.querySelector("ul")) { for (var p = 0, q = $jscomp.makeIterator(m.children), t = q.next(); !t.done; t = q.next())p = Math.max(p, t.value.offsetWidth); 0 != p && (m.style.display = "grid", m.style.gridTemplateColumns = "repeat(auto-fill, minmax(" + p + "px, 1fr))") } k.style.opacity = "" } var c = this, d = a ? this._puzzle : this._yesterdayPuzzle, e = a ? this._solution : this._yesterdaySolution; DateUtil.shouldAllowHints &&
            (this._allowHints = !0); $("#wordListHintsLater").hidden = this._allowHints || this._isTutorial; $("#wordListHints").hidden = this._isTutorial || !this._allowHints || this._solution.isSolved(); var f = $(a ? "#wordsTodayTab" : "#wordsYesterdayTab"); if (a) {
                var g = Math.max(0, this._solution.maxReveals - this._solution.revealsUsed), h = $("#revealsRemaining"); h.querySelector("span").textContent = g; 0 < g ? (h.querySelector("svg").hidden = !Store.isPremium(), $("#revealsRemainingUpgrade").hidden = !0, $("#revealsRemainingHelpUpgrade").hidden =
                    !1) : ($("#revealsRemainingUpgrade").hidden = Store.isPremium(), $("#revealsRemainingHelpUpgrade").hidden = !0)
            } var k = assertInstanceOf(f.querySelector(".wordLengths"), HTMLElement); k.innerHTML = ""; f = new Map; g = $jscomp.makeIterator(d.words); for (h = g.next(); !h.done; h = g.next())h = h.value, f.has(h.length) || f.set(h.length, []), f.get(h.length).push({ word: h, found: e.has(h) }); f = [].concat($jscomp.arrayFromIterable(f)); f.sort(function (l, m) { return l[0] - m[0] }); f = $jscomp.makeIterator(f); for (g = f.next(); !g.done; g = f.next())h = g.value,
                g = h[0], h = h[1], h.sort(function (l, m) { return !a || c._allowHints && c._solution.hints.sort ? l.word.localeCompare(m.word) : l.found ? m.found ? l.word.localeCompare(m.word) : -1 : m.found ? 1 : 0 }), k.appendChild(this._createSectionWithWords(g + " letters", h, a, !1)); (f = "undefined" == typeof d.wordOfTheDay ? null : d.wordOfTheDay) && k.appendChild(this._createSectionWithWords("Bonus Word of the Day", [{ word: f.term, found: e.has(f.term), wordOfTheDay: f }], a, !0)); a ? 0 < e.obscureWords.size && k.appendChild(this._createSectionWithWords("Bonus words found",
                    Array.from(e.obscureWords).sort().map(function (l) { return { word: l, found: !0 } }), a, !0)) : k.appendChild(this._createSectionWithWords("Bonus words", Array.from(d.optionalWords).sort().map(function (l) { return { word: l, found: e.has(l) } }), a, !0)); k.style.opacity = "0"; requestAnimationFrame(function () { 0 < k.offsetHeight ? b() : "undefined" == typeof IntersectionObserver ? k.style.opacity = "" : (new IntersectionObserver(function (l, m) { 0 < l[0].intersectionRatio && (m.unobserve(k), b()) })).observe(k) }); d = a ? $("#wordsInFoundOrder div") : $("#yesterdayWordsInFoundOrder div");
        d.textContent = ""; f = Array.from((a ? this._solution : this._yesterdaySolution).words); for (g = 0; g < f.length; g++)h = document.createElement("span"), h.textContent = f[g], g < f.length - 1 && (h.textContent += ", "), d.appendChild(h); d = a ? $("#bonusWordsInFoundOrder") : $("#yesterdayBonusWordsInFoundOrder"); d.textContent = ""; f = Array.from((a ? this._solution : this._yesterdaySolution).obscureWords); for (g = 0; g < f.length; g++)h = document.createElement("span"), h.textContent = f[g], g < f.length - 1 && (h.textContent += ", "), d.appendChild(h)
    };
    WordList.prototype._createSectionWithWords = function (a, b, c, d) {
        var e = this, f = this._allowHints && this._solution.hints.firstLetters || d, g = this._allowHints && this._solution.hints.sort || d || f, h = c && !d && 0 < this._solution.maxReveals - this._solution.revealsUsed && 0 < b.length && 6 >= b[0].word.length && !this._isTutorial, k = document.createElement("section"), l = document.createElement("h3"); l.textContent = a; k.appendChild(l); l = document.createElement("ul"); a = 0; for (var m = {}, p = $jscomp.makeIterator(b), q = p.next(); !q.done; m = {
            $jscomp$loop$prop$entry$151: m.$jscomp$loop$prop$entry$151,
            $jscomp$loop$prop$wordOfTheDay$150: m.$jscomp$loop$prop$wordOfTheDay$150, $jscomp$loop$prop$word$152: m.$jscomp$loop$prop$word$152
        }, q = p.next())if (m.$jscomp$loop$prop$entry$151 = q.value, !c || g || m.$jscomp$loop$prop$entry$151.found) {
            q = document.createElement("li"); if (c && !m.$jscomp$loop$prop$entry$151.found) {
                var t = "*".repeat(m.$jscomp$loop$prop$entry$151.word.length); if (f) {
                    var n = Config.clueLength; 12 <= m.$jscomp$loop$prop$entry$151.word.length ? n = 3 : 6 <= m.$jscomp$loop$prop$entry$151.word.length && (n = 2); d && (n = Math.max(n,
                        2)); t = m.$jscomp$loop$prop$entry$151.word.slice(0, n) + t.slice(n); n = 0; 10 <= m.$jscomp$loop$prop$entry$151.word.length ? n = 3 : 8 <= m.$jscomp$loop$prop$entry$151.word.length ? n = 2 : 7 <= m.$jscomp$loop$prop$entry$151.word.length && (n = 1); t = t.slice(0, m.$jscomp$loop$prop$entry$151.word.length - n) + m.$jscomp$loop$prop$entry$151.word.slice(m.$jscomp$loop$prop$entry$151.word.length - n); d && 5 < m.$jscomp$loop$prop$entry$151.word.length && (t += " (" + m.$jscomp$loop$prop$entry$151.word.length + " letters)")
                } q.textContent = t; q.dataset.word =
                    t; h && q.addEventListener("click", function (v) { return function () { return e._revealWord(v.$jscomp$loop$prop$entry$151.word) } }(m))
            } else {
                t = document.createElement("a"); m.$jscomp$loop$prop$word$152 = m.$jscomp$loop$prop$entry$151.word; n = m.$jscomp$loop$prop$word$152; for (var r = $jscomp.makeIterator(gContractions), u = r.next(); !u.done; u = r.next())if (u = u.value, u.replaceAll("'", "") == m.$jscomp$loop$prop$word$152) { n = u; break } m.$jscomp$loop$prop$entry$151.wordOfTheDay ? (t.classList.add("secondary"), m.$jscomp$loop$prop$wordOfTheDay$150 =
                    assertInstanceOf(m.$jscomp$loop$prop$entry$151.wordOfTheDay, WordOfTheDay), t.href = "#", t.addEventListener("click", function (v) { return function (y) { y.preventDefault(); (new WordOfTheDayDetail(v.$jscomp$loop$prop$wordOfTheDay$150, c ? v.$jscomp$loop$prop$entry$151.found : !1, c ? e._puzzle.credits : e._yesterdayPuzzle.credits)).dispatch(); ButtonClickEvent.log("wordOfTheDay") } }(m))) : (t.href = "#", t.addEventListener("click", function (v) {
                        return function (y) {
                            ButtonClickEvent.log("wordDefinition"); var w = c ? e._puzzle : e._yesterdayPuzzle,
                                x = w.wiktDefinitions.get(v.$jscomp$loop$prop$word$152) || w.definitions.get(v.$jscomp$loop$prop$word$152); setTimeout(function () { return DefinitionView.fromDefinition(v.$jscomp$loop$prop$word$152, x).show() }); y.preventDefault()
                        }
                    }(m))); t.textContent = n; q.appendChild(t); q.dataset.word = n; c || "undefined" == typeof gYesterdayWords && !this._lastWeekWords || (n = this._lastWeekWords ? this._lastWeekWords[m.$jscomp$loop$prop$word$152] : gYesterdayWords[m.$jscomp$loop$prop$word$152], "undefined" == typeof n && (n = 0), r = document.createElement("span"),
                        r.textContent = " " + n + "%", r.classList.add("percent"), q.appendChild(r)); m.$jscomp$loop$prop$entry$151.found || t.classList.add("missedWord")
            } l.appendChild(q)
        } else a++; 0 < l.children.length && k.appendChild(l); a && (f = document.createElement("div"), f.classList.add("wordGroupInfo"), l = document.createElement("span"), l.textContent = "+" + a + " word" + (1 < a ? "s" : "") + " left", l.classList.add("missingCount"), f.appendChild(l), k.appendChild(f), h && (l.textContent += " - ", l = document.createElement("a"), l.textContent = 1 < a ? "Reveal a random word" :
            "Reveal word", l.setAttribute("href", "#"), l.addEventListener("click", function (v) { v.preventDefault(); e._revealRandomWord(b.filter(function (y) { return !y.found })) }), f.appendChild(l))); h && g && 0 < b.filter(function (v) { return !v.found }).length && (g = document.createElement("div"), g.textContent = "Tap a missing word to reveal it", g.classList.add("wordGroupInfo"), k.appendChild(g)); c && d && 1 == b.length && b[0].wordOfTheDay && !b[0].found && (d = document.createElement("div"), d.innerHTML = '\n        <a href="#">Share</a> to get a hint for the Bonus Word of the Day.\n      ',
                d.querySelector("a").addEventListener("click", function (v) { v.preventDefault(); e.game.renderer.renderShare() }), d.classList.add("disclaimer"), k.appendChild(d)); return k
    }; WordList.prototype._revealRandomWord = function (a) { a = a.filter(function (b) { return !b.found }); assert(0 < a.length); this._revealWord(a[Math.floor(Math.random() * a.length)].word) };
    WordList.prototype._revealWord = function (a) {
        var b = this, c, d; return $jscomp.asyncExecutePromiseGeneratorProgram(function (e) {
            if (1 == e.nextAddress) return c = b._solution.maxReveals - b._solution.revealsUsed, d = 1 == c ? "Are you sure you want to use your " + (1 == b._solution.maxReveals ? "only" : "last") + " reveal?" : "Are you sure you want to use one of your " + c + " reveals?", e.yield(Util.confirm(d, "Reveal", "Cancel"), 2); if (!e.yieldResult) return e.return(); b.game.hintWord(a); b._solution.useReveal(); isWide() ? b._render(!0) : gPopups.close();
            e.jumpToEnd()
        })
    }; WordList.prototype._resizeYesterdayBoardWhenVisible = function () { var a = $("#yesterdayBoard"); window.addEventListener("resize", function () { 0 < a.offsetWidth && (a.style.height = a.offsetWidth + "px") }); "undefined" != typeof IntersectionObserver && (new IntersectionObserver(function (b, c) { 0 < b[0].intersectionRatio && (a.style.height = a.offsetWidth + "px") })).observe(a) }; var BoardListener = function () { }; BoardListener.prototype.onRotate = function () { }; BoardListener.prototype.onRotateEnd = function () { }; BoardListener.prototype.updateWord = function (a, b) { }; BoardListener.prototype.onSubmitWord = function (a) { }; BoardListener.prototype.onCancelWord = function () { };
    var Board = function (a, b, c) {
        var d = this; a = assertInstanceOf(a, HTMLElement); this.size = b.length; this._listener = c; this.isSpeller = 3 == this.size && " " == b[0][0] && " " == b[0][2]; this._node = null; this._pointerDown = this._isRotating = !1; this._usedLetters = []; this._pointerMoveListener = function (g) { return d._onPointerMove(g) }; this._octRotate = c && Store.isRotate45Enabled(); this._divisions = c && this._octRotate ? 8 : 4; this._classPrefix = c && this._octRotate ? "octRotate-" : "rotate-"; this._rotation = 0; this._pointerImg = null; a.innerHTML = "";
        a.innerHTML = '\n      <div class="letters">\n        <div class="board">\n          <div class="letterBoxes"></div>\n        </div>\n      ' + (this.isSpeller ? '\n        <a href="#" class="leftButton" aria-label="shuffle">\n          <svg class="boardButton"><use href="#icon-shuffle"></svg>\n        </a>\n        <a href="#" class="rightButton" aria-label="delete">\n          <svg class="boardButton"><use href="#icon-backspace"></svg>\n        </a>\n        ' : '\n        <a href="#" class="leftButton" aria-label="audio">\n          <svg class="boardButton"><use href="#icon-audio-muted"></svg>\n        </a>\n        <a href="#" class="rightButton" aria-label="rotate">\n          <svg class="boardButton"><use href="#icon-rotate-right"></svg>\n        </a>') +
            "\n      </div>\n    "; 6 < this.size && a.querySelector(".letters").classList.add("hugeGrid"); this._node = a.children[0]; a = this.$(".leftButton"); var e = this.$(".rightButton"); c && (this.isSpeller ? (this._node.addEventListener("pointerdown", function (g) { return d._onSpellerPointerDown(g) }), window.addEventListener("keydown", function (g) { d._onSpellerKeyDown(g) })) : (this._node.addEventListener("pointerdown", function (g) { return d._onPointerDown(g) }), window.addEventListener("pointerup", function (g) { return d._onPointerUp(g) }),
                window.addEventListener("keydown", function (g) { d._onKeyDown(g) }))); if (c && !Store.needsTutorial()) {
                    Store.hasRotated() && this.$(".letterBoxes").classList.add("didRotate"); e.addEventListener("click", function (g) { d.isSpeller ? (g.preventDefault(), d._spellerBackspace()) : d._rotate(g) }); var f = function () {
                        if (!Store.hasRotated()) if (gPopups.isPopupOpen()) setTimeout(f, 1E4); else {
                            var g = d.isSpeller ? $(".leftButton") : $(".rightButton"); g.querySelector("svg").classList.add("throb"); var h = document.createElement("div"); h.classList.add("box",
                                "scoreBox", d.isSpeller ? "arrow-left-center" : "arrow-right-center"); h.textContent = d.isSpeller ? "Shuffle!" : "Rotate!"; g.appendChild(h); g.addEventListener("click", function () { return h.remove() })
                        }
                    }; setTimeout(f, 6E4); a.addEventListener("click", function (g) { d.isSpeller ? d._rotate(g) : (g.preventDefault(), gAudio.onBoardVolumeClick(), gPopups.show($("#audioSettings"))) }); gTryDebug(function () { return gAudio.onBoardReady() })
                } else a.remove(), e.remove(); this._letterCoords = new Map; this._hintCoords = []; this._hintLetterTimeouts =
                    []; this._prevPositions = "bee" == Config.game ? [[1, 0], [0, 1], [2, 1], [0, 2], [1, 2], [2, 2]] : null; this.renderPuzzle(b)
    }; Board.prototype.$ = function (a) { var b = this._node.querySelector(a); assert(b, "Element not found: " + a); return b }; Board.prototype.$$ = function (a) { return Array.from(this._node.querySelectorAll(a)) }; Board.prototype.animateCompletion = function (a) { this.$(".board").classList.add("primary"); a || this.$(".board").classList.add("celebrate") };
    Board.prototype.markLetterUnnecessary = function (a) { this.$$(".letterBoxes .letterContainer").filter(function (b) { return b.querySelector(".letter").textContent[0] == a.toUpperCase() }).forEach(function (b) { return b.classList.add("unnecessary") }) }; Board.prototype.markCoordUnnecessary = function (a, b) { a = this.$$(".letterBoxes .letterContainer")[a.row * this.size + a.col]; b && a.classList.add("unnecessaryOnFirstLoad"); a.classList.add("unnecessary") };
    Board.prototype.setCoordUses = function (a, b) { this.$$(".letterBoxes .letter")[a.row * this.size + a.col].parentElement.querySelector(".usageCount").textContent = 0 == b ? "" : 5 < this.size && 9 < b ? "+" : b.toString() }; Board.prototype.setCoordFirsts = function (a, b) { this.$$(".letterBoxes .letter")[a.row * this.size + a.col].parentElement.querySelector(".firstsCount").textContent = 0 == b ? "" : 5 < this.size && 9 < b ? "+" : b.toString() };
    Board.prototype.renderPuzzle = function (a) {
        var b = this; this._listener && Store.needsTutorial() && "p" == a[0][0] ? (this._pointerImg = document.createElement("img"), this._pointerImg.id = "pointerImg", this._pointerImg.setAttribute("src", "icons/hand-pointer.png")) : this._pointerImg && (this._pointerImg.remove(), this._pointerImg = null); this._letterCoords = new Map; var c = this.$(".letterBoxes"); 4 != this.size && (c.style.gridTemplateColumns = Array(this.size).fill("1fr").join(" ")); c.querySelectorAll("div").forEach(function (r) { return r.remove() });
        for (var d = this._listener ? $("#game").getBoundingClientRect().top : 0, e = 0; e < this.size; e++)for (var f = 0; f < this.size; f++) {
            var g = document.createElement("div"); g.classList.add("letterContainer"); g.style.fontSize = "calc(4/" + this.size + " * 1em)"; var h = document.createElement("div"); h.classList.add("letterBg"); var k = document.createElement("div"); k.classList.add("letterFg"); var l = document.createElement("div"); l.classList.add("letter"); var m = document.createElement("div"); m.classList.add("content"); this._letterCoords.set(m,
                new Coord(e, f)); var p = document.createElement("div"); p.classList.add("unnecessaryWrapper"); p.textContent = a[e][f].toUpperCase(); " " == p.textContent && g.classList.add("unnecessaryOnFirstLoad", "unnecessary", "blank"); m.appendChild(p); l.appendChild(m); k.appendChild(l); l = document.createElement("div"); l.classList.add("usageCount"); l.classList.add("countInfo"); k.appendChild(l); l = document.createElement("div"); l.classList.add("firstsCount"); l.classList.add("countInfo"); k.appendChild(l); g.appendChild(h); g.appendChild(k);
            c.appendChild(g); this.isSpeller || !this._listener || navigator.userAgent.includes("Googlebot") || (g.style.top = -2 * d - 150 * (this.size - e) - 50 * (this.size - f) + "px")
        } this.isSpeller && c.querySelector(".letterContainer:nth-of-type(5)").classList.add("spellerRequired"); if (!this.isSpeller && this._listener && 0 < $("#game").offsetHeight) {
            var q = this.size * this.size; this._node.querySelectorAll(".letterContainer").forEach(function (r, u) { setTimeout(function () { return r.style.top = "0px" }, 25 * (q - u)) }); if (this._pointerImg) {
                var t = $("#board .letterContainer"),
                    n = function () {
                        t.removeEventListener("transitionend", n); setTimeout(function () {
                            var r = Util.setIntervalImmediate(function () {
                                if (b._pointerImg) {
                                    b._pointerImg.remove(); b._pointerImg.style.opacity = ""; var u = t.getBoundingClientRect(); b._pointerImg.style.top = u.top + (u.bottom - u.top) / 4 * 3 + "px"; b._pointerImg.style.left = u.left + (u.right - u.left) / 2 - 20 + "px"; document.body.appendChild(b._pointerImg); u = $("#board .letterContainer:nth-child(4)").getBoundingClientRect(); b._pointerImg.style.left = u.left + (u.right - u.left) / 2 - 20 +
                                        "px"; var v = function () { b._pointerImg.removeEventListener("transitionend", v); b._pointerImg.style.opacity = "0" }; b._pointerImg.addEventListener("transitionend", v)
                                } else clearInterval(r)
                            }, 3500)
                        }, 500)
                    }; t.addEventListener("transitionend", n)
            }
        }
    };
    Board.prototype.hintWord = function (a) {
        for (var b = $jscomp.makeIterator(this._hintLetterTimeouts), c = b.next(); !c.done; c = b.next())clearTimeout(c.value); this._hintLetterTimeouts = []; b = $jscomp.makeIterator(this._hintCoords); for (c = b.next(); !c.done; c = b.next())c = c.value, this.$$(".letterBoxes .letterContainer")[c.row * this.size + c.col].classList.remove("hinting", "stopHinting", "hintable"); this._hintCoords = a; if (0 != this._hintCoords.length) {
            a = $jscomp.makeIterator(a); for (c = a.next(); !c.done; c = a.next())b = c.value, this.$$(".letterBoxes .letter")[b.row *
                this.size + b.col].classList.add("hintable"); this._animateWord()
        }
    }; Board.prototype.spellerStartEgg = function () { this.$$(".letterBoxes .letterContainer")[4].style.visibility = "hidden"; this.$$(".letterBoxes .letterContainer")[4].style.pointerEvents = "none" }; Board.prototype.spellerStopEgg = function () { this.$$(".letterBoxes .letterContainer")[4].style.visibility = ""; this.$$(".letterBoxes .letterContainer")[4].style.pointerEvents = "" };
    Board.prototype._animateWord = function () {
        var a = this; this._hintLetterTimeouts = []; for (var b = this._hintCoords, c = $jscomp.makeIterator(b), d = c.next(); !d.done; d = c.next())d = d.value, this.$$(".letterBoxes .letterContainer")[d.row * this.size + d.col].classList.remove("hinting", "stopHinting"); var e = "bee" == Config.game ? 500 : 350; c = e * (b.length + 1); for (d = { $jscomp$loop$prop$i$154: 0 }; d.$jscomp$loop$prop$i$154 < b.length; d = { $jscomp$loop$prop$i$154: d.$jscomp$loop$prop$i$154, $jscomp$loop$prop$targetEl$134$155: d.$jscomp$loop$prop$targetEl$134$155 },
            d.$jscomp$loop$prop$i$154++) {
            var f = b[d.$jscomp$loop$prop$i$154]; d.$jscomp$loop$prop$targetEl$134$155 = this.$$(".letterBoxes .letterContainer")[f.row * this.size + f.col]; this._hintLetterTimeouts.push(setTimeout(function (g) {
                return function () {
                    if (0 < g.$jscomp$loop$prop$i$154) { var h = b[g.$jscomp$loop$prop$i$154 - 1]; h = a.$$(".letterBoxes .letterContainer")[h.row * a.size + h.col]; h.classList.remove("hinting"); h == g.$jscomp$loop$prop$targetEl$134$155 && h.offsetWidth } g.$jscomp$loop$prop$targetEl$134$155.style.animationDuration =
                        e + "ms"; g.$jscomp$loop$prop$targetEl$134$155.classList.add("hinting", "hintable")
                }
            }(d), e * (d.$jscomp$loop$prop$i$154 + 1)))
        } this._hintLetterTimeouts.push(setTimeout(function () { a.$$(".letterBoxes .letter.hinting").forEach(function (g) { g.classList.add("stopHinting"); g.classList.remove("hinting") }); a._hintLetterTimeouts.push(setTimeout(function () { return a._animateWord() }, 1E3)) }, c))
    };
    Board.prototype._rotate = function (a) { a.preventDefault(); Store.setHasRotated(); gtag("event", "rotate_board"); this.$(".rightButton svg").classList.remove("throb"); this._pointerDown = !1; this._node.classList.remove("dragging"); document.body.classList.remove("dragging"); this._removeLines(); if (this._listener) this._listener.onRotate(); this._isRotating = !0; this.isSpeller ? this._shuffleLetters() : this._rotateLetters() };
    Board.prototype._rotateLetters = function () {
        var a = this, b = this.$(".letterBoxes"), c = (this._rotation + this._divisions) % this._divisions; this._octRotate && b.classList.add("octRotate"); b.classList.remove(this._classPrefix + c); this._rotation = (this._rotation + 1) % this._divisions; b.classList.add(this._classPrefix + this._rotation); 4 < this._divisions && document.body.classList.toggle("rotateOdd", 1 == this._rotation % 2); var d = function () {
            b.removeEventListener("animationend", d); if (a._listener) a._listener.onRotateEnd(); a._isRotating =
                !1; b.classList.add("didRotate")
        }; b.addEventListener("animationend", d)
    };
    Board.prototype._shuffleLetters = function () {
        var a = this, b = this.$(".letterBoxes"), c = function () { b.children[1].removeEventListener("transitionend", c); if (a._listener) a._listener.onRotateEnd(); a._isRotating = !1; b.classList.add("didRotate") }; b.children[1].addEventListener("transitionend", c); for (var d = [[1, 0], [0, 1], [2, 1], [0, 2], [1, 2], [2, 2]], e = new Random((new Date).getTime().toString()), f = e.shuffled(d), g = 0; this._prevPositions;) {
            g++; for (var h = !1, k = 0; k < f.length; k++)if (f[k][0] == this._prevPositions[k][0] && f[k][1] ==
                this._prevPositions[k][1]) { e.shuffle(f); h = !0; break } if (!h) break
        } console.log("Shuffled " + g + " times"); this._prevPositions = f; for (e = 0; e < d.length; e++)k = d[e], g = f[e], h = b.children[3 * k[1] + k[0]], h.style.left = 111 * (g[0] - k[0]) + "%", k = 111 * (g[1] - k[1]), h.style.top = 0 == g[0] % 2 ? k - 50 + "%" : k + "%"
    };
    Board.prototype._onPointerDown = function (a) {
        if (!this._isRotating && this._node.contains(a.target)) {
            var b = null; a.target.classList.contains("content") ? b = a.target : a.target.classList.contains("unnecessaryWrapper") ? b = a.target.parentElement : a.target.classList.contains("usageCount") ? b = a.target.parentElement.querySelector(".content") : a.target.classList.contains("letter") && (b = a.target.querySelector(".content")); b && " " != b.textContent[0] && (a.preventDefault(), document.addEventListener("pointermove", this._pointerMoveListener),
                0 == this._usedLetters.length && this._startWord(), this._onLetter(b))
        }
    };
    Board.prototype._onPointerMove = function (a) {
        if (!this._isRotating && this._pointerDown) {
            var b = document.elementFromPoint(a.clientX, a.clientY); if (b && this._node.contains(b)) {
                var c = null; b.classList.contains("content") ? c = b : b.classList.contains("unnecessaryWrapper") ? c = b.parentElement : b.classList.contains("usageCount") ? c = b.parentElement.querySelector(".content") : b.classList.contains("letter") && (c = b.querySelector(".content")); if (c && " " != c.textContent[0]) {
                    b = c.parentElement.getBoundingClientRect(); var d = Math.sqrt(Math.pow(a.clientX -
                        (b.left + (b.right - b.left) / 2), 2) + Math.pow(a.clientY - (b.top + (b.bottom - b.top) / 2), 2)), e = .5; c.parentElement.parentElement.parentElement.classList.contains("unnecessary") && !this.$(".board").classList.contains("primary") && (e = .2); 1 == this._rotation % 2 && 8 == this._divisions && (e /= 2); d > e * (b.right - b.left) || (a.preventDefault(), a.stopPropagation(), this._onLetter(c))
                }
            } else this._listener.updateWord(this._getWord(), !1), 100 < this._node.getBoundingClientRect().top - a.clientY && this._onPointerUp(a)
        }
    };
    Board.prototype._onPointerUp = function (a) { if (this._pointerDown) { document.removeEventListener("pointermove", this._pointerMoveListener); this._pointerDown = !1; this._node.classList.remove("dragging"); if (100 < this._node.getBoundingClientRect().top - a.clientY) { if (this._listener) this._listener.onCancelWord() } else if (this._listener) this._listener.onSubmitWord(this._getWord()); this._removeLines() } };
    Board.prototype._onSpellerPointerDown = function (a) { if (!this._isRotating && this._node.contains(a.target)) { var b = null; a.target.classList.contains("content") ? b = a.target : a.target.classList.contains("unnecessaryWrapper") ? b = a.target.parentElement : a.target.classList.contains("usageCount") ? b = a.target.parentElement.querySelector(".content") : a.target.classList.contains("letter") && (b = a.target.querySelector(".content")); b && " " != b.textContent[0] && (a.preventDefault(), this._onSpellerLetter(b)) } };
    Board.prototype._onKeyDown = function (a) {
        var b = this; if (this._node.getRootNode() != this._node && !(gPopups.isPopupOpen() || this._isRotating || a.metaKey || a.ctrlKey || a.altKey)) {
            var c = function (f) {
                return b.$$(".letter .content").filter(function (g) { return g.textContent[0] == f }).filter(function (g) { if (0 == b._usedLetters.length) return !0; if (b._usedLetters.includes(g)) return !1; var h = b._usedLetters.slice(-1)[0]; g = b._letterCoords.get(g); h = b._letterCoords.get(h); return 1 >= Math.abs(h.row - g.row) && 1 >= Math.abs(h.col - g.col) }).sort(function (g,
                    h) { return g.parentElement.parentElement.parentElement.classList.contains("unnecessary") ? 1 : h.parentElement.parentElement.parentElement.classList.contains("unnecessary") ? -1 : 0 })
            }, d = function (f, g, h) {
                if (!f.length) return !0; var k = b.$$(".letter .content").filter(function (m) { if (m.textContent[0] != f[0] || g.includes(m)) return !1; if (!h) return !0; m = b._letterCoords.get(m); var p = b._letterCoords.get(h); return 1 >= Math.abs(p.row - m.row) && 1 >= Math.abs(p.col - m.col) }); if (!k.length) return !1; k = $jscomp.makeIterator(k); for (var l =
                    k.next(); !l.done; l = k.next()) { l = l.value; g.push(l); if (d(f.slice(1), g, l)) return !0; g.pop() } return !1
            }; if (1 == a.key.toUpperCase().length && "A" <= a.key.toUpperCase() && "Z" >= a.key.toUpperCase()) {
                var e = document.activeElement; e && e.blur(); c = c(a.key.toUpperCase()); if (0 < c.length) a = c[0], this._pointerDown || this._startWord(), this._onLetter(a, !0); else if (c = [], d(this._usedLetters.map(function (f) { return f.textContent }).join("") + a.key.toUpperCase(), c, null)) for (this._usedLetters.forEach(function (f) { return f.parentElement.parentElement.parentElement.classList.remove("used") }),
                    this._usedLetters = [], Array.from($$(".lineOrDot")).forEach(function (f) { return f.remove() }), a = $jscomp.makeIterator(c), e = a.next(); !e.done; e = a.next())e = e.value, this._onLetter(e, !0, e != c[c.length - 1])
            } else if (" ;Space;Spacebar;Shift;Alt;Control".split(";").includes(a.key) || "Space" == a.code) 0 != this._usedLetters.length && (e = this._usedLetters.pop(), e.parentElement.parentElement.parentElement.classList.remove("used"), $(".lineOrDot:last-of-type").remove(), c = c(e.textContent[0]), e = (c.indexOf(e) + 1) % c.length, this._onLetter(c[e],
                !0), a.preventDefault()); else if ("Enter" == a.key || "Return" == a.key) { if (0 != this._usedLetters.length) { this._pointerDown = !1; this._node.classList.remove("dragging"); if (this._listener) this._listener.onSubmitWord(this._getWord()); this._removeLines() } } else if ("Backspace" == a.key || "Delete" == a.key) {
                    if (0 != this._usedLetters.length) if (this._usedLetters.pop().parentElement.parentElement.parentElement.classList.remove("used"), 0 == this._usedLetters.length) {
                        if (this._pointerDown = !1, this._node.classList.remove("dragging"),
                            this._removeLines(), this._listener) this._listener.onSubmitWord("")
                    } else $(".lineOrDot:last-of-type").remove(), this._listener && this._listener.updateWord(this._getWord(), !0)
                } else if (("Esc" == a.key || "Escape" == a.key) && 0 != this._usedLetters.length && (this._pointerDown = !1, this._node.classList.remove("dragging"), this._removeLines(), this._listener)) this._listener.onCancelWord()
        }
    };
    Board.prototype._onSpellerKeyDown = function (a) {
        if (this._node.getRootNode() != this._node && !(gPopups.isPopupOpen() || this._isRotating || a.metaKey || a.ctrlKey || a.altKey)) if (1 == a.key.toUpperCase().length && "A" <= a.key.toUpperCase() && "Z" >= a.key.toUpperCase()) { var b = document.activeElement; b && b.blur(); (b = this.$$(".letter .content").find(function (c) { return c.textContent[0] == a.key.toUpperCase() })) && this._onSpellerLetter(b, !0) } else if ("Enter" == a.key || "Return" == a.key) this.spellerEnter(); else if ("Backspace" == a.key ||
            "Delete" == a.key) this.spellerBackspace(); else if (("Esc" == a.key || "Escape" == a.key) && 0 != this._usedLetters.length && (this._removeLines(), this._listener)) this._listener.onCancelWord()
    };
    Board.prototype.spellerBackspace = function () { if (0 != this._usedLetters.length) if (this._usedLetters.pop().parentElement.parentElement.parentElement.classList.remove("used"), 0 == this._usedLetters.length) { if (this._removeLines(), this._listener) this._listener.onSubmitWord("") } else this._listener && this._listener.updateWord(this._getWord(), !0) }; Board.prototype.spellerEnter = function () { if (0 != this._usedLetters.length) { if (this._listener) this._listener.onSubmitWord(this._getWord()); this._removeLines() } };
    Board.prototype._startWord = function () { this._pointerDown = !0; $$(".lineOrDot").forEach(function (a) { return a.remove() }); this._node.classList.add("dragging"); document.body.classList.add("dragging") };
    Board.prototype._removeLines = function () { this._usedLetters.forEach(function (b) { return b.parentElement.parentElement.parentElement.classList.remove("used") }); this._usedLetters = []; var a = Array.from($$(".lineOrDot")); a.forEach(function (b) { return b.classList.add("fading") }); setTimeout(function () { return a.forEach(function (b) { return b.remove() }) }, 5E3) }; Board.prototype._getWord = function () { return this._usedLetters.map(function (a) { return a.textContent[0] }).join("") };
    Board.prototype._onLetter = function (a, b, c) {
        if (1 < this._usedLetters.length && a == this._usedLetters[this._usedLetters.length - 2]) this._usedLetters.pop().parentElement.parentElement.parentElement.classList.remove("used"), $(".lineOrDot:last-of-type").remove(), this._listener && this._listener.updateWord(this._getWord(), b); else if (!(this._usedLetters.includes(a) || 32 <= this._usedLetters.length)) if (0 == this._usedLetters.length) {
            if (!c) gAudio.onLetter(); this._usedLetters.push(a); a.parentElement.parentElement.parentElement.classList.add("used");
            this._listener && this._listener.updateWord(this._getWord(), b); b = document.createElement("div"); b.classList.add("lineOrDot", "dot"); c = a.getBoundingClientRect(); a = window.scrollX + c.left + (c.right - c.left) / 2; c = window.scrollY + c.top + (c.bottom - c.top) / 2; $("#lines").appendChild(b); b.style.left = a - b.offsetWidth / 2 + "px"; b.style.top = c - b.offsetHeight / 2 + "px"
        } else {
            var d = this._usedLetters.slice(-1)[0], e = this._letterCoords.get(a).row, f = this._letterCoords.get(a).col, g = this._letterCoords.get(d).row, h = this._letterCoords.get(d).col;
            if (!(1 < Math.abs(g - e) || 1 < Math.abs(h - f))) {
                if (!c) gAudio.onLetter(); c = 0; g == e ? h > f && (c = 180) : c = g > e ? h == f ? 270 : h > f ? 225 : 315 : h == f ? 90 : h > f ? 135 : 45; e = document.createElement("div"); f = a.getBoundingClientRect(); h = d.getBoundingClientRect(); e.classList.add("lineOrDot", "line"); d = window.scrollX + h.left + (h.right - h.left) / 2; g = window.scrollX + f.left + (f.right - f.left) / 2; h = window.scrollY + h.top + (h.bottom - h.top) / 2; f = window.scrollY + f.top + (f.bottom - f.top) / 2; e.style.top = "calc(" + 1 * h + "px - var(--height) / 2)"; e.style.left = "calc(" + 1 * d +
                    "px)"; e.style.width = "calc(" + Math.sqrt(Math.pow(g - d, 2) + Math.pow(f - h, 2)) + "px + 2 * var(--unit))"; e.style.transformOrigin = "left"; c += 360 * this._rotation / this._divisions; e.style.transform = "rotate(" + c + "deg)"; $("#lines").appendChild(e); this._usedLetters.push(a); a.parentElement.parentElement.parentElement.classList.add("used"); this._listener && this._listener.updateWord(this._getWord(), b)
            }
        }
    };
    Board.prototype._onSpellerLetter = function (a, b) { 32 <= this._usedLetters.length || (gAudio.onLetter(), this._usedLetters.push(a), a.parentElement.parentElement.parentElement.classList.add("used"), this._listener && this._listener.updateWord(this._getWord(), b), a.parentElement.parentElement.parentElement.classList.remove("used")) }; Board.prototype._spellerBackspace = function () { this._usedLetters.pop(); this._listener && this._listener.updateWord(this._getWord(), !1) }; var CopyToClipboard = { copy: function (a) { return "undefined" == typeof navigator.clipboard ? Promise.resolve(CopyToClipboard._copyCompat(a)) : navigator.clipboard.writeText(a) }, _copyCompat: function (a) { var b = document.createElement("textarea"); b.value = a; b.style.top = "0"; b.style.left = "0"; b.style.position = "fixed"; document.body.appendChild(b); b.focus(); b.select(); a = !1; try { a = document.execCommand("copy") } catch (c) { } b.remove(); return a } }; var Tutorial = function (a) { this._game = a; this._phase = 1 }; Tutorial.prototype.handleWord = function (a) { return 1 == this._phase && "play" == a ? (this._phase2(), "Nice!") : 2 == this._phase && "find" == a ? (this._phase3(), "Good find!") : 4 == this._phase && "tutorial" == a ? (this._phase5(), "You're ready!") : null };
    Tutorial.prototype.onKeyboardWord = function (a) { 1 == this._phase && "PLAY" == a ? $("#tutorialMsg").textContent = "Press Enter to submit a word" : 4 == this._phase && ("TUTORIAL".startsWith(a) ? $("#tutorialMsg").textContent = "Finish by spelling TUTORIAL!" : $("#tutorialMsg").textContent = "Stuck? Press Backspace") };
    Tutorial.prototype._phase2 = function () { var a = this; this._phase = 2; gtag("event", "tutorial_begin"); gtagSet("tutorial", "tutorialStarted"); setTimeout(function () { $("#tutorialMsg").classList.remove("blink"); $("#tutorialMsg").classList.add("blink"); $("#tutorialMsg").textContent = "You can spell in any direction. Spell FIND"; a._game.setPuzzle(tutorialPuzzles[1]) }, 1E3) };
    Tutorial.prototype._phase3 = function () { var a = this; isWide() ? this._phase4() : (this._phase = 3, $("#tutorialMsg").textContent = "Tap the word count above", $("#board").classList.add("disabled"), $("#wordCountArea").classList.add("blink"), $("#wordCountArea").addEventListener("click", function () { a._phase4() })) };
    Tutorial.prototype._phase4 = function () { var a = this; $("#wordCountArea").classList.remove("blink"); this._phase = 4; $("#tutorialMsg").classList.remove("blink"); setTimeout(function () { $("#board").classList.remove("disabled"); $("#tutorialMsg").textContent = "Finish by spelling TUTORIAL!"; $("#tutorialMsg").classList.add("blink"); a._game.setPuzzle(tutorialPuzzles[2]) }, 1E3) };
    Tutorial.prototype._phase5 = function () { gtag("event", "tutorial_complete"); this._phase = 5; $("#tutorialMsg").textContent = "Good luck!"; Store.setDidTutorial(); gtagSet("tutorial", Store.getTutorialValue()); setTimeout(function () { return api.reload("tutorial") }, 2E3) }; var GameUI = function (a) {
        var b = this; this._game = a; this._isSpeller = this._game.puzzle.special.speller; this._spellerExplanation = $("#messageAreaBox"); this._isSpeller || (this._spellerExplanation.remove(), this._spellerExplanation = null); window.addEventListener("resize", function () { return b.resizeBoard() }); window.addEventListener("gestureend", function (c) { b.resizeBoard() }); window.addEventListener("orientationchange", function () {
            setTimeout(function () { return b.resizeBoard() }); setTimeout(function () { return b.resizeBoard() },
                10); setTimeout(function () { return b.resizeBoard() }, 20); setTimeout(function () { return b.resizeBoard() }, 30); setTimeout(function () { return b.resizeBoard() }, 40); setTimeout(function () { return b.resizeBoard() }, 50); setTimeout(function () { return b.resizeBoard() }, 60); setTimeout(function () { return b.resizeBoard() }, 70)
        }); $("#wordDefiner").addEventListener("click", function (c) {
            var d = c.target.textContent.replaceAll("'", ""), e = b._game.puzzle.wiktDefinitions.get(d) || b._game.puzzle.definitions.get(d); setTimeout(function () {
                return DefinitionView.fromDefinition(d,
                    e).show()
            })
        }); this._pointerDownY = this._pointerDownX = 0; this._pointerMoveListener = null; this._isSpeller && $("#word").addEventListener("click", function (c) { return b._onSpellerWordClick(c) }); this._game.puzzle.clues && 0 < this._game.puzzle.clues.size && ($("#clueIcon").hidden = !1, $("#wordCountArea").classList.add("clues"))
    }; GameUI.prototype.getBoard = function () { return $("#board") }; GameUI.prototype.setUp = function (a) { 100 <= a && $("#wordCountArea").classList.add("smaller"); $("#maxWordCount").textContent = a };
    GameUI.prototype.resizeBoard = function () {
        document.documentElement.style.height = window.visualViewport && Util.isIOs ? window.innerHeight * window.visualViewport.scale + "px" : window.innerHeight + "px"; var a = this.getBoard(); $("header"); a.style.width = ""; a.style.height = ""; $("#game").classList.add("calcHeight"); var b = a.offsetHeight; $("#game").classList.remove("calcHeight"); var c = 1 / 1.2408, d = isWide() ? $("#game").offsetWidth : window.innerWidth; b = Math.floor(Math.min(b, d * c, 500 * c, "bee" == Config.game ? 300 : Infinity)); a.style.width =
            b + "px"; a.style.height = b + "px"; a.style.fontSize = Math.round(.13 * b) + "px"; document.body.style.setProperty("--unit", .014 * b + "px")
    }; GameUI.prototype.hideMessages = function () { $("#spacer").hidden = !1; $("#word").hidden = !0; $("#status").hidden = !0; $("#wordText").style.fontSize = "100%"; $("#wordDefiner").classList.remove("show"); $("#incorrectWord").classList.remove("show") };
    GameUI.prototype.showCurrentWord = function (a, b) {
        this.hideMessages(); $("#spacer").hidden = !0; var c = assertInstanceOf($("#word"), HTMLElement); c.hidden = !1; var d = assertInstanceOf($("#wordText"), HTMLElement); for (d.textContent = a; d.offsetWidth > c.offsetWidth;) { var e = parseInt(d.style.fontSize, 10); d.style.fontSize = e - 10 + "%" } b && this._spellerExplanation && (this._spellerExplanation.remove(), this._spellerExplanation = null); this._isSpeller && this._spellerExplanation && 4 <= a.length && !Store.getBoolean("showedBeeTapToSubmit") &&
            (this._showSpellerExplanation(), Store.setBoolean("showedBeeTapToSubmit", !0))
    }; GameUI.prototype.showStatus = function (a, b) { this.hideMessages(); $("#spacer").hidden = !0; this._spellerExplanation && (this._spellerExplanation.remove(), this._spellerExplanation = null); var c = $("#status"); c.classList.remove("secondary"); c.hidden = !1; c.classList.remove("fade-out"); c.classList.add("fade-out"); c = $("#statusText"); c.innerHTML = a; c.classList.toggle("small", !0 === b) };
    GameUI.prototype.setWordValid = function (a) { $("#word").classList.toggle("valid", a) }; GameUI.prototype.showWordDefiner = function (a) { for (var b = $jscomp.makeIterator(gContractions), c = b.next(); !c.done; c = b.next())if (c = c.value, c.replaceAll("'", "") == a) { a = c; break } $("#wordDefiner").textContent = a; setTimeout(function () { return $("#wordDefiner").classList.add("show") }) }; GameUI.prototype.showIncorrectWord = function (a) { $("#incorrectWordText").textContent = a; $("#incorrectWord").classList.add("show") };
    GameUI.prototype.animateGotWord = function () { $("#status").classList.add("secondary"); $("#wordCountArea").classList.remove("afterGotWord"); setTimeout(function () { return $("#wordCountArea").classList.add("afterGotWord") }) };
    GameUI.prototype.updateScoreVisuals = function (a) {
        $("#curWordCount").textContent = a.numWords; $("#prevWordCount").textContent = a.prevNumWords; a.prevNumWords < a.numWords && ($("#wordCount").classList.remove("updating", "animating"), $("#wordCount").classList.add("updating"), requestAnimationFrame(function () { $("#wordCount").classList.add("animating"); $("#curWordCount").addEventListener("transitionend", function () { $("#wordCount").classList.remove("updating", "animating") }) })); $("#curObscureWordCount").textContent =
            a.numOptionalWords; $("#obscureWordCount").classList.toggle("hide", 0 == a.numOptionalWords); $("#progress #filled").classList.toggle("filled0", 3 > a.tierLevel); $("#progress #filled").classList.toggle("filled1", 3 == a.tierLevel); $("#progress #filled").classList.toggle("filled2", 4 == a.tierLevel); $("#progress #filled").classList.toggle("filled3", 5 <= a.tierLevel); 1 < a.scorePercent && (100 > a.scorePercent ? $("#progress #filled").style.width = a.scorePercent + "%" : $("#progress #filled").style.width = "calc(100% + 2px)")
    };
    GameUI.prototype._onSpellerPointerDown = function (a) { var b = this; this._pointerMoveListener || (a.preventDefault(), this._pointerDownX = a.clientX, this._pointerDownY = a.clientY, this._pointerMoveListener = function (c) { return b._onSpellerPointerMove(c) }, document.addEventListener("pointermove", this._pointerMoveListener)) };
    GameUI.prototype._onSpellerPointerMove = function (a) { a.preventDefault(); var b = this._pointerDownX - a.clientX; 20 < b && b > Math.abs(this._pointerDownY - a.clientY) && (document.removeEventListener("pointermove", this._pointerMoveListener), this._pointerMoveListener = null, this._game.onUiBackspace()) }; GameUI.prototype._onSpellerPointerUp = function (a) { this._pointerMoveListener && (a.preventDefault(), document.removeEventListener("pointermove", this._pointerMoveListener), this._pointerMoveListener = null, this._game.onUiEnter()) };
    GameUI.prototype._onSpellerWordClick = function (a) { a.preventDefault(); this._game.onUiEnter() };
    GameUI.prototype._showSpellerExplanation = function () { var a = this, b = function () { if (a._spellerExplanation) { a._spellerExplanation.hidden = !1; var c = $("#messageArea").getBoundingClientRect().top; a._spellerExplanation.style.top = "calc(" + c + "px - 6rem - 1em)" } }; b(); window.addEventListener("resize", b); this._spellerExplanation.addEventListener("click", function (c) { window.removeEventListener("resize", b); a._spellerExplanation && (a._spellerExplanation.remove(), a._spellerExplanation = null) }) }; var WordOfTheDayDetail = function (a, b, c) { this.wordOfTheDay = a; this.found = b; this.credits = c }; WordOfTheDayDetail.prototype.dispatch = function () { window.dispatchEvent(new CustomEvent("wordOfTheDay", { detail: this })) };
    var Game = function (a, b, c, d, e) {
        var f = this; this.renderer = a; this.state = b; this.puzzle = c; this.solution = this._solution = d; if (this._isTutorial = e) this._tutorial = new Tutorial(this); this._puzzleSolver = e ? null : new PuzzleSolver(this.puzzle, d); this._hintingWord = this._timer = null; this._isTutorial || "number" != typeof this.puzzle.difficulty || this.renderer.showDifficulty(); this._prevScore = d.score; this._prevWordCount = d.words.size; this._prevOptionalWordCount = d.obscureWords.size; this._missingCenterLetterCount = 0; this.gameUi =
            new GameUI(this); this._wordScoreEmojis = new Map([[4, "\ud83d\udc4d"], [5, "\ud83e\udd18"], [6, "\ud83e\udd42"], [7, "\ud83e\udd73"], [8, "\ud83c\udf89"]]); this._wordEmojis = function () {
                for (var h = {
                    "\ud83e\udd23": "lmao lmfao rofl roflmao roflmfao lolol".split(" "), "\ud83d\ude02": ["laugh", "laughing", "laughter", "laughed", "laughs"], "\ud83d\ude03": "smile smiles smiled smiling happy happier happiest happily".split(" "), "\u2639": "frown frowns frowning sadder saddest sadly".split(" "), "\ud83d\ude38": "cats feline felines kitten kittens kitty kitties meow nyan".split(" "),
                    "\ud83d\udc36": "dogs doggy doggies canine canines woof bark collie snoot snoots bowwow bowwows".split(" "), "\ud83d\udc4d": "thumb thumbs approve approves approved approval approvals approver approving".split(" "), "\ud83d\ude1b": ["tongue", "tongues", "blep"], "\ud83d\udc30": "rabbit rabbits hare hares bunny bunnies".split(" "), "\ud83e\udd67": "pies pied pastry pastries bake baked baker bakers bakes baking".split(" "), "\ud83d\udeb2": "bicycle bicycles bicycler bicyclers bicycling cycle cycled cycles cycling cycler cyclers bike biker bikers bikes biked biking ride rider riders rides rode riding".split(" "),
                    "\ud83d\udcb2": "earn earner earners earns earned earning dollar dollars money moneys monied currency currencies cost costs price pricing prices priced sale sales sell sells selling sold seller sellers".split(" "), "\ud83d\udc26": "bird birds birder birders birded birding tern terns wren wrens gull gulls seagull seagulls raven ravens hawk hawks dove doves pigeon pigeons crow crows robin robins jays sparrow sparrows tits".split(" "), "\ud83c\udfb5": "note notes music musical sing sings singer singers sang sung song songs duet duets".split(" "),
                    "\ud83d\udc51": "crown crowns crowned crowning king kings queen queens royal royalty".split(" "), "\ud83d\udcc9": ["hodl", "hodls", "hodled", "hodling"], "\ud83e\uddc7": ["waffle", "waffles", "eggo", "eggos"], "\ud83e\udd5a": ["eggs", "omelet", "omelets", "omelette", "omelettes"], "\ud83e\udd81": ["lion", "lions", "lioness", "lionesses"], "\ud83d\udc3b": "bear bears teddy teddies cubs grizzly grizzlies".split(" "), "\ud83d\udc0d": "snake snakes python pythons anaconda anacondas asps cobra cobras slither slithers slithering slithered".split(" "),
                    "\ud83d\udd25": "fire fires fiery flame flames flamed flaming afire".split(" "), "\ud83d\udc2f": ["tiger", "tigers", "tigress", "tigresses"], "\ud83d\udc34": "horse horses horsey horseys horsie horsies filly fillies".split(" "), "\ud83e\udd84": ["unicorn", "unicorns"], "\ud83e\udd8c": "deer deers buck bucks reindeer reindeers stag stags".split(" "), "\u26bd": "ball balls soccer sport sports athlete athletics".split(" "), "\ud83c\udfae": "game games gaming gamed gamer gamers gamepad gamepads".split(" "), "\u2764\ufe0f": "heart hearts love loves loved loving lovingly romance romances romancing romanced romantic".split(" "),
                    "\ud83d\udfe5": ["square", "squares"], "\ud83c\udf6f": ["honey"], "\ud83d\udc1d": ["bees", "honeybee", "honeybees", "bumblebee", "bumblebees"]
                }, k = new Map, l = $jscomp.makeIterator(Object.getOwnPropertyNames(h)), m = l.next(); !m.done; m = l.next()) { m = m.value; for (var p = $jscomp.makeIterator(h[m]), q = p.next(); !q.done; q = p.next())k.set(q.value, m) } return k
            }(); var g = function () {
                f.gameUi.setUp(f.puzzle.words.length); f._setUpBoard(); f._isTutorial || gClues.init(f._solution, f.puzzle.clues, f._puzzleSolver.wordsToHint); if (!f._isTutorial) {
                    var h =
                        f._solution.isSolved(); f._timer = new PageTimer(f._solution, h)
                } f._updateScore(!0); window.addEventListener("updateScoreVisuals", function (k) { f._updateScoreVisuals() })
            }; Promise.all(readyPromises).then(function () { return gTryDebug(g) })
    };
    Game.prototype.onSubmitWord = function (a) {
        a = a.toLowerCase(); var b = this._tutorial && this._tutorial.handleWord(a); if (b) this.gameUi.showStatus(b), this._solution.add(a), this._updateScore(!1), isWide() && this._wordList.show(); else if (4 > a.length) 1 >= a.length ? this.gameUi.hideMessages() : (this.gameUi.showStatus("Too short"), this.gameUi.setWordValid(!1)); else {
            b = new SearchEvent(a); var c = ""; this._wordEmojis.has(a) ? c = this._wordEmojis.get(a) : !this._solution.has(a) && this.puzzle.words.includes(a) && (c = this._wordScoreEmojis.get(Math.min(a.length,
                8))); c && (c = '<span class="emoji"><span>' + c + "</span></span>"); var d = !1, e = !1; if (this._solution.has(a)) b.setWordResult(SearchEvent.WordResult.kAlreadyFound), this.puzzle.words.includes(a) ? (this.gameUi.showStatus("Already found" + c, !0), b.setWordType(SearchEvent.WordType.kWord)) : (this.gameUi.showStatus("Already found (bonus)" + c, !0), b.setWordType(SearchEvent.WordType.kOptionalWord)), this.gameUi.setWordValid(!1), d = !0; else if (this.puzzle.words.includes(a)) b.setWordResult(SearchEvent.WordResult.kFound), b.setWordType(SearchEvent.WordType.kWord),
                    0 == this._solution.words.size && (uetReportFindWord(), "squaredle" == Config.game && 8 <= a.length ? gAchievementsMgr.setIfIncomplete("longWordFirst", 1) : "bee" == Config.game && 7 == (new Set(Array.from(a))).size && gAchievementsMgr.setIfIncomplete("pangramFirst", 1)), this._solution.add(a), this._updateSquareHints(!1), "bee" == Config.game && 7 == (new Set(Array.from(a))).size ? this.gameUi.showStatus("Pangram! +" + Solution.scoreWord(a) + " points", !0) : (d = Solution.scoreWord(a), this.gameUi.showStatus("+" + d + " point" + (1 < d ? "s" : "") + c)),
                    this.gameUi.setWordValid(!0), this.gameUi.animateGotWord(), this._updateScore(!1), this._solution.score >= this.state.maxScore ? (gAudio.playComplete(), gAchievementsMgr.onComplete(this._solution)) : gAudio.playFoundWord(a), a == this._hintingWord && this._board.hintWord([]), isWide() && this._wordList.show(), gClues.onWordFound(), d = !0; else if (this.puzzle.optionalWords.includes(a)) b.setWordResult(SearchEvent.WordResult.kFound), b.setWordType(SearchEvent.WordType.kOptionalWord), this._solution.addObscure(a), "leet" == a ?
                        this.gameUi.showStatus("l33t (bonus!)" + c, !0) : this.gameUi.showStatus("Bonus word found!" + c, !0), this.gameUi.setWordValid(!0), this._updateScore(!1), 8 <= a.length && gAchievementsMgr.setIfIncomplete("longBonusWord", 1), gAudio.playBonus(), isWide() && this._wordList.show(), gClues.onBonusWordFound(), GlobalStore.showedBonusWordDialog() || this.puzzle.wordOfTheDay && a == this.puzzle.wordOfTheDay.term || ($("#bonusWordFound").hidden = !1, gPopups.show($("#bonusWordDialog")), GlobalStore.setShowedBonusWordDialog()), d = !0; else {
                    b.setWordResult(SearchEvent.WordResult.kNotAWord);
                    b.setWordType(SearchEvent.WordType.kNotAWord); c = "Not in list" + c; var f = !1; this.puzzle.special.speller && !a.includes(this.puzzle.board[1][1]) ? (this._missingCenterLetterCount++, 1 == this._missingCenterLetterCount || 3 == this._missingCenterLetterCount ? c = 'Missing "' + this.puzzle.board[1][1].toUpperCase() + '"' : 2 == this._missingCenterLetterCount || 4 == this._missingCenterLetterCount ? (c = "Must use center square", f = !0) : 5 <= this._missingCenterLetterCount && 15 >= this._missingCenterLetterCount ? (c = "Use the middle letter!;...seriously?;Don't make me do it;I'm warning you;Now look what you've done;Are you sorry?;It's OK.;Do you promise to behave?;I forgive you.;But you promised!;You broke my heart.".split(";")[this._missingCenterLetterCount -
                        5], f = 15 < c.length, 9 == this._missingCenterLetterCount ? this._board.spellerStartEgg() : 13 == this._missingCenterLetterCount && this._board.spellerStopEgg()) : 25 == this._missingCenterLetterCount ? (c = "...are you still there?", f = !0, this._missingCenterLetterCount = 0) : (c = "...", f = !0)) : gBannedGuesses.includes(a) ? (c = "Sensitive word", f = !0, GlobalStore.getBoolean("suppressSensitiveDialog") || Dialog.show("Sensitive word", "<p>You've entered a sensitive word. It won't count against your\n            accuracy, but you won't get points for it. It might be\n            age-inappropriate or overly offensive in common uses.<p>\n            <p>Some of these words have normal meanings but are well known\n            for their offensive uses. Others might be fine when uppercase, but\n            Squaredle only deals with lowercase words.</p>\n            ",
                            !1, !1, { label: "Don't show again", action: function () { return GlobalStore.setBoolean("suppressSensitiveDialog", !0) } })) : (gNames.has(a) && (c = "Not in list: proper noun", f = !0, GlobalStore.showedProperNounDialog() || (GlobalStore.setShowedProperNounDialog(), Dialog.show("Proper noun", '<p>Capitalized words (proper nouns and adjectives, like "Dane" or "Santa") are not included in Squaredle.</p><p>This is also how games like Scrabble work.</p><p>Simply put, there are far too many proper nouns to count!</p>'))), e = !0,
                                this._solution.addNonWord()); this.gameUi.showStatus(c, f); this.gameUi.setWordValid(!1); gAudio.playError()
                } d && !this._isTutorial && (0 < this.puzzle.definitions.size || 0 < this.puzzle.wiktDefinitions.size) ? this.gameUi.showWordDefiner(a) : e && this.gameUi.showIncorrectWord(a); this.puzzle.wordOfTheDay && a == this.puzzle.wordOfTheDay.term && (b.setWordOfTheDay(), (new WordOfTheDayDetail(this.puzzle.wordOfTheDay, !0, this.puzzle.credits)).dispatch()); b.log()
        }
    };
    Game.prototype.onCancelWord = function () { this.gameUi.showStatus("Cancel"); this.gameUi.setWordValid(!1); gtag("event", "cancel_search") }; Game.prototype.setPuzzle = function (a) { this.puzzle = a; this._board.renderPuzzle(this.puzzle.board) }; Game.prototype.hintRandomUnfoundWord = function () { for (var a = $jscomp.makeIterator(this._puzzleSolver.wordsToHint), b = a.next(); !b.done; b = a.next())if (b = b.value, !this._solution.has(b)) { this.hintWord(b); return } console.warn("No words left to hint") };
    Game.prototype.hintWord = function (a) { this._hintingWord && this._board.hintWord([]); this._hintingWord = a; this._board.hintWord(assert(this._puzzleSolver.getWordCoords(a))) };
    Game.prototype._updateSquareHints = function (a) {
        assert(!this._isTutorial); var b = this._puzzleSolver.getUnnecessaryCoords(); b = $jscomp.makeIterator(b); for (var c = b.next(); !c.done; c = b.next())this._board.markCoordUnnecessary(c.value, a); a = this._solution.getScoreTier(this.state.maxScore); if (!(3 > a.level)) {
            b = $jscomp.makeIterator(this._puzzleSolver.getCoordFirstCounts().entries()); for (c = b.next(); !c.done; c = b.next()) {
                var d = $jscomp.makeIterator(c.value); c = d.next().value; d = d.next().value; this._board.setCoordFirsts(c,
                    d)
            } if (!(4 > a.level)) { b = $jscomp.makeIterator(this._puzzleSolver.getCoordUses().entries()); for (c = b.next(); !c.done; c = b.next())c = c.value, this._board.setCoordUses(c[0], c[1]); 5 > a.level || this._wordList && this._wordList.enableHints() }
        }
    }; Game.prototype.onUiBackspace = function () { this._board.spellerBackspace() }; Game.prototype.onUiEnter = function () { this._board.spellerEnter() }; Game.prototype.updateWord = function (a, b) { this.gameUi.showCurrentWord(a, b || !1); this.gameUi.setWordValid(3 < a.length && "Cancel" != a); if (b && this._isTutorial) this._tutorial.onKeyboardWord(a) };
    Game.prototype.onRotate = function () { this.gameUi.hideMessages(); $("#game").classList.add("boardRotating") }; Game.prototype.onRotateEnd = function () { $("#game").classList.remove("boardRotating"); gAchievementsMgr.onRotate(); this._solution.onRotate() }; Game.prototype.showWordList = function () { this._wordList.show() }; Game.prototype.initWordList = function (a, b) { this._wordList = new WordList(this, this._solution, a, b, this._isTutorial); 5 <= this._solution.getScoreTier(this.state.maxScore).level && this._wordList.enableHints() };
    Game.prototype._updateScoreVisuals = function () { this.gameUi.updateScoreVisuals({ numWords: this._solution.words.size, prevNumWords: this._prevWordCount, numOptionalWords: this._solution.obscureWords.size, tierLevel: this._solution.getScoreTier(this.state.maxScore).level, scorePercent: this._solution.score / this.state.maxScore * 100 }) };
    Game.prototype._updateScore = function (a) {
        var b = this, c = Solution.getScoreThresholds(), d = this._solution.score / this.state.maxScore * 100, e = this._prevScore / this.state.maxScore * 100, f = this._solution.getScoreTier(this.state.maxScore); this._updateScoreVisuals(); this._prevWordCount < this._solution.words.size && (this._prevWordCount = this._solution.words.size); this._prevOptionalWordCount < this._solution.obscureWords.size && (this._prevOptionalWordCount = this._solution.obscureWords.size, this._prevOptionalWordCount == this.puzzle.optionalWords.length &&
            ($("#allBonusWordsCount").textContent = this.puzzle.optionalWords.length, gPopups.show($("#allBonusWordsFound")))); this._prevOptionalWordCount >= .8 * this.puzzle.optionalWords.length && $("#allBonusWordsFound .content img").setAttribute("src", "images/fist-pump.png"); 1 < d && !this._isTutorial && (this._solution.score >= this.state.maxScore && (a || d != e) && (this._board.animateCompletion(a), a || (setTimeout(function () { gPopups.isPopupOpen() || gTryDebug(function () { return b.renderer.renderShare() }) }, 1500), gtag("event", "gameComplete"),
                gtag("event", "conversion", { send_to: "AW-10976814591/0CIrCLLJ8tkDEP_Lk_Io" })), assert(this._timer), this._timer.finish()), a = c.find(function (g) { return d >= g }), c = c.find(function (g) { return e >= g }), a != c && ("Hints" == f.tierName && DateUtil.shouldAllowHints || setTimeout(function () { b.renderer.maybeShowExplainer("levelUp" + f.tierName) }, 500), gtag("event", "level_up", { level: f.level }))); this._prevScore != this._solution.score && gtag("event", "post_score", { score: this._solution.score, level: gPuzzleManager.puzzleKey }); this._prevScore =
                    this._solution.score
    }; Game.prototype._setUpBoard = function () { this._board = new Board(this.gameUi.getBoard(), this.puzzle.board, this); this._isTutorial || this._updateSquareHints(!0) }; var Leaderboards = function (a, b, c) {
        var d = this; this.state = a; this.puzzle = b; this.solution = c; var e = this._leaderboardScores = null; $("#leaderboardName").addEventListener("focus", function (k) { assertInstanceOf(k.currentTarget, HTMLInputElement).select() }); var f = function () {
            clearTimeout(e); var k = $("#leaderboardName").value; $("#leaderboardsNameError").hidden = !0; k != GlobalStore.getName() && (0 < k.length && 3 > k.length || 14 < k.length ? ($("#leaderboardsNameError").textContent = "Name must be between 3 and 14 letters long", $("#leaderboardsNameError").hidden =
                !1) : Array.from(k).some(function (l) { l = l.charCodeAt(0); return 33 > l || 168 < l && 224 > l || 238 < l }) ? ($("#leaderboardsNameError").textContent = "Invalid characters", $("#leaderboardsNameError").hidden = !1) : api.setName(k).then(function (l) { l.data.success ? (GlobalStore.setName(k), gTryDebug(function () { return d.show() })) : ($("#leaderboardsNameError").textContent = l.data.reason, $("#leaderboardsNameError").hidden = !1) }, function (l) { $("#leaderboardsNameError").textContent = "Network error"; $("#leaderboardsNameError").hidden = !1 }))
        };
        $("#leaderboardName").addEventListener("blur", f); a = $jscomp.makeIterator(["keyup", "change"]); for (b = a.next(); !b.done; b = a.next())b = b.value, $("#leaderboardName").addEventListener(b, function (k) { clearTimeout(e); var l = 2E3; k instanceof KeyboardEvent && ("Enter" == k.key || "Return" == k.key) && (l = 0); e = setTimeout(f, l) }); c = $$('input[type="radio"][name="sortRadio"]'); a = Store.getLeaderboardSort(); b = {}; c = $jscomp.makeIterator(c); for (var g = c.next(); !g.done; b = { $jscomp$loop$prop$radio$157: b.$jscomp$loop$prop$radio$157 }, g =
            c.next())g = g.value, b.$jscomp$loop$prop$radio$157 = assertInstanceOf(g, HTMLInputElement), b.$jscomp$loop$prop$radio$157.value == a && (b.$jscomp$loop$prop$radio$157.checked = !0), g.addEventListener("change", function (k) { return function (l) { k.$jscomp$loop$prop$radio$157.checked && (Store.setLeaderboardSort(k.$jscomp$loop$prop$radio$157.value), d._showPage()) } }(b)); $("#favoritesToggle").addEventListener("change", function () {
                var k = assertInstanceOf($("#favoritesToggle"), HTMLInputElement).checked; $("#leaderboards table").classList.toggle("favorites",
                    k); d._scrollYourRowIntoView(); ButtonClickEvent.log(k ? "favoritesOn" : "favoritesOff")
            }); $("#leaderboards table").addEventListener("click", function (k) {
                var l, m, p, q, t; return $jscomp.asyncExecutePromiseGeneratorProgram(function (n) {
                    if (1 == n.nextAddress) {
                        if (!k.target) return n.return(); l = assertInstanceOf(k.target, Element); if (("use" == l.tagName || "svg" == l.tagName) && !Store.isPremium()) return gPopups.show($("#premiumSignup")), n.return(); for (; l && "TR" != l.tagName;)l = l.parentElement; if (!l || "TR" != l.tagName) return n.return();
                        m = l.querySelector(".star"); if (!m) return n.return(); p = m.textContent == filledStar; q = parseInt(m.dataset.userId, 10); if (q == GlobalStore.getUserId()) return n.return(); if (!p) return ButtonClickEvent.log("favoritesAdd"), GlobalStore.addFavorite(q), GlobalStore.getEmail() && api.addFavorite(parseInt(q, 10)), m.textContent = filledStar, l.classList.add("favorite"), n.jumpTo(0); t = Array.from(l.querySelector("td:nth-of-type(3) span").childNodes).find(function (r) { return r.nodeType == Node.TEXT_NODE }).textContent; return n.yield(Util.confirm('Do you want to remove "' +
                            t + '" from favorites?', "Remove", "Cancel"), 3)
                    } if (!n.yieldResult) return ButtonClickEvent.log("favoritesRemoveCancel"), n.return(); ButtonClickEvent.log("favoritesRemoveOk"); GlobalStore.removeFavorite(q); GlobalStore.getEmail() && api.removeFavorite(parseInt(q, 10)); m.textContent = emptyStar; l.classList.remove("favorite"); n.jumpToEnd()
                })
            }); $("#compareWithFriendsLink").addEventListener("click", function (k) { k.preventDefault(); $("#invitedByFriend").hidden = !0; d._showInviteFriends() }); a = gRouter.getHashValues(); a.has("i") &&
                (a = parseInt(a.get("i"), 10)) && (GlobalStore.addFavorite(a), api.addFavorite(a), api.getUsername(a).then(function (k) { k && ($("#inviteFriends .username").textContent = k) }), $("#invitedByFriend").hidden = !1, this._showInviteFriends(), gRouter.removeHash(), gtag("event", "opened_invite_link")); a = gRouter.getQueryParam("i"); if (null !== a) {
                    try {
                        var h = parseInt(atob(a.replaceAll("_", "=")), 10); h && (GlobalStore.addFavorite(h), api.addFavorite(h), api.getUsername(h).then(function (k) {
                            k && ($("#inviteFriends .username").textContent =
                                k)
                        }), $("#invitedByFriend").hidden = !1, this._showInviteFriends(), gtag("event", "opened_invite_link"))
                    } catch (k) { console.warn(k) } gRouter.removeQueryParamWithoutRefresh("i")
                }
    };
    Leaderboards.prototype.show = function (a) {
        var b = this; GlobalStore.setHasOpenedLeaderboards(); var c = GlobalStore.getName(); c && 0 < c.length && (assertInstanceOf($("#leaderboardName"), HTMLInputElement).value = c); $("#leaderboardsNameError").hidden = !0; $("#leaderboardsLoading").hidden = !1; $("#leaderboards table").hidden = !0; $("#leaderboards #playerCount").hidden = !0; $("#leaderboards #yourRank").hidden = !0; gPopups.show($("#leaderboards")); a ? $('#leaderboards button[aria-controls="yourScoresTab"]').click() : $('#leaderboards button[aria-controls="globalScoresTab"]').click();
        this._refresh(); a = Store.getStats(); $("#yourPlayStreak").textContent = a.playStreak; $("#yourPlayStreakFire").hidden = 2 > a.playStreak; $("#yourSolveStreak").textContent = a.solveStreak; $("#yourSolveStreakFire").hidden = 2 > a.solveStreak; $("#yourPuzzleCount").textContent = a.numPuzzles; $("#yourPuzzleSolvedCount").textContent = a.numPuzzlesSolved; $("#yourPuzzleAvgScore").textContent = a.avgPct + "%"; var d = $("#yourScoresTab"); null != this.state.avgScore && (d.querySelector(".avgScorePct").textContent = Math.floor(this.state.avgScore /
            this.state.maxScore * 100).toString()); d.querySelector(".yourScore").textContent = this.solution.score.toString(); d.querySelector(".yourScorePct").textContent = Math.floor(this.solution.score / this.state.maxScore * 100).toString(); c = $jscomp.makeIterator(d.querySelectorAll(".maxScore")); for (var e = c.next(); !e.done; e = c.next())e.value.textContent = this.state.maxScore; var f = "N/A"; 0 < this.solution.words.size && (f = Math.floor(100 * this.solution.words.size / (this.solution.nonWordCount + this.solution.words.size)) + "%"); $$(".yourAccuracy").forEach(function (k) {
                k.textContent =
                    f
            }); $$(".maxScore").forEach(function (k) { return k.textContent = b.state.maxScore }); c = d.querySelector(".graph .columns"); d = d.querySelector(".graph .weekdays"); for (e = 0; 7 > e; e++) { var g = a.last7Days[e]; c.children[e].style.height = g.pct + "%"; 100 == g.pct && (c.children[e].textContent = filledStar); d.children[e].textContent = g.weekday; var h = "var(--form-background-color)"; 70 <= g.pct ? h = "#43a047" : 50 <= g.pct ? h = "var(--secondary)" : 25 <= g.pct && (h = "var(--primary)"); c.children[e].style.backgroundColor = h } $$("#yourScoresTab table span.maybeToday").forEach(function (k) {
                return k.textContent =
                    gPuzzleManager.isTodayPuzzle ? "today's" : "current"
            })
    };
    Leaderboards.prototype._refresh = function () {
        var a = this, b = Array.from(GlobalStore.getFavorites()), c = GlobalStore.getUserId(); c && b.push(c); api.getLeaderboardScores(this.puzzle.id, b).then(function (d) { var e = d.scores; $("#leaderboardsFetchError").hidden = !0; $("#leaderboardsFetchMaintenanceMode").hidden = !0; a._leaderboardScores = e; $("#leaderboards #playerCount").textContent = d.numPlayers.toLocaleString() + " players, " + (d.numCompleted.toLocaleString() + " finished"); Leaderboards.setPercentiles(d.percentiles); a._showPage() },
            function (d) { $("#leaderboardsFetchError").hidden = !1; d instanceof OverloadedServerError && ($("#leaderboardsFetchMaintenanceMode").hidden = !1) })
    };
    Leaderboards.prototype._showPage = function () {
        var a = this, b = this._leaderboardScores; assert(b); var c = $("#leaderboards table"), d = c.querySelector("tbody"); d.innerHTML = ""; var e = GlobalStore.getName(), f = GlobalStore.getFavorites(), g = GlobalStore.getUserId(), h = /(n[i1]gg)|(d[i1]ck)|(fuc?k)|(fck)|([s5]h[i1]t)/i, k = function (p, q, t) {
            var n = p.name; h.test(n) && n != e && (n = "********"); n != e && !t && a.puzzle.hasSimilarWord(n) && (n = "<spoiler>"); n = Util.encodeEntities(n); var r = "<tr" + (p.userId == g ? ' class="favorite yourScore"' : t ? ' class="favorite"' :
                "") + ">", u = ""; t ? (u = "favorite ", t = filledStar) : t = emptyStar; r += '<td class="' + u + ' star" tabindex="0" data-user-id="' + p.userId.toString() + ('">' + t + "</td>"); null != q && 500 <= q && (q = null); r = r + ("<td>" + (null != q ? q + 1 + "." : "---.") + '</td><td class="') + (("Anonymous" == n ? "anonymous" : "") + '"><span>' + ((p.isPremium ? '<svg><title>Squaredle Squared</title><use href="#icon-premium"></svg>' : "") + n + "</td>")); r += "<td>" + (p.score + " / " + p.wordCount + " / " + p.optionalWordCount) + "</td>"; return r + "</tr>"
        }, l = []; b = $jscomp.makeIterator(b); for (var m =
            b.next(); !m.done; m = b.next())m = m.value, l.push([m, f.has(m.userId)]); l.sort(function (p, q) {
                p = p[0]; q = q[0]; if (p.score != q.score) return q.score - p.score; if (p.wordCount != q.wordCount) return q.wordCount - p.wordCount; switch (Store.getLeaderboardSort()) { case "accuracy": if (p.nonWordCount != q.nonWordCount) return p.nonWordCount - q.nonWordCount; break; case "speed": if (p.ms != q.ms) return p.ms - q.ms; break; default: if (q.optionalWordCount != p.optionalWordCount) return q.optionalWordCount - p.optionalWordCount }return p.lastUpdatedWord <
                    q.lastUpdatedWord ? -1 : p.lastUpdatedWord > q.lastUpdatedWord ? 1 : 0
            }); f = []; for (b = 0; b < l.length; b++)(500 > b || l[b][1] || l[b][0].userId == g) && f.push(k(l[b][0], b, l[b][1])); d.innerHTML = f.join(""); $("#leaderboardsLoading").hidden = !0; c.hidden = !1; $("#leaderboards #playerCount").hidden = !1; c = Store.getLeaderboardSort(); d = Leaderboards.getPctileBy(this.solution, c); null != d ? (0 == d ? $("#pctRank").textContent = "a top player" : .01 > d ? $("#pctRank").textContent = "in the top " + (100 * d).toFixed(2) + "%" : $("#pctRank").textContent = "in the top " +
                Math.round(100 * d) + "%", $("#pctRankBy").textContent = c, $("#pctRankSuffix").textContent = .2 > d ? "!" : ".", $("#yourRank").hidden = !1) : $("#yourRank").hidden = !0; this._scrollYourRowIntoView()
    };
    Leaderboards.prototype._scrollYourRowIntoView = function () { var a = $("#leaderboards table"), b = a.querySelector("tbody"); if (b = Array.from(b.children).find(function (e) { return e.classList.contains("yourScore") })) { var c = assertInstanceOf(a.querySelector("thead"), HTMLElement).offsetHeight, d = assertInstanceOf(a.parentElement, HTMLElement).offsetHeight - c; a.parentElement.scrollTop = b.offsetTop - d / 3 - c / 2 } else a.parentElement.scrollTop = 0 };
    Leaderboards.prototype._showInviteFriends = function () { gPopups.show($("#inviteFriends")); var a = GlobalStore.getUserId(); (a ? Promise.resolve(a) : api.getUserId()).then(function (b) { $("#inviteFriendsWithUserId").hidden = !b; if (b) { var c = "squaredle.app/?i=" + btoa(Util.leftPad(b, " ", 7)).replaceAll("=", "_"); $("#inviteLink").textContent = c; $("#inviteLink").addEventListener("click", function () { CopyToClipboard.copy("https://" + c).then(function () { $("#inviteLinkCopied").hidden = !1 }) }) } }) };
    Leaderboards.setPercentiles = function (a) { Leaderboards.percentiles = a };
    Leaderboards.getPctileBy = function (a, b) {
        if (!Leaderboards.percentiles || !a.isSolved()) return null; if ("bonus words" == b) { var c = $jscomp.makeIterator(Leaderboards.percentiles.byBonusWords); for (b = c.next(); !b.done; b = c.next())if (b = b.value, a.obscureWords.size >= b.obscure_count) return b.pct } else if ("accuracy" == b) for (c = $jscomp.makeIterator(Leaderboards.percentiles.byAccuracy), b = c.next(); !b.done; b = c.next()) { if (b = b.value, a.nonWordCount <= b.non_word_count) return b.pct } else if ("speed" == b) for (c = $jscomp.makeIterator(Leaderboards.percentiles.bySpeed),
            b = c.next(); !b.done; b = c.next()) { if (b = b.value, a.ms && a.ms <= b.ms) return b.pct } else assertNotReached("Invalid leaderboard sort"); return null
    }; var Premium = function () {
        var a = this; this.signupSubType = null; this.inTrial = !1; gPopups.addListener(this); this._addedPaypalScript = !1; this._submittedFormTime = null; this._hadSubscription = !1; onReady(function () {
            return gTryDebug(function () {
                [$("#subscribeMonthly"), $("#subscribeAnnually"), $("#subscribeMonthly2"), $("#subscribeAnnually2")].forEach(function (h) {
                    h.addEventListener("click", function (k) {
                        switch (h.id) {
                            case "subscribeMonthly": case "subscribeMonthly2": a.signupSubType = Premium.SubscriptionType.kMonthly; break;
                            case "subscribeAnnually": case "subscribeAnnually2": a.signupSubType = Premium.SubscriptionType.kAnnually; break; default: assertNotReached()
                        }$("#signup-intro").hidden = !0; gUserManager.isSignedIn() ? a._showPaymentLink() : (k.preventDefault(), $("#signup-register").hidden = !1); $("#premiumSignup .content").scrollTop = 0
                    })
                }); $("#signup-payNow-backBtn").addEventListener("click", function (h) { h.preventDefault(); $("#signup-intro").hidden = !1; $("#signup-payNow").hidden = !0; $("#premiumSignup .content").scrollTop = 0 }); var b =
                    $("#subscriptionDisable button"), c = $("#subscriptionReenable button"), d = $("#subscriptionAutoRenewError"); b.addEventListener("click", function () {
                        var h; return $jscomp.asyncExecutePromiseGeneratorProgram(function (k) {
                            if (1 == k.nextAddress) return d.hidden = !0, k.yield(Util.confirm("<p>Disable auto-renew?</p>\n          <p><em>At the end of your " + (a.inTrial ? "free trial" : "billing cycle") + ", your subscription will\n          cancel automatically and you won't be charged" + (a.inTrial ? "" : " again") + ".</em></p>", a.inTrial ?
                                "Cancel trial" : "Disable auto-renew", "Never mind"), 2); h = k.yieldResult; if (!h) return k.return(); b.disabled = !0; b.textContent = "Disabling auto-renew..."; api.disableAutoRenew().then(function (l) { l ? ($("#subscriptionDisable").hidden = !0, $("#subscriptionReenable").hidden = !1) : alert("Unable to find subscription. It has likely already been canceled."); a._reloadSubscriptionDetails() }, function (l) {
                                    d.textContent = "\n            Unexpected error disabling auto-renew. Please check your network and\n            try again. If you still have trouble, please contact me at\n            hello@squaredle.app and I'll personally make sure you aren't\n            charged again.";
                                    d.hidden = !1
                                }).finally(function () { b.disabled = !1; b.textContent = a.inTrial ? "Cancel trial" : "Disable auto-renew" }); k.jumpToEnd()
                        })
                    }); c.addEventListener("click", function () {
                        return $jscomp.asyncExecutePromiseGeneratorProgram(function (h) {
                            d.hidden = !0; c.disabled = !0; c.textContent = "Enabling auto-renew..."; api.enableAutoRenew().then(function (k) { k ? ($("#subscriptionReenable").hidden = !0, $("#subscriptionDisable").hidden = !1) : alert("Unable to find subscription. It has likely already been canceled."); a._reloadSubscriptionDetails() },
                                function () { d.textContent = "\n            Unexpected error enabling auto-renew. Please check your network and\n            try again. If this is a server error, it will appear in my logs and\n            I'll look into it."; d.hidden = !1 }).finally(function () { c.disabled = !1; c.textContent = a.inTrial ? "Re-enable subscription" : "Enable auto-renew" }); h.jumpToEnd()
                        })
                    }); var e = $("#signup-payNow").querySelector("form"), f = $("#subscriptionDetailsForm").querySelector("form"), g = $("#subscriptionDetailsForm2").querySelector("form");
                "penguin.linux.test" == location.host ? (e.setAttribute("action", "/api/stripe_checkout.php"), f.setAttribute("action", "/api/manage_billing.php"), g.setAttribute("action", "/api/manage_billing.php")) : api.isAlpha ? (e.setAttribute("action", "/api/alpha/stripe_checkout.php"), f.setAttribute("action", "/api/alpha/manage_billing.php"), g.setAttribute("action", "/api/alpha/manage_billing.php")) : api.isBeta && (e.setAttribute("action", "/api/beta/stripe_checkout.php"), f.setAttribute("action", "/api/beta/manage_billing.php"),
                    g.setAttribute("action", "/api/beta/manage_billing.php")); e = gRouter.getHashValues(); e.has("stripeSuccess") ? a._showSuccess(!1) : e.has("stripeCancel") ? (gPopups.show($("#premiumSignup")), gRouter.removeHash()) : e.has("paypalSuccess") && a._showSuccess(!0); $("#signup-payNow form").addEventListener("submit", function () {
                        a._submittedFormTime = new Date; gtag("event", "premiumCheckout"); $$('#signup-payNow button[type="submit"]').forEach(function (h) { return h.setAttribute("disabled", "") }); setTimeout(function () {
                            $("#signup-payNow").hidden =
                                !0; $("#signup-waiting").hidden = !1; $("#premiumSignup .content").scrollTop = 0; $$('#signup-payNow button[type="submit"]').forEach(function (h) { return h.removeAttribute("disabled") })
                        }, 2E3)
                    }); f.addEventListener("submit", function () { a._submittedFormTime = new Date; gtag("event", "premiumManage"); f.querySelector('button[type="submit"]').setAttribute("disabled", ""); setTimeout(function () { f.querySelector('button[type="submit"]').removeAttribute("disabled") }, 2E3) }); g.addEventListener("submit", function () {
                        a._submittedFormTime =
                            new Date; gtag("event", "premiumManage"); g.querySelector('button[type="submit"]').setAttribute("disabled", ""); setTimeout(function () { g.querySelector('button[type="submit"]').removeAttribute("disabled") }, 2E3)
                    }); window.addEventListener("beforeunload", function (h) { a._submittedFormTime && 1E3 > (new Date).getTime() - a._submittedFormTime.getTime() && ($("#loadingScrim").hidden = !1) }); $("#signup-waiting-backBtn").addEventListener("click", function (h) {
                        h.preventDefault(); $("#signup-payNow").hidden = !1; $("#signup-waiting").hidden =
                            !0; $("#premiumSignup .content").scrollTop = 0
                    }); $("#premiumSignupReload").addEventListener("click", function (h) { h.preventDefault(); api.reload("premiumSignup") }); $("#subscriptionExpiredReload").addEventListener("click", function (h) { h.preventDefault(); gRouter.setHash("premiumSignup"); api.reload("subscriptionExpired") }); window.ApplePaySession ? ApplePaySession.canMakePayments() && ($("#appleGooglePay button span").textContent = "Apple Pay", $("#appleGooglePay").hidden = !1) : navigator.userAgent.includes("Android") &&
                        ($("#appleGooglePay button span").textContent = "Google Pay", $("#appleGooglePay").hidden = !1)
            })
        })
    }; Premium.prototype.manageBillingDetails = function () { gPopups.show($("#settings")) }; Premium.prototype.afterSignIn = function () { gPopups.show($("#premiumSignup")) }; Premium.prototype.onPopupShow = function (a) { "premiumSignup" == a && ($("#alreadyPremiumSignIn").hidden = gUserManager.isSignedIn(), this._setUpPaypal()) };
    Premium.prototype.onPopupClose = function (a) { "premiumSignup" == a && ($("#signup-intro").hidden = !1, $("#signup-register").hidden = !0, $("#signup-payNow").hidden = !0, $("#premiumSignup .content").scrollTop = 0) };
    Premium.prototype.setSubscription = function (a, b) {
        a && (this._hadSubscription = !0); $("#loadingSubscription").hidden = !0; $("#subscriptionDetails").hidden = !a; $("#subscriptionDetailsForm").hidden = !a; $("#subscriptionExpired").hidden = !this._hadSubscription || !!a; $("#subscriptionPaymentFailed").hidden = !a || !a.failedAttempts; if (a) {
            this.inTrial = a.inTrial; $("#subscriptionGift").hidden = "gift" != a.platform; $("#subscriptionPeriodEnd").hidden = !a.periodEnd; if (a.periodEnd) {
                $("#subscriptionRenewText").hidden = "auto_renew" !=
                    a.renewal; $("#subscriptionExpireText").hidden = "auto_renew" == a.renewal; b = ""; a.inTrial ? ($("#subscriptionRenewOrBegin").textContent = "begin", b = "trial") : "monthly" == a.plan ? b = "monthly" : "annually" == a.plan && (b = "annual"); b += " subscription"; $("#subscriptionOrTrial").textContent = b; "monthly" == a.plan ? $("#subscriptionPeriod").textContent = "monthly" : "annually" == a.plan && ($("#subscriptionPeriod").textContent = "annual"); $("#subscriptionTrialEnds").hidden = !a.inTrial || "auto_renew" != a.renewal; b = new Date(1E3 * a.periodEnd);
                var c = ""; try { c = (new Intl.DateTimeFormat(navigator.language, { year: "numeric", month: "long", day: "numeric" })).format(b) } catch (d) { c = b.toLocaleDateString() } $("#subscriptionEndDate").textContent = c
            } $("#subscriptionReenable").hidden = !a.periodEnd || "suspended" != a.renewal || "gift" == a.platform || "kofi" == a.platform; $("#subscriptionDisable").hidden = !a.periodEnd || "auto_renew" != a.renewal || "kofi" == a.platform; a.inTrial && ($("#subscriptionReenable button").textContent = "Re-enable subscription", $("#subscriptionDisable button").textContent =
                "Cancel trial"); $("#subscriptionDetailsForm").hidden = "gift" == a.platform; "kofi" == a.platform && $("#subscriptionDetailsForm form").addEventListener("submit", function (d) { d.preventDefault(); window.open("https://ko-fi.com/account") }); (gRouter.getHashValues().has("billing") || gRouter.getHashValues().has("manageBilling")) && $("#subscriptionDetailsForm").scrollIntoView({ behavior: "smooth" }); "gift" != a.platform && gRouter.getHashValues().has("manageBilling") && (gRouter.removeHash(), $("#subscriptionDetailsForm form").submit())
        } else Store.isPremium() &&
            (api.uploadDebugData({ issue: "Has premium locally but no subscription given by " + b }), $("#noSubscriptionFound .email").textContent = "hello@squaredle.app", $("#noSubscriptionFound").hidden = !1)
    };
    Premium.prototype._showPaymentLink = function () { $("#signup-payNow").hidden = !1; $("#monthlySummary").hidden = this.signupSubType != Premium.SubscriptionType.kMonthly; $("#annuallySummary").hidden = this.signupSubType != Premium.SubscriptionType.kAnnually; $("#paypalButtonContainer-monthly").hidden = this.signupSubType != Premium.SubscriptionType.kMonthly; $("#paypalButtonContainer-annually").hidden = this.signupSubType != Premium.SubscriptionType.kAnnually; $('[name="subType"]').value = this.signupSubType };
    Premium.prototype._showSuccess = function (a) {
        gtag("event", "premiumSuccess"); gPopups.show($("#premiumSuccess")); GlobalStore.getEmail() ? (Store.setInteger("premiumSignupTime", (new Date).getTime()), Store.setString("premiumSignupPlatform", a ? "PayPal" : "Stripe"), $("#premiumProcessing").hidden = !1, $("#premiumSuccess-refresh").addEventListener("click", function (b) { b.preventDefault(); api.reload("premiumSuccess-refresh") }), gUserManager.requestSyncPromise.then(function () {
            Store.isPremium() && ($("#premiumProcessing").hidden =
                !0, $("#premiumTrySettings").hidden = !1, $("#premiumSuccess-settings").addEventListener("click", function (b) { b.preventDefault(); gPopups.close(); gRouter.removeHash(); gPopups.show($("#settings")) }), $("#premiumSuccess-archives").addEventListener("click", function (b) { b.preventDefault(); gPopups.close(); gRouter.removeHash(); gArchive.show() }), $("#belowBoard").classList.add("noAd"), $$(".sidebar").forEach(function (b) { return b.hidden = !0 }))
        })) : ($("#premiumBrowser").hidden = !1, $("#premiumSuccess-signIn").addEventListener("click",
            function (b) { b.preventDefault(); gPopups.close(); gRouter.removeHash(); gPopups.show($("#signIn")) }))
    };
    Premium.prototype._setUpPaypal = function () {
        var a = this, b = document.createElement("script"), c = "penguin.linux.test" == location.host || ["/alpha", "/alpha/"].includes(location.pathname); b.src = "https://www.paypal.com/sdk/js?client-id=" + (c ? "AeCF11FJ3KjTWEPRE-P3I-Pf4Fm67VD8hfrNVFqV-VoV1HpSjzBDvMSuLXV9zu90CsS2jrA24IW9QyBZ" : "Ad-feSbWSwq2k4oujVTJYEdVdj6vYavAQTnKKJfRENphobn3FDtHfDqROGz5v5MVaa7g0uY0wqYe6nqg") + "&vault=true&intent=subscription&disable-funding=card,credit"; b.addEventListener("load", function (d) {
            d = Store.getBoolean("didTrial");
            var e = c ? d ? "P-9XH586674C012950SMK3B5EY" : "P-0YT16605XK532714EMKCZQ7Q" : d ? "P-5AA94480S90149648MMKMOYI" : "P-3ER18192JW656813FMMKMNBQ"; paypal.Buttons({ style: { layout: "vertical", color: "blue", shape: "rect", label: "subscribe", tagline: !1 }, createSubscription: function (g, h) { "pwa" == gRouter.getQueryParam("source") && gPopups.close(); gtag("event", "premiumCheckout"); return h.subscription.create({ plan_id: e, custom_id: GlobalStore.getUserId().toString() }) }, onApprove: function (g, h) { a._onPaypalSubscribe(g.subscriptionID, e) } }).render("#paypalButtonContainer-annually");
            var f = c ? d ? "P-1HC11681D4766183EMK3B5LA" : "P-26H07949PW915753JMKCZQVY" : d ? "P-9BC03193C4587160LMMKMOOI" : "P-9Y3295753S559732GMMKMMMY"; paypal.Buttons({ style: { layout: "vertical", color: "blue", shape: "rect", label: "subscribe", tagline: !1 }, createSubscription: function (g, h) { "pwa" == gRouter.getQueryParam("source") && gPopups.close(); gtag("event", "premiumCheckout"); return h.subscription.create({ plan_id: f, custom_id: GlobalStore.getUserId().toString() }) }, onApprove: function (g, h) { a._onPaypalSubscribe(g.subscriptionID, f) } }).render("#paypalButtonContainer-monthly")
        });
        document.head.appendChild(b)
    }; Premium.prototype._onPaypalSubscribe = function (a, b) { api.onPaypalSubscribe(a, b).then(function () { $("#premiumProcessing").hidden = !0; $("#premiumProcessed").hidden = !1 }); gRouter.setHash("paypalSuccess"); this._showSuccess(!0) }; Premium.prototype._reloadSubscriptionDetails = function () { var a = this; $("#loadingSubscription").hidden = !1; $("#subscriptionDetails").hidden = !0; api.getSubscription().then(function (b) { return onReady(function () { return a.setSubscription(b, "reloadSubscriptionDetails") }) }) };
    Premium.SubscriptionType = { kMonthly: "monthly", kAnnually: "annually" }; var gPremium = new Premium; var User = function (a, b, c) { this.email = a; this.displayName = b; this.id = c }, UserManager = function () {
        var a = this; GlobalStore.getEmail() && (this.requestSyncPromise = this.requestSync()); onReady(function () {
            return gTryDebug(function () {
                GlobalStore.getEmail() && a._setUserRegistered(); $("#safariWarning").hidden = !/^((?!chrome|android).)*safari/i.test(navigator.userAgent); $$(".registerBtn").forEach(function (b) {
                    return b.addEventListener("click", function (c) {
                        c.preventDefault(); null == GlobalStore.getEmail() ? gPopups.show($("#register")) :
                            gPopups.show($("#signedIn"))
                    })
                }); $$(".signInBtn").forEach(function (b) { return b.addEventListener("click", function (c) { c.preventDefault(); gPopups.show($("#signIn")) }) }); $("#registerSubmit").addEventListener("click", function (b) { return a._onRegisterSubmit(b) }); $("#signInSubmit").addEventListener("click", function (b) { return a._onSignInSubmit(b) }); $("#requestPasswordReset").addEventListener("click", function (b) { return a._onRequestPasswordReset(b) }); $("#resetPasswordSubmit").addEventListener("click", function (b) { return a._onResetPasswordSubmit(b) })
            })
        });
        $("#signOutBtn").addEventListener("click", function (b) {
            return $jscomp.asyncExecutePromiseGeneratorProgram(function (c) {
                if (1 == c.nextAddress) return c.yield(Util.confirm('<p><strong>Sign out?</strong></p>\n        <p>This will <strong class="primary">clear all local data</strong>,\n        including anything that might not have successfully synced.</p>', "Sign out", "Cancel"), 2); if (4 != c.nextAddress) return c.yieldResult ? c.yield(Util.confirm("<p><strong>Are you sure?</strong></p>\n          <p>Signing out will erase all local data, including your solutions.\n          Most of this should be synced but we can't guarantee it, especially on\n          restricted networks.</p>\n          <p>This cannot be undone.</p>",
                    "Wipe data", "Cancel"), 4) : c.jumpTo(0); c.yieldResult && (localStorage.clear(), api.reload("signOut")); c.jumpToEnd()
            })
        })
    }; UserManager.prototype.isSignedIn = function () { return !!GlobalStore.getEmail() }; UserManager.prototype.requestSync = function () { var a = this; return api.requestSync(gPuzzleManager.puzzleKey).then(function (b) { b.data && b.data.newState && (a._applySyncChanges(b.data.newState) && 0 == Store.getReloadCount() ? (Store.setReloadCount(1), api.reload("after sync")) : Store.setReloadCount(0)) }) };
    UserManager.prototype._onRegisterSubmit = function (a) {
        var b = this; a.preventDefault(); a = $("#registerStatus"); var c = assertInstanceOf($("#registerPassword"), HTMLInputElement).value, d = !1; 8 > c.length ? a.textContent = "Password should be 8+ characters." : 255 < c.length ? a.textContent = "Password is too long." : c != assertInstanceOf($("#registerConfirmPassword"), HTMLInputElement).value ? a.textContent = "Passwords do not match." : d = !0; d ? (a.hidden = !0, Util.submitEmail($("#registerEmail"), $("#registerSubmit"), a, $("#registerSuccess"),
            "Registering...", function (e) {
                var f = !1, g = document.querySelector("#emailSignUpToggle"); g && g.checked && (f = !0); return api.register(e, c, GlobalStore.getFavorites(), f, Settings.getGlobalSettings(), AchievementsModel.getGlobalAchievements()).then(function (h) {
                    if ("duplicateEmail" == h.data.error) throw $("#registerSignInInstead").hidden = !1, gtag("event", "register_failure", { error: "duplicateEmail" }), "Email already in use"; if ("alreadyRegistered" == h.data.error) throw $("#registerSignInInstead").hidden = !1, gtag("event",
                        "register_failure", { error: "alreadyRegistered" }), "You previous signed in on this device."; if ("invalidEmail" == h.data.error) throw $("#registerSignInInstead").hidden = !1, gtag("event", "register_failure", { error: "invalidEmail" }), "Check that your email address is correctly formatted."; if (h.data.error) throw gtag("event", "register_failure", { error: "unknown" }), "Unknown error."; assert(h.data.email); GlobalStore.setEmail(h.data.email); $("#registerForm").remove(); b._setUserRegistered(); gtag("event", "register"); gtag("set",
                            { registered: !0 })
                })
            }).then(function (e) { }, function (e) { })) : (a.classList.add("error"), a.hidden = !1)
    };
    UserManager.prototype._onSignInSubmit = function (a) {
        var b = this; a.preventDefault(); $("#requestPasswordResetSuccess").hidden = !0; a = $("#signInStatus"); var c = assertInstanceOf($("#signInPassword"), HTMLInputElement).value, d = !1; 8 > c.length ? a.textContent = "Password must be 8+ characters." : 255 < c.length ? a.textContent = "Password is too long." : d = !0; d ? (a.hidden = !0, Util.submitEmail($("#signInEmail"), $("#signInSubmit"), a, $("#signInSuccess"), "Signing in...", function (e) {
            return api.signIn(e, c, GlobalStore.getFavorites(),
                AchievementsModel.getGlobalAchievements()).then(function (f) {
                    if ("incorrectCredentials" == f.data.error) throw gtag("event", "signIn_failure", { error: "incorrectCredentials" }), "Incorrect email or password."; if (f.data.error) throw gtag("event", "signIn_failure", { error: "unknown" }), "Unknown error."; gTryDebug(function () {
                        GlobalStore.setEmail(e); GlobalStore.setUuid(f.data.uuid); var g = b._applySyncChanges(f.data); Store.needsTutorial() && (Store.setDidTutorial(), g = !0); $("#signInForm").remove(); b._setUserRegistered();
                        gtag("event", "sign_in"); gtag("set", { registered: !0 }); $("#signInReload").hidden = !g; ($("#signInFinished").hidden = g) && setTimeout(function () { return api.reload("afterSignIn") }, 1E3); $("#signInForgotPassword").hidden = !0
                    })
                })
        }).then(function (e) { }, function (e) { })) : (a.classList.add("error"), a.hidden = !1)
    };
    UserManager.prototype._onRequestPasswordReset = function (a) { a.preventDefault(); Util.submitEmail($("#signInEmail"), $("#signInSubmit"), $("#signInStatus"), $("#requestPasswordResetSuccess"), "Requesting password reset...", function (b) { assertInstanceOf($("#signInPassword"), HTMLInputElement).value = ""; $("#signInForgotPassword").hidden = !0; return api.requestPasswordReset(b) }).then(function (b) { }, function (b) { }) };
    UserManager.prototype._onResetPasswordSubmit = function (a) {
        a.preventDefault(); $("#resetPasswordFailure").hidden = !0; $("#resetPasswordSuccess").hidden = !0; var b = $("#resetPasswordStatus"); b.hidden = !1; b.classList.remove("error"); a = assertInstanceOf($("#resetPasswordPassword"), HTMLInputElement).value; var c = !1; 8 > a.length ? b.textContent = "Password should be 8+ characters." : 255 < a.length ? b.textContent = "Password is too long." : a != assertInstanceOf($("#resetPasswordConfirmPassword"), HTMLInputElement).value ? b.textContent =
            "Passwords do not match." : c = !0; c ? api.resetPassword(gRouter.getResetHash(), a).then(function (d) { b.hidden = !0; d.data && "expired" == d.data.error ? $("#resetPasswordFailure").hidden = !1 : ($("#resetPasswordForm").hidden = !0, $("#resetPasswordSuccess").hidden = !1, gRouter.removeHash()) }, function (d) { b.classList.add("error"); b.textContent = "Network or server error. Please try again."; throw d; }) : b.classList.add("error")
    };
    UserManager.prototype._setUserRegistered = function () {
        $("#accountBtn use").setAttribute("href", "#icon-account"); $("#accountBtn").dataset.button = "header-account"; $("#drawerSignIn").hidden = !0; $$(".registerSuggestion").forEach(function (a) { return a.hidden = !0 }); $$(".signedInStatus").forEach(function (a) { return a.hidden = !1 }); $$(".signedInEmail").forEach(function (a) { return a.textContent = GlobalStore.getEmail() }); $$('[name="uuid"]').forEach(function (a) { a.value = GlobalStore.getUuid() }); gPremium.signupSubType &&
            gPremium.afterSignIn(); gtagReconfig()
    };
    UserManager.prototype._applySyncChanges = function (a) {
        a.username && GlobalStore.setName(a.username); a.displayEmail && (GlobalStore.setEmail(a.displayEmail), $$(".signedInEmail").forEach(function (c) { return c.textContent = a.displayEmail })); a.favoriteUserIds && GlobalStore.setFavorites(a.favoriteUserIds); var b = !1; gBeta.useBetaPuzzle || (a.today && Store.getSolutionForKey(gPuzzleManager.getPuzzle(a.today.puzzleDate), a.today.puzzleDate).mergeWithApiSolution(a.today) && DateUtil.getTodayStr() == a.today.puzzleDate && (b = !0),
            a.yesterday && Store.getSolutionForKey(gPuzzleManager.getPuzzle(a.yesterday.puzzleDate), a.yesterday.puzzleDate).mergeWithApiSolution(a.yesterday) && DateUtil.getTodayStr() == a.yesterday.puzzleDate && (b = !0)); a.settings && gSettings.applySyncSettings(a.settings); a.achievements && (gAchievementsMgr ? gAchievementsMgr.syncAchievements(a.achievements) : gServerAchievements = a.achievements); a.pastStats && Store.mergePastStats(a.pastStats); gPremium.setSubscription(a.subscription, "applySyncChanges"); return b
    };
    var gUserManager = new UserManager; var Share = function (a) { this._ui = a; this.puzzle = a.puzzle; this.solution = a.solution; this._hasShared = !1; a.isTutorial || this._setUpSharePopup() };
    Share.prototype._getRankText = function () {
        if (!Leaderboards.percentiles) return ""; var a = [["bonus words", Leaderboards.getPctileBy(this.solution, "bonus words")], ["accuracy", Leaderboards.getPctileBy(this.solution, "accuracy")], ["speed", Leaderboards.getPctileBy(this.solution, "speed")]].sort(function (e, f) { return null == e[1] ? null == f[1] ? 0 : 1 : null == f[1] ? -1 : e[1] - f[1] })[0], b = ""; if (null == a[1] || .5 <= a[1]) return ""; b = 0 == a[1] ? "Top player" : .01 > a[1] ? "In the top " + (100 * a[1]).toFixed(2) + "%" : "In the top " + Math.round(100 * a[1]) +
            "%"; var c = "", d = ""; switch (a[0]) { case "bonus words": c = "bonus words"; d = "\ud83d\udcd6"; break; case "accuracy": c = "accuracy"; d = "\ud83c\udfaf"; break; case "speed": c = "speed"; d = "\u23f1\ufe0f"; break; default: assertNotReached("Unsupported stort") }return "accuracy" == a[0] && 0 == this.solution.nonWordCount && this.solution.words.size == this.puzzle.words.length ? "\n" + d + " Perfect accuracy" : "\n" + d + " " + b + " by " + c
    };
    Share.prototype._noHintsNoReveals = function () { return this.solution.words.size != this.puzzle.words.length || 0 != this.solution.revealsUsed || this.solution.everEnabledHints ? "" : "*" };
    Share.prototype._updateScoreText = function () {
        var a = this._noHintsNoReveals() + (this.solution.words.size + "/" + this.puzzle.words.length + " words") + (0 < this.solution.obscureWords.size ? " (+" + this.solution.obscureWords.size + " bonus " + (1 < this.solution.obscureWords.size ? "words" : "word") + ")" : ""), b = DateUtil.getTodayStr().slice(5) + (gPuzzleManager.isWeeklyPuzzle ? " (Weekly Subscriber Puzzle)" : ""), c = this._getStreakText(), d = '<a href="https://squaredle.app">https://squaredle.app</a> '; d = "waffle" == gPuzzleManager.puzzleKey ?
            '<a href="https://squaredle.app/waffle">https://squaredle.app/waffle</a>' : gPuzzleManager.isSpecialPuzzle ? '<a href="https://squaredle.app/?puzzle=' + (gPuzzleManager.puzzleKey + '">https://squaredle.app/?puzzle=') + (gPuzzleManager.puzzleKey + "</a>") : gBeta.useBetaPuzzle ? d + "(beta)" : d + b; d += ":\n" + a + this._getRankText() + c; var e = assertInstanceOf($("#shareContent"), HTMLElement); e.innerHTML = d; if (d = document.querySelector("#shareToTwitter")) {
                var f = new URL("https://www.twitter.com/intent/tweet"); f.searchParams.set("original_referrer",
                    "https://squaredle.app/"); f.searchParams.set("text", "#Squaredle " + b + "\n" + a + this._getRankText() + c + "\nsquaredle.app"); d.setAttribute("href", f.href)
            } if (a = $("#sh4re").querySelector("textarea")) a.remove(), e.hidden = !1
    };
    Share.prototype.renderShare = function () {
        var a = this; this._updateScoreText(); api.getPercentiles(this.puzzle.id).then(function (d) { Leaderboards.setPercentiles(d); d && a._updateScoreText() }); var b = Util.setIntervalImmediate(function () { var d = DateUtil.timeToNextBoard(); 0 == d.totalSeconds ? ($("#nextBoardCountdown").hidden = !0, $("#nextBoardRefresh").hidden = !1) : $("#boardTimer").textContent = Util.leftPad(d.hours, "0", 2) + ":" + (Util.leftPad(d.minutes, "0", 2) + ":") + Util.leftPad(d.seconds, "0", 2) }, 1E3), c = assertInstanceOf($("#shareContent"),
            HTMLElement); "undefined" == typeof c.dataset.configured && (c.dataset.configured = "true", gBeta.useBetaPuzzle || c.addEventListener("click", function () { var d = document.createElement("textarea"); d.setAttribute("rows", 3); d.style.width = c.offsetWidth + "px"; d.style.height = c.offsetHeight + "px"; d.value = c.textContent; c.parentElement.insertBefore(d, c); c.hidden = !0; d.focus(); d.select(); d.addEventListener("click", function () { d.select() }) })); this.solution.foundBWOTD() || gBeta.useBetaPuzzle ? ($("#shareForHint").hidden = !0, $("#sharedGetHint").hidden =
                !0) : this.solution.shared && ($("#sharedGetHint").hidden = !1); $("#sh4reButtons").hidden = gBeta.useBetaPuzzle; $("#shareButtonsHidden").hidden = !gBeta.useBetaPuzzle; gPopups.show($("#sh4re")); gPopups.addOnCloseHook(function () { clearInterval(b); $("#copyStatus").textContent = "" })
    };
    Share.prototype._setUpSharePopup = function () {
        var a = this; $("#shareContentCopyBtn").addEventListener("click", function () { gtag("event", "select_content", { content_type: a.solution.getScoreTier(a._ui.state.maxScore).tierName, level: a.solution.getScoreTier(a._ui.state.maxScore).tierName }); a._copyShareText(!0) }); navigator.userAgent.includes("Android") && navigator.userAgent.includes("Firefox/") && !navigator.userAgent.includes("Seamonkey/") || "function" != typeof navigator.share || ($("#shareContentShareBtn").hidden =
            !1, $("#shareContentCopyBtn").hidden = !0, $("#shareContentShareBtn").addEventListener("click", function () { gtag("event", "share", { content_type: a.solution.getScoreTier(a._ui.state.maxScore).tierName, level: a.solution.getScoreTier(a._ui.state.maxScore).tierName }); a._copyShareText(!1); navigator.share({ text: $("#shareContent").textContent }).catch(function (c) { }) })); this.solution.shared || gBeta.useBetaPuzzle || !gPuzzleManager.puzzle.wordOfTheDay || this.solution.foundBWOTD() || ($("#shareForHint").hidden = !1, $$("#sh4reButtons .actualSh4reBtn").forEach(function (c) {
                return c.addEventListener("click",
                    function () { return a._didShare() })
            })); $$("#sh4reButtons .actualSh4reBtn").forEach(function (c) { return c.addEventListener("click", function () { return gAchievementsMgr.onShare() }) }); var b = !1; window.fbAsyncInit = function () {
                b || (b = !0, document.querySelector("#fbButton") && (FB.init({ appId: "3213670032247868", autoLogAppEvents: !0, xfbml: !1, version: "v13.0" }), $("#fbButton").hidden = !1, $("#fbButton a").addEventListener("click", function (c) {
                    c.preventDefault(); a._copyShareText(!1); c = DateUtil.getTodayStr(); if ("waffle" == gPuzzleManager.puzzleKey) c =
                        "(waffle)"; else if ("sub50" == gPuzzleManager.puzzleKey) c = "(50 Subscribers)"; else if ("sub500" == gPuzzleManager.puzzleKey) c = "(500 Subscribers)"; else try { c = (new Intl.DateTimeFormat("default", { month: "short", day: "numeric" })).format(new Date(DateUtil.getTodayStr())) } catch (d) { } c = "Squaredle " + c + ": " + (a.solution.words.size + "/" + a.puzzle.words.length + " words"); 0 < a.solution.obscureWords.size && (c += " [+" + a.solution.obscureWords.size + " bonus " + (1 < a.solution.obscureWords.size ? "words" : "word") + "]"); a.puzzle.difficulty &&
                            (c += " (Difficulty: " + a.puzzle.difficulty + "/5)"); c += a._getStreakText(); FB.ui({ method: "share", href: "https://squaredle.app/" + ("waffle" == gPuzzleManager.puzzleKey ? "waffle" : gPuzzleManager.isSpecialPuzzle ? "?puzzle=" + gPuzzleManager.puzzleKey : ""), quote: c }, function (d) { }); api.incFbShareCount()
                }), api.getFbShareCount().then(function (c) { $("#fbCount").hidden = !1; var d = c.toString(); 1E3 <= c && (d = (c / 1E3).toFixed(1) + "K"); $("#fbCount").textContent = d })))
            }; "undefined" != typeof FB && "undefined" != typeof FB.ui && setTimeout(window.fbAsyncInit);
        $("#sh4re .regularPuzzle").hidden = !gPuzzleManager.isTodayPuzzle; $("#sh4re .specialPuzzle").hidden = !gPuzzleManager.isSpecialPuzzle; $("#sh4re .notTodayPuzzle").hidden = gPuzzleManager.isTodayPuzzle; gPuzzleManager.isSpecialPuzzle && ($("#sub500MakingOf").hidden = "sub500" != gPuzzleManager.puzzleKey); gPuzzleManager.isTodayPuzzle || $("#sharePlayToday").addEventListener("click", function () { gPuzzleManager.playTodayPuzzle() }); "2022/09/13" == gPuzzleManager.puzzleKey && ($("#sharePolygonle").hidden = !1); if ("2022/10/03" ==
            gPuzzleManager.puzzleKey || "2022/10/04" == gPuzzleManager.puzzleKey) $("#shareWWWHunt").hidden = !1; $("#shareArchives").addEventListener("click", function () { Store.isPremium() ? gArchive.show() : gPopups.show($("#premiumSignup")) }); $("#bwotdHintBtn").addEventListener("click", function (c) {
                a.solution.shared = !0; a.solution.saveAndPostScore(); c.preventDefault(); var d = Array.from(gPuzzleManager.puzzle.wordOfTheDay.term); for (c = 2; c < d.length; c++)(1 == c % 4 || 2 == c % 4 || 3 == c) && c < d.length - 2 && (d[c] = "*"); 6 > d.length && (d[3] = "*"); setTimeout(function () {
                    return $("#bwotdHint").textContent =
                        d.join("")
                })
            })
    }; Share.prototype._copyShareText = function (a) { CopyToClipboard.copy($("#shareContent").textContent).then(function (b) { $("#copyStatus").textContent = "Copied to clipboard!"; $("#copyStatus").classList.remove("error") }).catch(function (b) { if (a && ($("#copyStatus").textContent = "Long-press selection above to copy.", $("#copyStatus").classList.add("error"), window.getSelection)) { b = window.getSelection(); var c = document.createRange(); c.selectNodeContents($("#shareContent")); b.removeAllRanges(); b.addRange(c) } }) };
    Share.prototype._didShare = function () { var a = this; this._hasShared || (this._hasShared = !0, setTimeout(function () { a.solution.foundBWOTD() || ($("#shareForHint").hidden = !0, gPuzzleManager.puzzle.wordOfTheDay && ($("#sharedGetHint").hidden = !1)) }, 3E3)) };
    Share.prototype._getStreakText = function () { if (!gPuzzleManager.isTodayPuzzle) return ""; var a = Store.getStats(); return this.solution.words.size == this.puzzle.words.length && 1 < a.solveStreak ? "\n\ud83d\udd25 Solve streak: " + a.solveStreak : 1 < a.playStreak ? "\nPlay streak: " + a.playStreak : "" }; var Drawer = function () {
        var a = this; this.el = $("#drawer"); this._clickListener = this._onDocumentClick.bind(this); $("#drawerBtn").addEventListener("click", function () { setTimeout(function () { return a.open() }) }); $$("#drawer > a").forEach(function (b) { return b.addEventListener("click", function (c) { c.preventDefault(); a.close() }) }); $("#drawerClose").addEventListener("click", function (b) { a.close() }); $("#drawerArchive").addEventListener("click", function (b) { gTryDebug(function () { return gArchive.show() }) }); $("#drawerSpecial").addEventListener("click",
            function (b) { gPopups.show($("#specialPuzzles")) }); $("#drawerToday").addEventListener("click", function (b) { gPuzzleManager.playTodayPuzzle() })
    }; Drawer.prototype.open = function () { this.el.hidden = !1; this.el.scrollTop = 0; document.addEventListener("click", this._clickListener) }; Drawer.prototype.close = function () { this.el.hidden = !0; document.removeEventListener("click", this._clickListener) }; Drawer.prototype._onDocumentClick = function (a) { this.el.contains(a.target) || this.close() }; var gDrawer = new Drawer; var filledStar = "\u2605", emptyStar = "\u2606", startTime = new Date; function isWide() { return window.matchMedia("(min-width: 700px)").matches }
    var UI = function (a, b, c, d) {
        function e(n) { if (n.isTrusted) { var r = n.currentTarget.dataset.button; r || (r = n.currentTarget.getAttribute("aria-controls")); r || (r = n.currentTarget.id); r && ButtonClickEvent.log(r) } } var f = this; this.puzzle = a; this.solution = c; this.isTutorial = d; var g = new AchievementsMgr; this.state = new GameState(this, a, c, d); this.game = new Game(this, this.state, a, c, d); api.isAlpha && (window.theGame = this.game); this._wasWide = !1; this.isTutorial || (this._leaderboards = new Leaderboards(this.state, this.puzzle, this.solution));
        this._setUpDevOptions(); this._setUpExplainer(); this._share = new Share(this); this._showIntro(); this._onResize(); this.game.gameUi.resizeBoard(); window.addEventListener("resize", function () { return f._onResize() }); window.addEventListener("wordOfTheDay", function (n) { f._showWordOfTheDay(assertInstanceOf(n, CustomEvent)) }); window.addEventListener("keydown", function (n) { n = assertInstanceOf(n, KeyboardEvent); "Esc" != n.key && "Escape" != n.key || document.activeElement.blur() }); $("#title").setAttribute("href", location.pathname);
        $$(".aboutBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); gPopups.show($("#about")); $('button[aria-controls="aboutTab"]').click() }) }); a = {}; c = $jscomp.makeIterator(["credits", "privacy", "changelog"]); for (d = c.next(); !d.done; a = { $jscomp$loop$prop$popup$159: a.$jscomp$loop$prop$popup$159 }, d = c.next())a.$jscomp$loop$prop$popup$159 = d.value, $("#" + a.$jscomp$loop$prop$popup$159 + "Btn").addEventListener("click", function (n) {
            return function (r) {
                r.preventDefault(); gPopups.show($("#" +
                    n.$jscomp$loop$prop$popup$159))
            }
        }(a)); $$(".achievementsBtn").forEach(function (n) { return n.addEventListener("click", function (r) { g.show() }) }); $$(".tabs").forEach(function (n) {
            for (var r = {}, u = $jscomp.makeIterator(n.querySelectorAll('button[role="tab"]')), v = u.next(); !v.done; r = { $jscomp$loop$prop$button$161: r.$jscomp$loop$prop$button$161 }, v = u.next())r.$jscomp$loop$prop$button$161 = v.value, r.$jscomp$loop$prop$button$161.addEventListener("click", function (y) {
                return function (w) {
                    w.preventDefault(); w = $jscomp.makeIterator(n.querySelectorAll("button"));
                    for (var x = w.next(); !x.done; x = w.next())x = x.value, x.setAttribute("aria-selected", y.$jscomp$loop$prop$button$161 == x), x.setAttribute("tab-index", y.$jscomp$loop$prop$button$161 == x ? -1 : 0); w = $jscomp.makeIterator(n.querySelectorAll('[role="tabpanel"]')); for (x = w.next(); !x.done; x = w.next())x = x.value, x.hidden = y.$jscomp$loop$prop$button$161.getAttribute("aria-controls") != x.id, x.scrollTop = 0
                }
            }(r))
        }); var h = "", k = $("#feedbackEmail"); $("#submitAnonymously").addEventListener("change", function (n) {
            n.currentTarget.checked ?
                (h = k.value, k.value = "", k.disabled = !0, k.placeholder = "(Anonymous)") : (k.value = h, k.disabled = !1, k.placeholder = "Email address (for a response)")
        }); $("#feedbackForm").addEventListener("submit", function (n) {
            n.preventDefault(); var r = $("#submitFeedback"); $$(".feedbackResult").forEach(function (v) { return v.hidden = !0 }); var u = assertInstanceOf($("#comments"), HTMLTextAreaElement); n = u.value.trim(); 4 > n.length || 5E3 < n.length ? ($("#feedbackError").hidden = !1, $("#feedbackError").textContent = "Please enter some feedback (up to 5k characters).",
                $("#feedbackError").scrollIntoView({ behavior: "smooth" })) : (h = k.value, 0 < h.length && (255 < h.length || !h.match(/^[^@]+@[^@]+\.[^@]+$/)) ? ($("#feedbackError").hidden = !1, $("#feedbackError").textContent = "Please enter a valid email address (or leave blank).", $("#feedbackError").scrollIntoView({ behavior: "smooth" })) : (r.disabled = !0, $("#feedbackSubmitting").hidden = !1, api.sendFeedback(n, h, $("#submitAnonymously").checked).then(function (v) {
                    $("#feedbackSubmitting").hidden = !0; v.data ? ("invalidEmail" == v.data.error ? $("#feedbackServerError").textContent =
                        "Please enter a valid email address (or leave blank)." : $("#feedbackServerError").textContent = "Unknown error.", $("#feedbackServerError").hidden = !1, $("#feedbackServerError").scrollIntoView({ behavior: "smooth" })) : (u.value = "", k.value = "", $("#feedbackSubmitted").hidden = !1, $("#feedbackSubmitted").scrollIntoView({ behavior: "smooth" }))
                }, function (v) { $("#feedbackSubmitting").hidden = !0; $("#feedbackServerError").textContent = "Network or server error. Please try again."; $("#feedbackServerError").hidden = !1; $("#feedbackServerError").scrollIntoView({ behavior: "smooth" }) }).finally(function () {
                    r.disabled =
                        !1
                })))
        }); GlobalStore.analyticsOptedOut() && ($("#analyticsOptedOut").hidden = !1); $$(".contributeBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); gPopups.show($("#contribute")) }) }); $$(".sh4reBtn").concat([$("#globalIcon"), $("#globalBox")]).forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); "progressArea" == r.currentTarget.id && ButtonClickEvent.log("progressBar"); gTryDebug(function () { return f.renderShare() }) }) }); $$(".leaderboardsBtn").forEach(function (n) {
            return n.addEventListener("click",
                function (r) { r.preventDefault(); r.stopPropagation(); gTryDebug(function () { return f.showLeaderboards() }) })
        }); b ? this.game.initWordList(b, assert(Store.getSolutionForYesterday(b))) : this.game.initWordList(null, null); $$(".wordListBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); gTryDebug(function () { f.game.showWordList(); $('.tabs button[aria-controls="wordsTodayTab"]').click() }) }) }); Store.needsTutorial() && $$(".skipTutorial").forEach(function (n) {
            return n.addEventListener("click",
                function (r) {
                    return $jscomp.asyncExecutePromiseGeneratorProgram(function (u) {
                        if (1 == u.nextAddress) return r.preventDefault(), gtag("event", "tutorial_skip"), u.yield(Util.confirm("<p>Are you sure you want to skip the tutorial?</p><p>You should know:</p><ul>  <li>You can swipe in any direction</li>" + (isWide() ? "  <li>On a keyboard, submit with Enter, delete with Backspace, or cancel with Esc</li>" : "  <li>Tap the word count to see your words and hints</li>") + "</ul>", "Got it, let's play!", "Resume tutorial"),
                            2); if (!u.yieldResult) return gtag("event", "tutorial_skip_cancel"), u.return(); gtag("event", "tutorial_skip_confirm"); Store.setSkippedTutorial(); api.reload("skipTutorial"); u.jumpToEnd()
                    })
                })
        }); $$(".refreshBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); api.reload("refresh: " + n.className) }) }); $$(".sendFeedbackBtn").forEach(function (n) {
            return n.addEventListener("click", function (r) {
                r.preventDefault(); gPopups.show($("#about")); $('button[aria-controls="feedbackTab"]').click();
                gAchievementsMgr.setIfIncomplete("feedback", 1)
            })
        }); $("#feedbackTabBtn").addEventListener("click", function () { gAchievementsMgr.setIfIncomplete("feedback", 1) }); $$(".premiumBtn").forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); gPopups.show($("#premiumSignup")); $("#premiumSignup .content").scrollTop = 0 }) }); $("#aboutBonusWords").addEventListener("click", function (n) {
            n.preventDefault(); $("#bonusWordDialog").classList.remove("delayClose"); gPopups.show($("#bonusWordDialog"));
            GlobalStore.setShowedBonusWordDialog()
        }); if (!Store.needsTutorial()) { var l = function () { gPopups.isPopupOpen() ? gPopups.addOnCloseHook(function () { return setTimeout(l, 2E3) }) : gPopups.show($("#nextBoardAvailable")) }; DateUtil.getSecondsToNextBoardFromServer().then(function (n) { n = Math.max(0, 1E3 * n); 0 < n ? setTimeout(l, n + 1) : gPuzzleManager.isTodayPuzzle && l() }) } $("#newBoardRefresh").addEventListener("click", function (n) { n.preventDefault(); gPuzzleManager.playTodayPuzzle() }); $$(".newPuzzleTimeWithPeriod").forEach(function (n) {
            return n.textContent =
                DateUtil.getNewPuzzleTimeStrWithPeriod()
        }); $$(".hintsAvailableTime").forEach(function (n) { return n.textContent = DateUtil.getHintsAvailableTimeStr() }); $("#hintsAvailableLater").hidden = gPuzzleManager.isWeeklyPuzzle; Store.needsTutorial() || GlobalStore.hasOpenedLeaderboards() || setTimeout(function () { var n = $("header .leaderboardsBtn"), r = $("header #leaderboardsBox"); n.classList.add("throb"); r.hidden = !1;[n, r].forEach(function (u) { u.addEventListener("click", function () { r.remove(); n.classList.remove("throb") }) }) },
            12E4); var m = 0, p = new Date(0); $("#version").addEventListener("click", function () { 5E3 < (new Date).getTime() - p.getTime() && (m = 0, p = new Date); m++; 5 == m && (m = 0, p = new Date(0), $("#scrollX").textContent = window.scrollX, $("#scrollY").textContent = window.scrollY, gPopups.show($("#devOptions"))) }); $("#devGenDump").addEventListener("click", function () {
                $("#devDownloadDump").hidden = !0; $("#devDownloadDump").setAttribute("href", "data:application/json;charset=utf-8," + encodeURIComponent(JSON.stringify(Store.getDebugData())));
                $("#devDownloadDump").hidden = !1
            }); var q = assertInstanceOf($("#puzzleDateSelector"), HTMLInputElement); q.value = DateUtil.getTodayStr().replaceAll("/", "-"); var t = -1; q.addEventListener("change", function () { "" != q.value && (clearTimeout(t), t = setTimeout(function () { var n = q.value, r = new URL(location.href); r.searchParams.set("devDate", n); api.setLocation(r, "puzzleDateSelector") }, 1E3)) }); Store.needsTutorial() || gBeta.useBetaPuzzle || Util.setIntervalImmediate(function () {
                api.getAvgScore(gPuzzleManager.puzzleKey).then(function (n) {
                    if (n !=
                        f.game.state.avgScore) {
                        f.game.state.avgScore = n; n = n / f.game.state.maxScore * 100; var r = assertInstanceOf($("#globalBox"), HTMLElement), u = assertInstanceOf($("#globalIcon"), Element); u.hidden = !1; $("#globalBox").classList.toggle("arrow-top-left", 50 >= n); $("#globalBox").classList.toggle("arrow-top-right", 50 < n); r.classList.contains("fade-out") || !Store.hasPlayedDays(2) || Store.hasPlayedDays(5) || setTimeout(function () {
                            r.hidden = !1; setTimeout(function () { return r.classList.add("fade-out") }, 2E3); setTimeout(function () {
                                return r.hidden =
                                    !0
                            }, 5E3)
                        }, 4E3); 50 >= n ? (r.style.left = "calc(" + n + "% - 2px", r.style.right = "unset") : (r.style.right = "calc(" + (100 - n) + "% - 2px", r.style.left = "unset"); u.style.left = "calc(" + n + "% - 0.5em)"
                    }
                })
            }, 9E5); $("#playWeekly").addEventListener("click", function (n) { Store.isPremium() || (n.preventDefault(), gPopups.show($("#premiumSignup"))) }); Array.from(document.querySelectorAll("a")).concat(Array.from(document.querySelectorAll("button"))).concat(Array.from(document.querySelectorAll("input"))).forEach(function (n) {
                n.addEventListener("click",
                    e)
            }); $$('button[aria-label="help"]').forEach(function (n) { return n.addEventListener("click", function (r) { r.preventDefault(); r = $("#" + n.getAttribute("aria-controls")); r.hidden = !r.hidden }) }); $$(".iOS").forEach(function (n) { return n.hidden = !Util.isIOs }); $$(".notIOS").forEach(function (n) { return n.hidden = Util.isIOs })
    };
    UI.prototype._onResize = function () { var a = this, b = isWide(), c = $("#wordList"); c.classList.toggle("popup", !b); gPopups.isPopupOpen(c) ? b && (gPopups.close(!1), c.hidden = !1) : c.hidden = !b; ($("#wordList h2").hidden = b) && !this._wasWide && onReady(function () { requestAnimationFrame(function () { return gTryDebug(function () { a.game.showWordList(); 700 == window.innerWidth && a.game.gameUi.resizeBoard() }) }) }); this._wasWide = b };
    UI.prototype.showDifficulty = function () { if (!location.href.includes("hideDifficulty")) { assert("number" == typeof this.puzzle.difficulty); setTimeout(function () { $("#difficultyAlert").hidden = !0 }, 6E3); $$(".difficultyNote").forEach(function (c) { return c.hidden = !1 }); $("#difficultyAlert").classList.add("fade-out"); for (var a = $jscomp.makeIterator($$(".difficultyStars")), b = a.next(); !b.done; b = a.next())Util.addStars(b.value, this.puzzle.difficulty) } }; UI.prototype.renderShare = function () { this._share.renderShare() };
    UI.prototype.showLeaderboards = function (a) { this._leaderboards && this._leaderboards.show(a) };
    UI.prototype.maybeShowExplainer = function (a) {
        if (!Store.isPermaClosed(a)) {
            var b = document.querySelector("#explainer"); if (b) {
                b.classList.remove("fadeIn"); b.hidden || (b.hidden = !0); b.dataset.explainerId = a; var c = ""; switch (a) {
                    case "test": c = "\n        <p>Test explainer.</p>\n        <p>Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,\n        consectetur, adipisci velit.</p>"; break; case "intro": c = "<p>"; this.puzzle.intro.title && (c += '<span class="emphasize">' + this.puzzle.intro.title + ":</span> ");
                        c += this.puzzle.intro.body + "</p>"; break; case "levelUpAdept": c = '\n          <p class="emphasize">Start Counts Unlocked</p>\n          <p>\n            Squares now\n            <span class="emphasize primary">COUNT</span> how many words\n            <span class="emphasize primary">START</span> with them (check the\n            bottom-left number).\n          </p>'; break; case "levelUpExpert": c = (this.puzzle.special.speller ? '<p class="emphasize">Letter Counts Unlocked</p>\n            <p>\n            Squares also\n            <span class="explainGrey">COUNT</span> how many times they\'re used\n            (check the bottom-right number).' :
                            '<p class="emphasize">Word Counts Unlocked</p>\n            <p>\n            Squares also\n            <span class="explainGrey">COUNT</span> how many remaining words\n            they\'re used in (check the bottom-right number).') + "</p>"; break; case "levelUpHints": c = '\n          <p><span class="emphasize">Hints Unlocked</span></p>\n          <p class="narrow">\n            Close this and tap the <strong>word count</strong> at the top to\n            enable hints.\n          </p>\n          <p class="wide">\n            You can now <strong>enable hints</strong> in the word list.\n          </p>';
                        break; case "levelUpComplete!": c = "\n          <p><span class=\"emphasize\">Complete!</span></p>\n          <p>\n            Congrats! You can still look for bonus words. And don't worry, your\n            leaderboard accuracy and speed ranks have already been recorded and\n            won't be affected anymore.\n          </p>"; break; default: assertNotReached("Explainer ID " + a + " not found")
                }b.querySelector("#explainerPermaClose").hidden = "intro" == a; b.querySelector("#explainerText").innerHTML = c; setTimeout(function () {
                    b.hidden =
                        !1; 0 == b.offsetHeight && console.warn("Offset height is 0"); b.classList.add("fadeIn")
                }, "levelUpComplete!" == a ? 2E3 : 0)
            }
        }
    };
    UI.prototype._setUpDevOptions = function () {
        var a = this; $("#restartTutorial").hidden = this.isTutorial; $("#restartTutorial").addEventListener("click", function (b) { b.preventDefault(); Store.setDidTutorial(!1); api.reload("restartTutorial") }); $("#removeTwoWordsBtn").addEventListener("click", function (b) {
            var c, d, e, f; return $jscomp.asyncExecutePromiseGeneratorProgram(function (g) {
                if (1 == g.nextAddress) return b.preventDefault(), c = Array.from(a.solution.words.keys()).slice(0, 2), 0 == c.length ? (alert("No words to remove"),
                    g.return()) : g.yield(Util.confirm('Really remove words: "' + c.join('" and "') + '"?', "OK", "Cancel"), 2); if (!g.yieldResult) return g.return(); d = $jscomp.makeIterator(c); for (e = d.next(); !e.done; e = d.next())f = e.value, a.solution.words.delete(f); Store.saveSolutionForCurPuzzle(a.solution); api.devSetSolution(a.solution.getApiSolution(gPuzzleManager.puzzleKey)).then(function () { return api.reload("removeTwoWords") }); g.jumpToEnd()
            })
        }); $("#resetSolutionBtn").addEventListener("click", function (b) {
            return $jscomp.asyncExecutePromiseGeneratorProgram(function (c) {
                if (1 ==
                    c.nextAddress) return b.preventDefault(), c.yield(Util.confirm("Really reset today's solution?", "OK", "Cancel"), 2); if (!c.yieldResult) return c.return(); Store.deleteSolutionForToday(); api.devDeleteSolutionForDay(gPuzzleManager.puzzleKey).then(function () { return api.reload("resetSolution") }); c.jumpToEnd()
            })
        }); document.querySelector("#showExplainerBtn") && ($("#showExplainerBtn").addEventListener("click", function (b) { b.preventDefault(); a.maybeShowExplainer("test"); gPopups.close() }), $("#resetExplainersBtn").addEventListener("click",
            function (b) { b.preventDefault(); Store.resetExplainers(); api.reload("resetExplainers") }), $("#resetMessagesBtn").addEventListener("click", function (b) { b.preventDefault(); Store.resetMessages(); api.reload("resetMessages") })); $("#devErrors").addEventListener("click", function () { $("#devErrors").select() })
    };
    UI.prototype._setUpExplainer = function () { var a = document.querySelector("#explainer"); a && ($("#explainerClose").addEventListener("click", function () { a.hidden = !0 }), $("#explainerPermaClose").addEventListener("click", function () { a.hidden = !0; var b = assert(a.dataset.explainerId); Store.setPermaClosed(b) })) }; UI.prototype._showIntro = function () { var a = this; this.puzzle.intro && setTimeout(function () { return a.maybeShowExplainer("intro") }, 4E3) };
    UI.prototype._showWordOfTheDay = function (a) {
        a = assertInstanceOf(a.detail, WordOfTheDayDetail); $("#foundWordOfTheDay").hidden = !1 === a.found || this.solution.isSolved(); var b = assertInstanceOf($("#wordOfTheDayTerm"), HTMLAnchorElement); b.textContent = a.wordOfTheDay.term; b.href = "https://en.wiktionary.org/wiki/" + a.wordOfTheDay.term + "#English"; $("#wordOfTheDayDefinition").innerHTML = a.wordOfTheDay.html(); $$("#wordOfTheDayDefinition a").forEach(function (c) { c.addEventListener("click", function () { return ButtonClickEvent.log("wordOfTheDay-link") }) });
        b = $("#wordOfTheDayCredits"); b.hidden = !1; a.credits.author && a.credits.sponsor ? b.textContent = "Thanks to " + a.credits.sponsor + " for creating and sponsoring\n        today's puzzle!" : a.credits.author ? b.textContent = "Today's puzzle was created by " + a.credits.author + "." : a.credits.sponsor ? b.textContent = "Thanks to " + a.credits.sponsor + " for sponsoring today's puzzle!" : b.hidden = !0; gPopups.show($("#wordOfTheDay"))
    };
    UI.prototype._screenshot = function () {
        $("#curWordCount").textContent = "0"; $("#obscureWordCount").classList.add("hide"); $("#betaWatermark").hidden = !0; $$("#board .letterContainer.unnecessary").forEach(function (a) { return a.classList.remove("unnecessary") }); $("#board .letters .board").classList.remove("primary"); $("#progress #filled").style.width = ""; $("#progress #filled").setAttribute("class", "filled0"); $("#globalIcon").hidden = !0; $("#timer").hidden = !1; gPageTimer.finish(); $("#timer").textContent = (new Date(gPuzzleManager.puzzleKey)).toLocaleString("default",
            { month: "short", day: "numeric", year: "numeric" }); $("#timer").style.fontSize = "2rem"; $("#choosePuzzleBtn").hidden = !0; "squaredle" == Config.game && $("#board .leftButton .boardButton use").setAttribute("href", "#icon-audio"); $$(".sidebar").forEach(function (a) { return a.hidden = !0 }); $("#belowBoard").classList.add("noAd")
    }; function showMessages(a, b) {
        function c() { if (!mayShowCookieBanner()) { var e = document.querySelector("#joinCommunity"); e && (gPopups.show(e), setTimeout(function () { return Store.setShowedJoinCommunity() }, 5E3)) } } if (!(1 < location.hash.length)) if (navigator.userAgent.includes("DuckDuckGo") && navigator.userAgent.includes("Android") && !Store.showedBrowserWarning()) Dialog.show("Unsupported browser", "<p>Unfortunately, Squaredle does not work well in DuckDuckGo.</p>\n      <p>DuckDuckGo does not report screen height correctly, so the page will\n      try to scroll when you swipe words.</p>\n      <p>Please try loading squaredle.app in any other browser. Sorry about\n      this!</p>\n      <p>If you are concerned about trackers, you can entirely disable\n      non-required cookies from the Privacy page at the bottom of the About\n      menu.",
            !1, !0), setTimeout(function () { return Store.setShowedBrowserWarning() }, 5E3); else if (a.message && !Store.needsTutorial()) $("#puzzleMessage #puzzleMessageTitle").textContent = a.message.title, $("#puzzleMessage #puzzleMessageBody").innerHTML = a.message.body, gPopups.show($("#puzzleMessage")); else {
                if (gPuzzleManager.isTodayPuzzle && !Store.needsTutorial()) {
                    var d = a = ""; GlobalStore.getEmail() || (d = $("#giveawayRegister").innerHTML); "2022/10/16" >= gTodayDateStr && (a = "\n        <h3>Squaredle's 3 Millionth Game</h3>\n        <p>Players have now enjoyed over 3 million games of Squaredle!</p>\n        <p>To celebrate, I'm giving away $1,000 worth of Squaredle Squared\n        memberships and commissioned puzzles.</p>\n        <p>Play the daily puzzle each day this week (Oct 10&mdash;16) to earn up\n        to 7 entries. " +
                        d + "</p>\n        <p>Thanks for playing, and good luck!</p>\n      ", $("#vpnWarning").hidden = !1); Dialog.show("Giveaway!", a, !1, !1, { label: "More info", action: function () { return gPopups.show($("#giveaway")) } }); !GlobalStore.getEmail() && ((a = document.querySelector("#dialog .registerBtn")) && a.addEventListener("click", function (e) { e.preventDefault(); gPopups.show($("#register")) }), a = document.querySelector("#giveawayRegister")) && (a.hidden = !1)
                } "waffle" == gPuzzleManager.puzzleKey ? Store.showedWaffleDialog() || (Store.setShowedWaffleDialog(),
                    Store.needsTutorial() ? gPopups.show($("#waffleTutorialMessage")) : gPopups.show($("#waffleMessage"))) : Store.needsTutorial() || ("bee" == Config.game ? Dialog.show("Private Beta", '<p><strong class="primary">Spell words</strong> from the given letters\n      (letters can repeat).</p>\n      <p>All words must include the <strong class="primary">center</strong>\n      letter.</p>\n      <p>At least one word uses all 7 letters\n      (a <strong class="primary">pangram</strong>)!</p>\n      <p><strong>Known issues:</strong></p>\n      <ul>\n        <li>Help text and other Squaredle references need updating</li>\n        <li>Audio settings mess up the UI</li>\n        <li>Backspace button is hard to tap without submitting word</li>\n        <li>Long-press delete button doesn\'t work</li>\n        <li>Limited Squaredle Squared integration</li>\n      </ul>\n      ',
                        !1, !1) : (setTimeout(function () { if ("squaredle" == Config.game && !(Store.isPremium() || gPopups.isPopupOpen() || Store.showedPremiumOnLaunch() || 4 > b || mayShowCookieBanner())) { var e = $("#premiumSignup"); e.classList.add("delayClose"); gPopups.show(e); setTimeout(function () { gtag("event", "show_premium_on_launch"); Store.setShowedPremiumOnLaunch() }, 5E3); e.classList.remove("delayClose") } }, 100), !gPopups.isPopupOpen() && !Store.showedJoinCommunity() && 2 <= b && c()))
            }
    }; var Router = function () { var a = this; this.onHashChange(); window.addEventListener("hashchange", function (b) { return a.onHashChange() }) }; Router.prototype.onHashChange = function () { var a = this.getHashValues(); a.has("resetHash") ? gPopups.show($("#resetPassword")) : a.has("privacy") ? gPopups.show($("#privacy")) : a.has("premiumSignup") ? gPopups.show($("#premiumSignup")) : a.has("settings") ? gPopups.show($("#settings")) : (a.has("billing") || a.has("manageBilling")) && gPremium.manageBillingDetails() };
    Router.prototype.removeHash = function () { gTryDebug(function () { "function" == typeof history.replaceState ? history.replaceState(null, "", location.pathname.replace(RegExp("^//*"), "/") + location.search) : location.hash = "#" }) }; Router.prototype.setHash = function (a) { gTryDebug(function () { "function" == typeof history.replaceState ? history.replaceState(null, "", location.pathname.replace(RegExp("^//*"), "/") + location.search + "#" + a) : location.hash = "#" + a }) }; Router.prototype.getQueryParam = function (a) { return gTryDebug(function () { return (new URL(location.href)).searchParams.get(a) }) };
    Router.prototype.pushQueryParam = function (a, b) { gTryDebug(function () { var c = new URL(location.href); c.searchParams.set(a, b); location.href = c.href }) }; Router.prototype.removeQueryParam = function (a) { gTryDebug(function () { var b = new URL(location.href); b.searchParams.delete(a); location.href = b.href }) }; Router.prototype.removeQueryParamWithoutRefresh = function (a) { gTryDebug(function () { var b = new URL(location.href); b.searchParams.delete(a); window.history.replaceState({}, "", b.href) }) };
    Router.prototype.updateQueryParams = function (a, b) { gTryDebug(function () { for (var c = new URL(location.href), d = $jscomp.makeIterator(Object.getOwnPropertyNames(a)), e = d.next(); !e.done; e = d.next())e = e.value, c.searchParams.set(e, a[e]); d = $jscomp.makeIterator(b); for (e = d.next(); !e.done; e = d.next())c.searchParams.delete(e.value); location.href = c.href }) };
    Router.prototype.getHashValues = function () { return location.hash.slice(1).split("&").reduce(function (a, b) { b = b.split("="); decodeURIComponent(b[0]); 1 == b.length ? a.set(b[0], !0) : a.set(b[0], decodeURIComponent(b[1])); return a }, new Map) }; Router.prototype.getResetHash = function () { return this.getHashValues().get("resetHash") }; var gRouter = new Router; function mayShowCookieBanner() { return 0 == getConsentCategories().size && !Store.needsTutorial() && 0 != cookiesRequireConsent() }
    onReady(function () {
        return gTryDebug(function () {
            setTimeout(function () { mayShowCookieBanner() && ($("#cookies").hidden = !1, $("#cookiesAcceptNecessary").addEventListener("click", function () { setConsentCategories(["functional=true", "performance=false", "targeting=false"]); $("#cookies").hidden = !0 }), $("#cookiesAccept").addEventListener("click", function () { setConsentCategories(["functional=true", "performance=true", "targeting=true"]); $("#cookies").hidden = !0 })) }, 2E3); var a = assertInstanceOf($("#cookiesPerformanceToggle"),
                HTMLInputElement), b = assertInstanceOf($("#cookiesTargetingToggle"), HTMLInputElement); $$(".cookiesBtn").forEach(function (c) { return c.addEventListener("click", function (d) { d.preventDefault(); $("#cookies").hidden = !0; d = getConsentCategories(); a.checked = 0 != d.get("performance"); b.checked = 0 != d.get("targeting"); $("#cookiesTargetingSection").hidden = gAds.canShowGdprDialog(); $("#gdprConsentSection").hidden = !gAds.canShowGdprDialog(); gPopups.show($("#cookieSettings")) }) }); $("#cookiesAcceptAll").addEventListener("click",
                    function () { setConsentCategories(["functional=true", "performance=true", "targeting=true"]); gPopups.close() }); $("#cookiesApplySettings").addEventListener("click", function () { setConsentCategories(["functional=true", "performance=" + a.checked, "targeting=" + b.checked]); gPopups.close() }); $("#gdprConsentSection button").addEventListener("click", function () { gAds.showGdprDialog() })
        })
    }); (function () {
        var a = new URL(location.protocol + "//" + location.host + location.pathname); if ("undefined" != typeof navigator.serviceWorker && "penguin.linux.test" != location.host) {
            navigator.serviceWorker.register(a + "service-worker.js"); var b = null, c = !1; window.addEventListener("beforeinstallprompt", function (d) { gPopups.isPopupOpen() || Store.suppressInstallPrompt() || 2 > Store.numDaysPlayed() || (d.preventDefault(), c || (b = d, gPopups.show($("#installPrompt")), c = !0)) }); $("#installBtn").addEventListener("click", function () {
                var d;
                return $jscomp.asyncExecutePromiseGeneratorProgram(function (e) { if (1 == e.nextAddress) return assert(null != b), Store.setSuppressInstallPrompt(), b.prompt(), gtag("event", "installInstall"), e.yield(b.userChoice, 2); d = e.yieldResult; "accepted" == d.outcome ? gtag("event", "installNativePromptAccepted") : gtag("event", "installNativePromptDismissed"); b = null; gPopups.isPopupOpen($("#installPrompt")) && gPopups.close(); e.jumpToEnd() })
            }); $("#installDontAskAgainBtn").addEventListener("click", function () {
                return $jscomp.asyncExecutePromiseGeneratorProgram(function (d) {
                    gtag("event",
                        "installDontAskAgain"); Store.setSuppressInstallPrompt(); gPopups.isPopupOpen($("#installPrompt")) && gPopups.close(); d.jumpToEnd()
                })
            })
        }
    })(); var Renderer = function () { }; Renderer.prototype.showDifficulty = function () { }; Renderer.prototype.renderShare = function () { }; Renderer.prototype.showLeaderboards = function (a) { }; Renderer.prototype.maybeShowExplainer = function (a) { }; var GameState = function (a, b, c, d) { this.renderer = a; this.puzzle = b; this.solution = c; this.isTutorial = d; this.avgScore = null; this.maxScore = this.puzzle.words.map(function (e) { return Solution.scoreWord(e) }).reduce(function (e, f) { return e + f }, 0) };
    gTryDebug(function () {
        function a(f, g) { gtag("event", "unsupported_browser", { reason: f }); $("#unsupportedBrowserReason").textContent = g; onReady(function () { return setTimeout(function () { gPopups.show($("#unsupportedBrowser")); try { gTryDebug(function () { throw Error("Browser is outdated: " + f); }) } catch (h) { } }, 500) }) } function b() {
            var f, g, h, k, l, m, p, q, t, n, r, u, v, y; return $jscomp.asyncExecutePromiseGeneratorProgram(function (w) {
                switch (w.nextAddress) {
                    case 1: $("#loadingText").style.opacity = 1; f = new URL(location.href); if (!gBeta.isBeta) {
                        w.jumpTo(2);
                        break
                    } if (gBeta.useBetaPuzzle) return $("#loading").hidden = !1, w.yield(gBeta.getBetaPuzzle(), 7); gBeta.getBetaPuzzle(); g = f.searchParams.get("devDate"); if (!g) { w.jumpTo(2); break } return w.yield(api.devGetPuzzleForDay(g.replace("-", "/").replace("-", "/")), 6); case 6: (h = w.yieldResult) ? gPuzzleManager.setPuzzlesForDev(h.todayDateStr, h.yesterdayDateStr, { puzzleStats: h.puzzleStats, puzzles: h.puzzles }) : (alert("No puzzle found for " + g), gPopups.show($("#devOptions"))); w.jumpTo(2); break; case 7: $("#loading").hidden = !0;
                    case 2: if (gBeta.useBetaPuzzle || !f.searchParams.get("date")) { w.jumpTo(8); break } if (!Store.isPremium()) { gPopups.show($("#premiumSignup")); w.jumpTo(8); break } k = f.searchParams.get("date").replace("-", "/").replace("-", "/"); return w.yield(api.getPuzzleForDay(k), 10); case 10: (l = w.yieldResult) ? (gPuzzleManager.setArchivePuzzle(k, l.puzzle), l.solution && Store.getSolutionForKey(gPuzzleManager.puzzle, k, !1).mergeWithApiSolution(l.solution), $("#betaWatermark").hidden = !1, $("#betaWatermark").textContent = k) : alert("Couldn't find puzzle for date \"" +
                        k + "\".\nLoading today's puzzle instead."); case 8: if (gBeta.useBetaPuzzle || !f.searchParams.get("puzzle")) { w.jumpTo(11); break } m = assert(f.searchParams.get("puzzle")); if ("weekly" == m && Store.isPremium()) return w.yield(api.getPuzzlesForWeek(gTodayDateStr), 16); if ("weekly" == m) { alert("Weekly puzzles are only available for Squaredle Squared members."); gRouter.removeQueryParam("puzzle"); w.jumpTo(11); break } return w.yield(api.getPuzzleByKey(m), 15); case 15: (p = w.yieldResult) ? (gPuzzleManager.setSpecialPuzzle(m, p.puzzle),
                            p.solution && Store.getSolutionForKey(gPuzzleManager.puzzle, m, !1).mergeWithApiSolution(p.solution)) : alert("Couldn't find requested puzzle. Playing today's puzzle instead."); w.jumpTo(11); break; case 16: if ((q = w.yieldResult) && q.puzzles) {
                                if (gPuzzleManager.setWeeklyPuzzles(q.puzzles), $('#wordList button[aria-controls="wordsTodayTab"] .notExtraNarrow').textContent = "This week", $('#wordList button[aria-controls="wordsYesterdayTab"] .notExtraNarrow').textContent = "Last week", $('#wordList button[aria-controls="wordsPastTab"]').hidden =
                                    !0, $("#yesterdayLinks").hidden = !0, $("#yesterdayReveal").hidden = !1, q.solutions) for (t = $jscomp.makeIterator(Object.getOwnPropertyNames(q.solutions)), n = t.next(); !n.done; n = t.next())r = n.value, q.solutions[r] && Store.getSolutionForKey(gPuzzleManager.getPuzzle(r), r, !1).mergeWithApiSolution(q.solutions[r])
                            } else alert("Couldn't find weekly puzzle. Playing today's puzzle instead."), gRouter.removeQueryParam("puzzle"); case 11: u = gPuzzleManager.puzzle, v = gPuzzleManager.getPuzzle(DateUtil.getYesterdayStr() + (gPuzzleManager.isWeeklyPuzzle ?
                                "-weekly" : "")), Store.needsTutorial() && (u = tutorialPuzzles[0], document.body.classList.add("tutorial")), y = Store.needsTutorial() ? new Solution(u, new Set, new Set, [], !0) : Store.getSolutionForCurPuzzle(u), !Store.needsTutorial() && (1 < y.words.size || 1 < y.obscureWords.size) && api.setInitialSolution(y.getSyncObject()), gTryDebug(function () { return new UI(u, v, y, Store.needsTutorial()) }), onReady(function () { return gTryDebug(function () { showMessages(u, c); $("#outerContainer").classList.remove("loading") }) }), w.jumpToEnd()
                }
            })
        }
        if ("undefined" != typeof gPuzzleManager) {
            Store.init(); var c = Store.numDaysPlayed(); "undefined" == typeof PointerEvent && a("no_pointer_events", "Browser doesn't support PointerEvent."); onReady(function () { return gTryDebug(function () { return b() }) }); var d = new Date(0), e = function (f) { domReady.then(function () { var g = DateUtil.now(); if (!(864E5 > g.getTime() - d.getTime())) { var h = new VersionNumber($("#version").textContent); (new VersionNumber(f)).isNewerThan(h) && (d = g, gPopups.show($("#newVersionAvailable"))) } }) }; Util.setIntervalImmediate(function () { api.getVersion().then(e) },
                36E5); gtag("set", { past_days_played: c }); null == Store.getReferrerUrl() && Store.setReferrerUrl(document.referrer)
        }
    }); var Size = function (a, b) { this.width = a; this.height = b }, Ads = function () {
        var a = this; this._showAds = "true" != localStorage.getItem("squaredle-isPremium") && (["true", "skipped"].includes(localStorage.getItem("squaredle-didTutorial")) || location.href.includes("skipTutorial")) || location.href.includes("forceAds"); this._suppressTargetedAds = !cookiesRequireConsent() && !1 === getConsentCategories().get("targeting"); this._debouncingTimeout = -1; this._debounceCallback = function () {
            clearTimeout(a._debouncingTimeout); a._debouncingTimeout =
                setTimeout(function () { return a.resizeAdContainers() }, 500)
        }; this._setUp()
    }; Ads.prototype.canShowGdprDialog = function () { return !!window.__tcfapi }; Ads.prototype.showGdprDialog = function () { window.__tcfapi("displayConsentUi", 2, function () { }) }; Ads.prototype.resizeAdContainers = function () { this._resizeSidebars(); this._resizeBanners() };
    Ads.prototype._setUp = function () { var a = this; onReady(function () { if (!a._showAds) a._hideAds(); else if (!a._suppressTargetedAds) { var b = document.createElement("script"); b.setAttribute("async", ""); b.setAttribute("src", "https://portal.cdn.yollamedia.com/storage/tag/psf9727dbf56c0f11faf0b7eaf66f10c79c98a0506.js"); document.body.appendChild(b); window.addEventListener("resize", a._debounceCallback); a.resizeAdContainers() } }) };
    Ads.prototype._hideAds = function () { document.querySelector("#belowBoard").classList.add("noAd"); Array.from(document.querySelectorAll(".sidebar")).forEach(function (a) { return a.hidden = !0 }) };
    Ads.prototype._resizeSidebars = function () {
        for (var a = [new Size(300, 250), new Size(300, 600), new Size(160, 600), new Size(336, 280)], b = {}, c = $jscomp.makeIterator($$(".sidebar")), d = c.next(); !d.done; b = { $jscomp$loop$prop$maxWidth$163: b.$jscomp$loop$prop$maxWidth$163, $jscomp$loop$prop$maxHeight$164: b.$jscomp$loop$prop$maxHeight$164 }, d = c.next()) {
            d = d.value; d.querySelector(".premiumBtn"); d = d.querySelector(".viewport"); var e = d.querySelector(".ympb_target"); b.$jscomp$loop$prop$maxWidth$163 = d.offsetWidth; b.$jscomp$loop$prop$maxHeight$164 =
                d.offsetHeight; var f = a.filter(function (g) { return function (h) { return h.width <= g.$jscomp$loop$prop$maxWidth$163 && h.height <= g.$jscomp$loop$prop$maxHeight$164 } }(b)); 0 < f.length ? (f = f.map(function (g) { return g.width + "x" + g.height }).join(","), e && f == e.dataset.subtype || (e && e.remove(), e = document.createElement("div"), e.classList.add("ympb_target"), e.dataset.type = "desktop-medrec-template", e.dataset.subtype = f, d.appendChild(e), console.log("Sizes:", f))) : (e && e.remove(), console.log("Sidebar: No valid size found"))
        }
    };
    Ads.prototype._resizeBanners = function () {
        var a = [new Size(320, 100), new Size(300, 100), new Size(320, 50), new Size(300, 50)], b = $("#belowBoard"), c = b.querySelector(".viewport"); b = b.querySelectorAll(".ympb_target"); var d = c.offsetWidth, e = c.offsetHeight; a = a.filter(function (g) { return g.width <= d && g.height <= e }); if (0 < a.length) {
            if (a = a.map(function (g) { return g.width + "x" + g.height }).join(","), !b[0] || a != b[0].dataset.subtype) {
                var f = $jscomp.makeIterator(b); for (b = f.next(); !b.done; b = f.next())b.value.remove(); for (b = 0; 2 > b; b++)f =
                    document.createElement("div"), f.classList.add("ympb_target"), f.dataset.type = (0 == b ? "mobile" : "desktop") + "-leaderboard-template", f.dataset.subtype = a, c.appendChild(f); console.log("Banner sizes", a)
            }
        } else { c = $jscomp.makeIterator(b); for (b = c.next(); !b.done; b = c.next())b.value.remove(); console.log("Banner: No valid size found") }
    }; var gAds = new Ads;
})()
